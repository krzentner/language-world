['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# handle-pull-side: pull up the handle from the side
# def handle_pull_side(robot):
    # Steps:
    #  1. Put the gripper to the left of the handle
    #  2. Move the gripper to the handle
    #  3. Turn the gripper to wrap around the handle
    #  4. Pull up the handle
    # Move the gripper to the left of the handle.
    if check("the robot's gripper is not to the left of the handle"):
        robot.move("gripper to the left of the handle")
    # Move the gripper to the handle.
    if check("the robot's gripper is not near the handle"):
        robot.move("gripper to the handle")
    # Turn the gripper to wrap around the handle.
    if check("the robot's gripper is not wrapped around the handle"):
        robot.wrap("gripper around the handle")
    # Pull up the handle.
    if check("the robot's gripper is wrapped around the handle"):
        robot.pull("the handle up")
{'handle-pull-side': [("the robot's gripper is not to the left of the handle", 'move gripper to the left of the handle'), ("the robot's gripper is not near the handle", 'move gripper to the handle'), ("the robot's gripper is not wrapped around the handle", 'wrap gripper around the handle'), ("the robot's gripper is wrapped around the handle", 'pull the handle up')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is not near the handle", 'move gripper to left of window handle'), ("the robot's gripper is not around the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is not near the handle", 'move gripper to left of window handle'), ("the robot's gripper is not around the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is not near the handle", 'move gripper to left of window handle'), ("the robot's gripper is not around the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.06992022659880631
Success rates:
{
 "handle-pull-side": 0.0
}
