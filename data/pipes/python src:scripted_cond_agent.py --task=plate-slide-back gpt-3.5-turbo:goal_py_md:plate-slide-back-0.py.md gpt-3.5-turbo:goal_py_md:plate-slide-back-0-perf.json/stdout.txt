['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# plate-slide-back: slide the plate back into the target location
# def plate_slide_back(robot):
    # Steps:
    #  1. Put gripper above plate
    #  2. Grab the plate with the gripper
    #  3. Move the plate back to the target location
    # Since there is no specific guidance on where the plate is initially
    # positioned and how it should be moved, we can assume that the robot's
    # gripper is already near the plate and use a simple approach to slide it
    # back.
    # Move the gripper above the plate.
    if check("the robot's gripper is not above the plate"):
        robot.move_gripper("above the plate")
    # If the gripper is above the plate, grab it with the gripper.
    if check("the robot's gripper is above the plate and the robot's gripper is not around the plate"):
        robot.move_gripper("around the plate")
    # Move the plate back to the target location.
    if check("the robot's gripper is around the plate"):
        robot.move_gripper("above the target location")
{'plate-slide-back': [("the robot's gripper is not above the plate", "the robot's gripper is above the plate"), ("the robot's gripper is above the plate and the robot's gripper is not around the plate", "the robot's gripper is around the plate"), ("the robot's gripper is around the plate", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is not around the plate", 'drop gripper around puck'), ("the robot's gripper is around the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is not around the plate", 'drop gripper around puck'), ("the robot's gripper is around the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is not around the plate", 'drop gripper around puck'), ("the robot's gripper is around the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.259233465949921
Success rates:
{
 "plate-slide-back": 0.0
}
