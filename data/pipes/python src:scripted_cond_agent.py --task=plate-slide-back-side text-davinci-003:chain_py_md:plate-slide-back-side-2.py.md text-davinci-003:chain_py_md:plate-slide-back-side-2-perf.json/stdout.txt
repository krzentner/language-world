['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The program should look like this:
```
# plate-slide-back-side: slide the plate back sideways into the target location
# def plate_slide_back_side(robot):
    # Steps:
    #  1. Put gripper left of the plate
    #  2. Grab the plate with the gripper
    #  3. Push the plate backwards
    #  4. Slide the plate sideways to the target location
    # First, move the gripper to the left of the plate. 
    if check("the robot's gripper is not left of the plate"):
        robot.put("gripper to left of plate")
    # Then, grab the plate with the gripper.
    if check("the robot's gripper is not around plate"):
        robot.grab("plate")
    # If the plate is aligned with the gripper as seen from in front, we can 
    # push the plate backwards.
    if check("the robot's gripper is forward aligned with plate"):
        robot.push("plate back")
    # Then, slide the plate sideways to its target location. 
    if check("the robot's gripper is laterally aligned with plate"):
        robot.slide("plate to target")
```
{'plate-slide-back-side': [("the robot's gripper is not left of the plate", 'put gripper to left of plate'), ("the robot's gripper is not around plate", 'grab plate'), ("the robot's gripper is forward aligned with plate", 'push plate back'), ("the robot's gripper is laterally aligned with plate", 'slide plate to target')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the plate", 'move gripper to left of window handle'), ("the robot's gripper is not around the plate", 'grab peg'), ("the robot's gripper is forward aligned with the plate", 'push down on button'), ("the robot's gripper is vertically aligned with the plate", 'slide the puck to the goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the plate", 'move gripper to left of window handle'), ("the robot's gripper is not around the plate", 'grab peg'), ("the robot's gripper is forward aligned with the plate", 'push down on button'), ("the robot's gripper is vertically aligned with the plate", 'slide the puck to the goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.77
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the plate", 'move gripper to left of window handle'), ("the robot's gripper is not around the plate", 'grab peg'), ("the robot's gripper is forward aligned with the plate", 'push down on button'), ("the robot's gripper is vertically aligned with the plate", 'slide the puck to the goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.491989385321913
Success rates:
{
 "plate-slide-back-side": 0.77
}
