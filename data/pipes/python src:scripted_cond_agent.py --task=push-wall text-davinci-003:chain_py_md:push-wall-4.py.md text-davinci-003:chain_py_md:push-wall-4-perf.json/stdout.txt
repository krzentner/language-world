['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
  1. Put gripper above wall
  2. Push gripper against the wall in desired shovelling direction
  3. Push puck until it is past the wall

First, put the gripper up above the wall and line it up with the shoving direction.
if check("the robot's gripper is not above the wall and the robot's gripper is not aligned with the shoving direction"):
    robot.put("gripper above wall")

Once lined up, push the beat by pushing the gripper against the wall.
if check("the robot's gripper is aligned with the shoving direction and the robot's gripper is not pushing against the wall"):
    robot.push("gripper against wall")

Once the beat is pushed past the wall, continue pushing it towards the goal.
if check("the puck is past the wall and the robot's gripper is pushing against the wall"):
    robot.push("puck towards goal")
{'push-wall': [("the robot's gripper is not above the wall and the robot's gripper is not aligned with the shoving direction", 'put gripper above wall'), ("the robot's gripper is aligned with the shoving direction and the robot's gripper is not pushing against the wall", 'push gripper against wall'), ("the puck is past the wall and the robot's gripper is pushing against the wall", 'push puck towards goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall and the robot's gripper is not forward aligned with the target location", 'put gripper above button'), ("the robot's gripper is forward aligned with the target location and the robot's gripper is not in front of wall", 'push the gripper into the puck'), ("the puck is above wall and the robot's gripper is in front of wall", 'place puck at goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall and the robot's gripper is not forward aligned with the target location", 'put gripper above button'), ("the robot's gripper is forward aligned with the target location and the robot's gripper is not in front of wall", 'push the gripper into the puck'), ("the puck is above wall and the robot's gripper is in front of wall", 'place puck at goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall and the robot's gripper is not forward aligned with the target location", 'put gripper above button'), ("the robot's gripper is forward aligned with the target location and the robot's gripper is not in front of wall", 'push the gripper into the puck'), ("the puck is above wall and the robot's gripper is in front of wall", 'place puck at goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.3798030424370755
Success rates:
{
 "push-wall": 0.0
}
