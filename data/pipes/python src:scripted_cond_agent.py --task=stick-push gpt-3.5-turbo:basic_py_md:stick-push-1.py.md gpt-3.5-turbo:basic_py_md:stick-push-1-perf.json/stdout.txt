['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
```
# stick-push: use the stick to push the thermos to the target location
# def stick_push(robot):
    if check("the stick is not near the thermos"):
        robot.reach("the stick to the thermos")
    if check("the stick is near the thermos and the stick is not above the thermos"):
        robot.put("the stick above the thermos")
    if check("the stick is above the thermos and the stick is not aligned with the thermos horizontally"):
        robot.align("the stick with the thermos horizontally")
    if check("the stick is aligned with the thermos horizontally and the stick is not touching the thermos"):
        robot.touch("the thermos with the stick")
    if check("the stick is touching the thermos and the stick is not aligned with the target location horizontally"):
        robot.align("the stick with the target location horizontally")
    if check("the stick is aligned with the target location horizontally and the thermos is not touching the target location"):
        robot.push("the thermos to the target location using the stick")
``` 

Note that `check()` is a function that returns True or False, depending on whether a condition is met. It is not defined in the given code, so you will need to define it or use a different method to check whether a certain condition is met.
{'stick-push': [('the stick is not near the thermos', 'reach the stick to the thermos'), ('the stick is near the thermos and the stick is not above the thermos', 'put the stick above the thermos'), ('the stick is above the thermos and the stick is not aligned with the thermos horizontally', 'align the stick with the thermos horizontally'), ('the stick is aligned with the thermos horizontally and the stick is not touching the thermos', 'touch the thermos with the stick'), ('the stick is touching the thermos and the stick is not aligned with the target location horizontally', 'align the stick with the target location horizontally'), ('the stick is aligned with the target location horizontally and the thermos is not touching the target location', 'push the thermos to the target location using the stick')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos and the stick is not above the thermos', 'put the gripper above the puck'), ('the stick is above the thermos and the stick is not forward aligned with the thermos', 'slide the puck to the goal'), ('the stick is forward aligned with the thermos and the stick is not behind the thermos', 'push the gripper into the puck'), ('the stick is behind the thermos and the stick is not forward aligned with the target location', 'slide the puck to the goal'), ('the stick is forward aligned with the target location and the thermos is not behind the target location', 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos and the stick is not above the thermos', 'put the gripper above the puck'), ('the stick is above the thermos and the stick is not forward aligned with the thermos', 'slide the puck to the goal'), ('the stick is forward aligned with the thermos and the stick is not behind the thermos', 'push the gripper into the puck'), ('the stick is behind the thermos and the stick is not forward aligned with the target location', 'slide the puck to the goal'), ('the stick is forward aligned with the target location and the thermos is not behind the target location', 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos and the stick is not above the thermos', 'put the gripper above the puck'), ('the stick is above the thermos and the stick is not forward aligned with the thermos', 'slide the puck to the goal'), ('the stick is forward aligned with the thermos and the stick is not behind the thermos', 'push the gripper into the puck'), ('the stick is behind the thermos and the stick is not forward aligned with the target location', 'slide the puck to the goal'), ('the stick is forward aligned with the target location and the thermos is not behind the target location', 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.006295767951969942
Success rates:
{
 "stick-push": 0.0
}
