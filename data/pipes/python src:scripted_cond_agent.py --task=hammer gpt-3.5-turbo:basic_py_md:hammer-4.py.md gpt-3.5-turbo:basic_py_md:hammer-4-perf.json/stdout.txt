['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# hammer: hit the nail with the hammer
# def hammer(robot):
if check("the hammer is not in the robot's gripper"):
    robot.grab("the hammer")
if check("the hammer is in the robot's gripper and the robot's gripper is not above the nail"):
    robot.reach("the nail")
if check("the nail is in front of the robot's gripper and the hammer is above the nail"):
    robot.push("the hammer down onto the nail")
{'hammer': [("the hammer is not in the robot's gripper", 'grab the hammer'), ("the hammer is in the robot's gripper and the robot's gripper is not above the nail", 'reach the nail'), ("the nail is in front of the robot's gripper and the hammer is above the nail", 'push the hammer down onto the nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not behind the robot's gripper", 'grab peg'), ("the hammer is behind the robot's gripper and the robot's gripper is not above the hammer", 'reach to goal'), ("the hammer is in front of the robot's gripper and the hammer is above the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not behind the robot's gripper", 'grab peg'), ("the hammer is behind the robot's gripper and the robot's gripper is not above the hammer", 'reach to goal'), ("the hammer is in front of the robot's gripper and the hammer is above the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not behind the robot's gripper", 'grab peg'), ("the hammer is behind the robot's gripper and the robot's gripper is not above the hammer", 'reach to goal'), ("the hammer is in front of the robot's gripper and the hammer is above the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9242426854318133
Success rates:
{
 "hammer": 0.0
}
