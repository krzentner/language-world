['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# coffee-pull: grab the mug and pull it to the target location
# def coffee_pull(robot):
    # Steps:
    #  1. Put the gripper above the mug handle
    #  2. Open the gripper and drop it around the mug handle
    #  3. Close the gripper around the mug handle
    #  4. Pull the mug to the goal
    # First, put the gripper above the mug handle.
    if check("the robot's gripper is not above the mug handle"):
        robot.place("gripper above mug handle")
    # If the gripper isn't around the mug handle, put it around the mug handle.
    if check("the robot's gripper is not around mug handle" and "the robot's gripper is open"):
        robot.drop("gripper around mug handle")
    # If the gripper is near the mug handle and open, maybe we can grab it by closing
    # the gripper.
    if check("the robot's gripper is near mug handle and the robot's gripper is open"):
        robot.close("gripper around mug handle")
    # We closed the gripper, and the mug handle is still near the gripper, so maybe we
    # grabbed it.
    # Try to move the mug handle to the goal.
    # If we didn't grab it, we'll just go back to an earlier step.
    if check("the robot's gripper is above mug handle and the robot's gripper is closed"):
        robot.pull("mug to the goal")
{'coffee-pull': [("the robot's gripper is not above the mug handle", 'place gripper above mug handle'), ("the robot's gripper is near mug handle and the robot's gripper is open", 'close gripper around mug handle'), ("the robot's gripper is above mug handle and the robot's gripper is closed", 'pull mug to the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'place gripper above puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'slide the puck to the goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'place gripper above puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'slide the puck to the goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'place gripper above puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'slide the puck to the goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.24692150781460703
Success rates:
{
 "coffee-pull": 0.0
}
