['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# door-close: push the door closed to the target location
# def door_close(robot):
    # Steps:
    #  1. Put the gripper roughly on the door handle
    #  2. Push the door closed to the target location
    # If the gripper is not near the door handle, move the gripper to it.
    if check("the robot's gripper is not near the door handle"):
        robot.move_gripper("near the door handle")
    # If the gripper is near the door handle and not on it, move the gripper
    # onto the door handle.
    if check("the robot's gripper is near the door handle but not on it"):
        robot.move_gripper("around the door handle")
    # Once the gripper is on the door handle, we can push the door closed by
    # moving the gripper to the target location.
    if check("the robot's gripper is around the door handle"):
        robot.move_gripper("almost vertically aligned with the target location")
    # If the gripper is almost vertically aligned with the target location, we
    # can push the door closed.
    if check("the robot's gripper is almost vertically aligned with the target location"):
        robot.move_gripper("near the target location")
{'door-close': [("the robot's gripper is not near the door handle", "the robot's gripper is near the door handle"), ("the robot's gripper is near the door handle but not on it", "the robot's gripper is around the door handle"), ("the robot's gripper is around the door handle", "the robot's gripper is almost vertically aligned with the target location"), ("the robot's gripper is almost vertically aligned with the target location", "the robot's gripper is near the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'push the gripper into the puck'), ("the robot's gripper is near the door", 'drop gripper around puck'), ("the robot's gripper is around the door", 'put the gripper above the puck'), ("the robot's gripper is almost vertically aligned with the target location", 'push the gripper into the puck')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'push the gripper into the puck'), ("the robot's gripper is near the door", 'drop gripper around puck'), ("the robot's gripper is around the door", 'put the gripper above the puck'), ("the robot's gripper is almost vertically aligned with the target location", 'push the gripper into the puck')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'push the gripper into the puck'), ("the robot's gripper is near the door", 'drop gripper around puck'), ("the robot's gripper is around the door", 'put the gripper above the puck'), ("the robot's gripper is almost vertically aligned with the target location", 'push the gripper into the puck')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 8.702162844052069
Success rates:
{
 "door-close": 1.0
}
