['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Move the gripper to the dial
    #  2. Grab the dial with the gripper
    #  3. Turn the dial to the correct combination
    # First, move the gripper to the dial we need to turn.
    if check("the robot's gripper is not near the dial"):
        robot.move("gripper to dial")
    # Once the gripper is near the dial, grab it with the gripper.
    if check("the robot's gripper is near the dial and the robot's gripper is not around the dial"):
        robot.grab("dial")
    # Turn the dial to the correct combination by rotating it.
    if check("the robot's gripper is around the dial"):
        robot.rotate("dial to the correct combination")
{'door-lock': [("the robot's gripper is not near the dial", 'move gripper to dial'), ("the robot's gripper is near the dial and the robot's gripper is not around the dial", 'grab dial'), ("the robot's gripper is around the dial", 'rotate dial to the correct combination')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'move gripper to right of window handle'), ("the robot's gripper is near the door's lock and the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is around the door's lock", 'push the gripper into the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'move gripper to right of window handle'), ("the robot's gripper is near the door's lock and the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is around the door's lock", 'push the gripper into the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'move gripper to right of window handle'), ("the robot's gripper is near the door's lock and the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is around the door's lock", 'push the gripper into the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9246769639960918
Success rates:
{
 "door-lock": 0.0
}
