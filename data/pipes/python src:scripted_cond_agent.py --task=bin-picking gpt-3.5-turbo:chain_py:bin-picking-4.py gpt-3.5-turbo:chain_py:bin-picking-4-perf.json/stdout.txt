['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
#  1. Scan bin for cube
#  2. Put gripper above cube
#  3. Grab the cube with the gripper
#  4. Move the cube to the target bin
#  5. Release the cube into the bin
# We'll start by scanning the bin to find the cube.
if check("the cube is not in sight"):
    robot.scan("the bin")
# If the gripper isn't above the cube, move it into position.
if check("the robot's gripper is not above the cube"):
    robot.move("gripper above cube")
# If the gripper is open and above the cube, grab the cube.
if check("the robot's gripper is open and above the cube"):
    robot.grab("the cube")
# If the gripper is closed and not above the target bin, move the cube to the
# target bin.
if check("the robot's gripper is closed and the cube is not above the target bin"):
    robot.move("cube to target bin")
# If the gripper is closed and above the target bin, release the cube into it.
if check("the robot's gripper is closed and the cube is above the target bin"):
    robot.release("the cube into the target bin")
{'bin-picking': [('the cube is not in sight', 'scan the bin'), ("the robot's gripper is not above the cube", 'move gripper above cube'), ("the robot's gripper is open and above the cube", 'grab the cube'), ("the robot's gripper is closed and the cube is not above the target bin", 'move cube to target bin'), ("the robot's gripper is closed and the cube is above the target bin", 'release the cube into the target bin')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the cube is not behind the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is not above the cube", 'place gripper above puck'), ("the robot's gripper is not above the cube", 'grab peg'), ("the robot's gripper is closed and the cube is not above the robot's gripper", 'move gripper to right of window handle'), ("the robot's gripper is closed and the cube is above the robot's gripper", 'slide the puck to the goal')], env_name='bin-picking', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the cube is not behind the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is not above the cube", 'place gripper above puck'), ("the robot's gripper is not above the cube", 'grab peg'), ("the robot's gripper is closed and the cube is not above the robot's gripper", 'move gripper to right of window handle'), ("the robot's gripper is closed and the cube is above the robot's gripper", 'slide the puck to the goal')], env_name='bin-picking', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the cube is not behind the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is not above the cube", 'place gripper above puck'), ("the robot's gripper is not above the cube", 'grab peg'), ("the robot's gripper is closed and the cube is not above the robot's gripper", 'move gripper to right of window handle'), ("the robot's gripper is closed and the cube is above the robot's gripper", 'slide the puck to the goal')], env_name='bin-picking', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0968624357267966
Success rates:
{
 "bin-picking": 0.0
}
