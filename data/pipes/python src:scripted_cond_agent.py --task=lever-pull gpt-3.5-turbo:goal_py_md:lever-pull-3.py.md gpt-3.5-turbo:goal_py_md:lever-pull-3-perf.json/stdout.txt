['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    #  1. Put the gripper near the handle
    #  2. Grasp the handle with the gripper
    #  3. Turn the handle up
    # First, put the gripper near the handle
    if check("the robot's gripper is not near the handle"):
        robot.move_gripper("near the handle")
    # Check if the gripper is lined up with the handle.
    if check("the robot's gripper is not vertically aligned with the handle"):
        robot.move_gripper("vertically aligned with the handle", close_gripper=True)
    # After the gripper is aligned with the handle, turn the handle up by rotating
    # the gripper.
    if check("the robot's gripper is vertically aligned with the handle"):
        robot.rotate_gripper("up")
{'lever-pull': [("the robot's gripper is not near the handle", "the robot's gripper is near the handle"), ("the robot's gripper is not vertically aligned with the handle", "the robot's gripper is vertically aligned with the handle and the robot's gripper is closed"), ("the robot's gripper is vertically aligned with the handle", 'rotate_gripper up')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'push the gripper into the puck'), ("the robot's gripper is not vertically aligned with the lever", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the lever", 'drop gripper around puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'push the gripper into the puck'), ("the robot's gripper is not vertically aligned with the lever", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the lever", 'drop gripper around puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'push the gripper into the puck'), ("the robot's gripper is not vertically aligned with the lever", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the lever", 'drop gripper around puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5133330870028869
Success rates:
{
 "lever-pull": 1.0
}
