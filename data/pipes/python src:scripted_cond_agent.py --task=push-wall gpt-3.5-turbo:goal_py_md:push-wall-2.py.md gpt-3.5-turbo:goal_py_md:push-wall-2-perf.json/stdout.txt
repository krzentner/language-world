['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# push-wall: slide the puck to the target location with a small wall in the way
# def push_wall(robot):
    # Steps:
    #  1. Put gripper above puck
    #  2. Lift gripper over wall
    #  3. Push gripper into top of puck
    #  4. Slide puck to goal
    # If the wall is not in between the puck and the target location, perform the push function
    if check("the wall is not between the puck and the target location"):
        push(robot)
    else:
        # Move the gripper over the wall
        if check("the robot's gripper is not above the wall"):
            robot.move_gripper("above the wall")
        # Move the gripper down to the puck
        if check("the robot's gripper is above the wall and the robot's gripper is not near puck"):
            robot.move_gripper("above the puck", close_gripper=True)
        # If the gripper is near the puck, we've probably trapped the puck and can
        # slide it past the wall to the target location.
        # Close the gripper to make sure we keep control of the puck.
        if check("the robot's gripper is near the puck and the puck is below the robot's gripper"):
            robot.move_gripper("above the target location")
{'push-wall': [("the robot's gripper is not above the wall", "the robot's gripper is above the wall"), ("the robot's gripper is above the wall and the robot's gripper is not near puck", "the robot's gripper is above the puck and the robot's gripper is closed"), ("the robot's gripper is near the puck and the puck is below the robot's gripper", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.07857011079736112
Success rates:
{
 "push-wall": 0.0
}
