['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above lever
    #  2. Rotate lever upward
    # To start turning the lever, we need to align the gripper with the lever
    # when viewed from above.
    if check("the robot's gripper is not almost vertically aligned with lever"):
        robot.move_gripper("almost vertically aligned with the lever", close_gripper=True)
    # Once the gripper is lined up with the lever, we can start rotating it
    # upward.
    if check("the robot's gripper is vertically aligned with lever"):
        robot.move_gripper("right of the lever")

# valve-turn-left: turn the valve left
# def valve_turn_left(robot):
    # Steps:
    #  1. Put gripper in front of valve
    #  2. Start turning the valve left
    # We can start turning the valve by positioning the gripper roughly in front
    # of it.
    if check("the robot's gripper is not forward aligned with the valve"):
        robot.move_gripper("forward aligned with the valve", close_gripper=True)
    # Once the gripper is facing the valve we can start turning it left
    if check("the robot's gripper is forward aligned with the valve"):
        robot.move_gripper("left of the valve")
{'valve-turn-left': [("the robot's gripper is not forward aligned with the valve", "the robot's gripper is forward aligned with the valve and the robot's gripper is closed"), ("the robot's gripper is forward aligned with the valve", "the robot's gripper is left of the valve")], 'lever-pull': [("the robot's gripper is not almost vertically aligned with lever", "the robot's gripper is almost vertically aligned with the lever and the robot's gripper is closed"), ("the robot's gripper is vertically aligned with lever", "the robot's gripper is right of the lever")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not almost vertically aligned with the lever", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the lever", 'move gripper to right of window handle')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not almost vertically aligned with the lever", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the lever", 'move gripper to right of window handle')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not almost vertically aligned with the lever", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the lever", 'move gripper to right of window handle')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.057721156053799995
Success rates:
{
 "lever-pull": 0.0
}
