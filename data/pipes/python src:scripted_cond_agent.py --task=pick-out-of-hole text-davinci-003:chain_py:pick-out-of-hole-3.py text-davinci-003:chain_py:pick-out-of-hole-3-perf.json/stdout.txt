['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Line up gripper above hole
    #  2. Drop gripper around peg
    #  3. Close gripper around peg
    #  4. Lift peg out of hole
    # First, we need to get the gripper above the hole, so it can drop down and
    # trap the peg.
    if check("the robot's gripper is not above hole"):
        robot.put("gripper above hole")
    # Once the gripper is roughly above the hole, it should drop around the peg if the 
    # peg is there.
    if check("the robot's gripper is above hole and the robot's gripper is open"):
        robot.drop("gripper around peg")
    # If the gripper is already around the peg, it can just close around the peg.
    if check("the robot's gripper is around peg and the robot's gripper is open"):
        robot.close("gripper around peg")
    # Once the gripper is closed, we can lift the peg out of the hole.
    if check("the robot's gripper is closed and the peg is cleared from the hole"):
        robot.lift("peg from hole")
{'pick-out-of-hole': [("the robot's gripper is not above hole", 'put gripper above hole'), ("the robot's gripper is above hole and the robot's gripper is open", 'drop gripper around peg'), ("the robot's gripper is around peg and the robot's gripper is open", 'close gripper around peg'), ("the robot's gripper is closed and the peg is cleared from the hole", 'lift peg from hole')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is above the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is open and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is closed and the puck is near the robot's gripper", 'align peg to hole')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is above the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is open and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is closed and the puck is near the robot's gripper", 'align peg to hole')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is above the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is open and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is closed and the puck is near the robot's gripper", 'align peg to hole')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.04499906396534214
Success rates:
{
 "pick-out-of-hole": 0.0
}
