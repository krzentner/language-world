['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
```
# plate-slide-side: slide the plate sideways into the target location
# def plate_slide_side(robot):
    # Steps:
    #  1. Put gripper above plate
    #  2. Grab the plate with the gripper
    #  3. Move the plate towards the target while keeping it level
    # First, put the gripper above the plate.
    if check("the robot's gripper is not above the plate"):
        robot.place("gripper above plate")
    # If the gripper is not around the plate, grab it with the gripper.
    if check("the robot's gripper is not around plate and the robot's gripper is open"):
        robot.drop("gripper around plate")
    # If the gripper is near the plate and closed, move the plate to the target
    # location while keeping it level.
    if check("the robot's gripper is near plate and the robot's gripper is closed"):
        robot.slide("plate towards target while keeping it level")
```
{'plate-slide-side': [("the robot's gripper is not above the plate", 'place gripper above plate'), ("the robot's gripper is not around plate and the robot's gripper is open", 'drop gripper around plate'), ("the robot's gripper is near plate and the robot's gripper is closed", 'slide plate towards target while keeping it level')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is not around the plate and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the plate and the robot's gripper is closed", 'slide the puck to the goal')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is not around the plate and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the plate and the robot's gripper is closed", 'slide the puck to the goal')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is not around the plate and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the plate and the robot's gripper is closed", 'slide the puck to the goal')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.9165717100109685
Success rates:
{
 "plate-slide-side": 0.0
}
