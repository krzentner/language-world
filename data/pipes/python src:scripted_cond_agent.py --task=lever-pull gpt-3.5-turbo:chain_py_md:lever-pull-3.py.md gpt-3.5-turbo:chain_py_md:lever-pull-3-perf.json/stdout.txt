['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    # 1. Put gripper near the end of the lever
    # 2. Grab the end of the lever with the gripper
    # 3. Rotate the gripper up to pull the lever
    # 4. Release the lever
    # To begin, move the gripper near the end of the lever.
    if check("the robot's gripper is not near the end of the lever"):
        robot.move("gripper to end of lever")
    # Once the gripper is near the end of the lever, grab it.
    if check("the robot's gripper is near the end of the lever and the gripper is open"):
        robot.grab("end of the lever")
    # With the gripper around the lever, rotate the gripper up to pull the lever.
    if check("the gripper is around the lever"):
        robot.rotate("gripper up to pull the lever")
    # Finally, release the lever.
    if check("the gripper is rotated up and around the lever"):
        robot.release("the lever")
{'lever-pull': [("the robot's gripper is not near the end of the lever", 'move gripper to end of lever'), ("the robot's gripper is near the end of the lever and the gripper is open", 'grab end of the lever'), ('the gripper is around the lever', 'rotate gripper up to pull the lever'), ('the gripper is rotated up and around the lever', 'release the lever')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'move gripper to left of window handle'), ("the robot's gripper is near the lever and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the lever", 'put the gripper above the puck'), ("the robot's gripper is not around the lever", 'grab peg')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'move gripper to left of window handle'), ("the robot's gripper is near the lever and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the lever", 'put the gripper above the puck'), ("the robot's gripper is not around the lever", 'grab peg')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.1
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'move gripper to left of window handle'), ("the robot's gripper is near the lever and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the lever", 'put the gripper above the puck'), ("the robot's gripper is not around the lever", 'grab peg')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.2053188185753888
Success rates:
{
 "lever-pull": 0.1
}
