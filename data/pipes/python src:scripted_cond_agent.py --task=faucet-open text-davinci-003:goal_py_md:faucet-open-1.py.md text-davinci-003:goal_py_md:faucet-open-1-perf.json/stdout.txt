['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


# faucet-open: turn the faucet left
# def faucet_open(robot):
    # Steps:
    #  1. Put gripper left of the faucet
    #  2. Move the gripper up to the faucet handle
    #  3. Push the faucet handle to the left
    # We need to move the robot's gripper to the left of the faucet handle
    # before we can turn it.
    if check("the robot's gripper is not left of faucet handle"):
        robot.move_gripper("left of the faucet handle")
    # If the faucet handle is left of the robot's gripper, move the gripper
    # up to the faucet handle.
    if check("the robot's gripper is left of the faucet handle and the robot's gripper is not above the faucet handle"):
        robot.move_gripper("above the faucet handle", close_gripper=True)
    # Now that the gripper is either above or close to the faucet handle, we can
    # push the handle to the left.
    if check("the robot's gripper is above the faucet handle or the robot's gripper is near the faucet handle"):
        robot.move_gripper("left of the faucet handle")
{'faucet-open': [("the robot's gripper is not left of faucet handle", "the robot's gripper is left of the faucet handle"), ("the robot's gripper is left of the faucet handle and the robot's gripper is not above the faucet handle", "the robot's gripper is above the faucet handle and the robot's gripper is closed"), ("the robot's gripper is above the faucet handle or the robot's gripper is near the faucet handle", "the robot's gripper is left of the faucet handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the faucet", 'push the gripper into the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is not above the faucet", 'put the gripper above the puck'), ("the robot's gripper is above the faucet and the robot's gripper is near the faucet", 'push the gripper into the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the faucet", 'push the gripper into the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is not above the faucet", 'put the gripper above the puck'), ("the robot's gripper is above the faucet and the robot's gripper is near the faucet", 'push the gripper into the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the faucet", 'push the gripper into the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is not above the faucet", 'put the gripper above the puck'), ("the robot's gripper is above the faucet and the robot's gripper is near the faucet", 'push the gripper into the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.9692784396216125
Success rates:
{
 "faucet-open": 0.0
}
