['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):

# Steps:
#  1. Put gripper near the hole
#  2. Move the gripper down over the hole
#  3. Close the gripper around the peg
#  4. Lift the gripper out of the hole
#  5. Move the gripper to the target location

if check("the robot's gripper is not above the hole"):
    robot.move_gripper("near the hole")

if check("the robot's gripper is above the hole and the gripper is not around the peg"):
    robot.move_gripper("over the peg", close_gripper=True)

if check("the robot's gripper is around the peg"):
    robot.move_gripper("above the hole")

if check("the robot's gripper is above the hole and the gripper is open"):
    robot.move_gripper("above the target location", close_gripper=True)

# Done!
{'pick-out-of-hole': [("the robot's gripper is not above the hole", "the robot's gripper is near the hole"), ("the robot's gripper is above the hole and the gripper is not around the peg", "the robot's gripper is near over the peg and the robot's gripper is closed"), ("the robot's gripper is around the peg", "the robot's gripper is above the hole"), ("the robot's gripper is above the hole and the gripper is open", "the robot's gripper is above the target location and the robot's gripper is closed")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'push the gripper into the puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is open", 'put the gripper above the puck')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'push the gripper into the puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is open", 'put the gripper above the puck')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'push the gripper into the puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is open", 'put the gripper above the puck')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.012815025309307011
Success rates:
{
 "pick-out-of-hole": 0.0
}
