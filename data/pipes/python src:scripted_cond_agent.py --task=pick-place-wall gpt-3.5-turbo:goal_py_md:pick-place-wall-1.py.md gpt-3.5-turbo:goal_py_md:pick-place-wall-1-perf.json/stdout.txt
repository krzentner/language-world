['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way
# def pick_place_wall(robot):
    # Steps:
    #  1. Put gripper above puck
    #  2. Drop gripper around puck
    #  3. Close gripper around puck
    #  4. Lift puck up and over the wall
    #  5. Move puck to target location
    # If the wall is in the way of the robot's gripper, we need to first move the
    # gripper to the side of the wall.
    if check("the wall is between the robot's gripper and the puck"):
        robot.move_gripper("left of the wall")
    # First, put the gripper roughly above puck, so that we don't bump it while
    # trying to grab it.
    if check("the robot's gripper is not above the puck"):
        robot.move_gripper("above the puck")
    # If the gripper isn't around the puck, put it around the puck.
    if check("the robot's gripper is not around puck and the robot's gripper is open"):
        robot.move_gripper("near the puck", close_gripper=True)
    # If the gripper is near the puck and open, maybe we can grab it by closing
    # the gripper.
    if check("the robot's gripper is above puck and the robot's gripper is closed"):
        robot.move_gripper("above the wall")
    # If we can lift the puck over the wall, move it directly to the target location.
    if check("the robot's gripper is above the wall and the puck can be lifted over it"):
        robot.move_gripper("above the target location")
    # If we cannot lift the puck over the wall, move the gripper to the other side
    # of the wall so that it can grab the puck from there.
    if check("the robot's gripper is above the wall and the puck cannot be lifted over it"):
        robot.move_gripper("right of the wall")
        robot.move_gripper("vertically aligned with the puck")
        robot.move_gripper("near the puck", close_gripper=True)
        robot.move_gripper("above the wall")
        robot.move_gripper("above the target location")
{'pick-place-wall': [("the wall is between the robot's gripper and the puck", "the robot's gripper is left of the wall"), ("the robot's gripper is not above the puck", "the robot's gripper is above the puck"), ("the robot's gripper is not around puck and the robot's gripper is open", "the robot's gripper is near the puck and the robot's gripper is closed"), ("the robot's gripper is above puck and the robot's gripper is closed", "the robot's gripper is above the wall"), ("the robot's gripper is above the wall and the puck can be lifted over it", "the robot's gripper is above the target location"), ("the robot's gripper is above the wall and the puck cannot be lifted over it", "the robot's gripper is right of the wall")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("wall is below the robot's gripper and the puck is near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above wall and the puck is left of wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the puck is not left of wall", 'put the gripper in front of the drawer')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("wall is below the robot's gripper and the puck is near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above wall and the puck is left of wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the puck is not left of wall", 'put the gripper in front of the drawer')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("wall is below the robot's gripper and the puck is near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above wall and the puck is left of wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the puck is not left of wall", 'put the gripper in front of the drawer')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Success rates:
{
 "pick-place-wall": 0.0
}
