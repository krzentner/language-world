['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
  1. Put gripper right of the plate 
  2. Grab the plate with the gripper
  3. Line the plate up with the target location 
  4. Slide the plate sideways into the target location 

```
# plate-slide-side: slide the plate sideways into the target location
# def plate_slide_side(robot):
    # Steps:
    #  1. Put gripper right of the plate 
    #  2. Grab the plate with the gripper
    #  3. Line the plate up with the target location 
    #  4. Slide the plate sideways into the target location
    # First, put the gripper to the right of the plate.
    if check("the robot's gripper is not right of the plate"):
        robot.move_gripper("right of the plate")
    # If the gripper is now left of the plate, move it back above the plate.
    if check("the robot's gripper is left of the plate"):
        robot.move_gripper("vertically aligned with the plate")
    # Now that the gripper is lining up with the plate, try to grab it by
    # closing the gripper.
    if check("the robot's gripper is vertically aligned with plate and the robot's gripper is not around plate"):
        robot.move_gripper("forward aligned with the plate", close_gripper=True)
    # If the plate is aligned with the target location, we can attempt to
    # slide it sideways.
    if check("the plate is forward aligned with target location"):
        robot.move_gripper("horizontally aligned with target location")
    # If the plate is not yet aligned with the target location, rotate it until
    # it is.
    if check("the plate is not horizontally aligned with target location"):
        robot.move_gripper("forward aligned with target location")
{'plate-slide-side': [("the robot's gripper is not right of the plate", "the robot's gripper is right of the plate"), ("the robot's gripper is left of the plate", "the robot's gripper is vertically aligned with the plate"), ("the robot's gripper is vertically aligned with plate and the robot's gripper is not around plate", "the robot's gripper is forward aligned with the plate and the robot's gripper is closed"), ('the plate is forward aligned with target location', "the robot's gripper is horizontally aligned with target location"), ('the plate is not horizontally aligned with target location', "the robot's gripper is forward aligned with target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the plate", 'move gripper to right of window handle'), ("the robot's gripper is left of the plate", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the plate and the robot's gripper is not around the plate", 'put the gripper in front of the drawer'), ("the plate is forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the plate is not horizontally aligned with the robot's gripper", 'push the gripper into the puck')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the plate", 'move gripper to right of window handle'), ("the robot's gripper is left of the plate", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the plate and the robot's gripper is not around the plate", 'put the gripper in front of the drawer'), ("the plate is forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the plate is not horizontally aligned with the robot's gripper", 'push the gripper into the puck')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the plate", 'move gripper to right of window handle'), ("the robot's gripper is left of the plate", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the plate and the robot's gripper is not around the plate", 'put the gripper in front of the drawer'), ("the plate is forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the plate is not horizontally aligned with the robot's gripper", 'push the gripper into the puck')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.1082599684670187
Success rates:
{
 "plate-slide-side": 0.0
}
