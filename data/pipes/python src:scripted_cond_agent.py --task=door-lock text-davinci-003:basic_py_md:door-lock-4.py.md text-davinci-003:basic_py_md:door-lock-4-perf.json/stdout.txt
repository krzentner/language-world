['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Solution:

```
# door-lock: turn the dial on the door
# def door_lock(robot):
    if check("the robot's gripper is not above the doorknob"):
        robot.put("gripper above the doorknob")
    if check("the robot's gripper is not horizontally aligned with the doorknob"):
        robot.align("gripper horizontally with the doorknob")
    if check("the robot's gripper is horizontally aligned with the doorknob"):
        robot.turn("dial clockwise or counterclockwise to lock or unlock the door")
```
{'door-lock': [("the robot's gripper is not above the doorknob", 'put gripper above the doorknob'), ("the robot's gripper is not horizontally aligned with the doorknob", 'align gripper horizontally with the doorknob'), ("the robot's gripper is horizontally aligned with the doorknob", 'turn dial clockwise or counterclockwise to lock or unlock the door')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not horizontally aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the door's lock", 'insert peg into hole')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not horizontally aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the door's lock", 'insert peg into hole')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.98
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not horizontally aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the door's lock", 'insert peg into hole')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.9785107929114645
Success rates:
{
 "door-lock": 0.98
}
