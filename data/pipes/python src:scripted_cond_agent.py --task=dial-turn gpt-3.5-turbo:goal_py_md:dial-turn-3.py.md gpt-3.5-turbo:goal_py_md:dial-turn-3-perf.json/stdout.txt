['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# dial-turn: turn the dial
# def dial_turn(robot):
    # Steps:
    #  1. Put gripper near the dial
    #  2. Turn the dial
    # First, put the gripper near the dial.
    if check("the robot's gripper is not near the dial"):
        robot.move_gripper("near the dial")
    # If the gripper is near the dial, turn the dial.
    if check("the robot's gripper is near the dial"):
        robot.rotate_gripper("clockwise") # Or counterclockwise if turning the other way.
{'dial-turn': [("the robot's gripper is not near the dial", "the robot's gripper is near the dial"), ("the robot's gripper is near the dial", 'rotate_gripper clockwise')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the dial", 'push the gripper into the puck'), ("the robot's gripper is near the dial", 'place gripper above puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the dial", 'push the gripper into the puck'), ("the robot's gripper is near the dial", 'place gripper above puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the dial", 'push the gripper into the puck'), ("the robot's gripper is near the dial", 'place gripper above puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Success rates:
{
 "dial-turn": 1.0
}
