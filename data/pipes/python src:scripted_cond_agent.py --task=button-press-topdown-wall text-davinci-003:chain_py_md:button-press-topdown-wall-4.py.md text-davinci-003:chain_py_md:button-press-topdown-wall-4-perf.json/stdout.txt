['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Solution:

```
# button-press-topdown-wall: push the button down from above with a short wall in the way
# def button_press_topdown_wall(robot):
    # Steps:
    #  1. Put gripper above the wall
    #  2. Drop gripper around the top of the wall, above the button
    #  3. Push down on the button from above, over the wall
    # Start by putting the gripper above the wall, so that we don't catch the
    # wall.
    if check("the robot's gripper is not above the wall"):
        robot.put("gripper above wall")
    # We need the gripper to be around the top of the wall, so move it up and
    # around the wall until it is above the button.
    if check("the robot's gripper is not around the top of the wall and the robot's gripper is open"):
        robot.drop("gripper around the top of the wall")
    # As long as the button is still left of the robot's gripper, we can press
    # down on the button from above the wall.
    if check("the button is left of the robot's gripper"):
        robot.push("down on button from above the wall")
```
{'button-press-topdown-wall': [("the robot's gripper is not above the wall", 'put gripper above wall'), ("the robot's gripper is not around the top of the wall and the robot's gripper is open", 'drop gripper around the top of the wall'), ("the button is left of the robot's gripper", 'push down on button from above the wall')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put gripper above button'), ("the robot's gripper is not around wall and the robot's gripper is open", 'drop gripper around puck'), ("the button is left of the robot's gripper", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put gripper above button'), ("the robot's gripper is not around wall and the robot's gripper is open", 'drop gripper around puck'), ("the button is left of the robot's gripper", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put gripper above button'), ("the robot's gripper is not around wall and the robot's gripper is open", 'drop gripper around puck'), ("the button is left of the robot's gripper", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.1494348696592773
Success rates:
{
 "button-press-topdown-wall": 0.0
}
