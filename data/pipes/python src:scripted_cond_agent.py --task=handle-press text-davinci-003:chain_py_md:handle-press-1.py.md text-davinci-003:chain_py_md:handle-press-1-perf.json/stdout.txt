['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then, our program can look like this: 

```
# handle-press: push down the handle
# def handle_press(robot):
    # Steps:
    #  1. Put the gripper above the handle
    #  2. Drop down the gripper around the handle
    #  3. Push down on the handle
    # First, put the gripper roughly above the handle.
    if check("the robot's gripper is not above the handle"):
        robot.put("gripper above handle")
    # We can see the handle from above, so if the gripper is near it but not
    # around it, drop the gripper around it.
    if check("the robot's gripper is not around the handle and the robot's gripper is near the handle"):
        robot.drop("gripper around handle")
    # Once the gripper is around the handle, we can just push down on the
    # handle.
    if check("the robot's gripper is around handle"):
        robot.push("down on handle")
```
{'handle-press': [("the robot's gripper is not above the handle", 'put gripper above handle'), ("the robot's gripper is not around the handle and the robot's gripper is near the handle", 'drop gripper around handle'), ("the robot's gripper is around handle", 'push down on handle')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put gripper above button'), ("the robot's gripper is not around the handle and the robot's gripper is near the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put gripper above button'), ("the robot's gripper is not around the handle and the robot's gripper is near the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put gripper above button'), ("the robot's gripper is not around the handle and the robot's gripper is near the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.978244044967623
Success rates:
{
 "handle-press": 1.0
}
