['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Solution:

```
# door-unlock: turn the dial on the door
# def door_unlock(robot):
    # Steps:
    #  1. Put the gripper above the dial
    #  2. Grab the dial with the gripper
    #  3. Rotate the dial to unlock
    # First, put the gripper above the dial.
    if check("the robot's gripper is not vertically aligned with the dial"):
        robot.put("gripper above dial")
    # Once the gripper is lined up, grab the dial.
    if check("the robot's gripper is vertically aligned with the dial and the robot's gripper is not around dial"):
        robot.grab("dial")
    # As long as the gripper is still around the dial, rotate the dial to unlock
    if check("the robot's gripper is above dial and the robot's gripper is closed"):
        robot.rotate("dial to unlock")
```
{'door-unlock': [("the robot's gripper is not vertically aligned with the dial", 'put gripper above dial'), ("the robot's gripper is vertically aligned with the dial and the robot's gripper is not around dial", 'grab dial'), ("the robot's gripper is above dial and the robot's gripper is closed", 'rotate dial to unlock')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put gripper above button'), ("the robot's gripper is vertically aligned with the door's lock and the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is open and the robot's gripper is closed", 'grab peg')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put gripper above button'), ("the robot's gripper is vertically aligned with the door's lock and the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is open and the robot's gripper is closed", 'grab peg')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put gripper above button'), ("the robot's gripper is vertically aligned with the door's lock and the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is open and the robot's gripper is closed", 'grab peg')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.6012213308925785
Success rates:
{
 "door-unlock": 1.0
}
