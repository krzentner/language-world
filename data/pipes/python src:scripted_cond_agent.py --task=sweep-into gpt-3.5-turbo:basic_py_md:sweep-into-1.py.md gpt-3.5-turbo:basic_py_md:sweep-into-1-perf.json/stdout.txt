['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# sweep-into: grab the cube and move it to the target location
# def sweep_into(robot):
    if check("the robot's gripper is not above the cube"):
        robot.place("gripper above cube")
    if check("the robot's gripper is not around cube and the robot's gripper is open"):
        robot.drop("gripper around cube")
    if check("the robot's gripper is near cube and the robot's gripper is open"):
        robot.close("gripper around cube")
    if check("the robot's gripper is above cube and the cube is not at the target location"):
        # First, sweep the cube into the gripper
        sweep_cube_into_gripper(robot)
        # Then, move the gripper to the target location
        robot.reach("to target location")
        # Drop the cube at the target location
        robot.open("the gripper")

def sweep_cube_into_gripper(robot):
    # Move the gripper to one side of the cube
    robot.move("gripper to the left of cube")
    # Align the gripper with the cube
    robot.align("gripper with cube")
    # Close the gripper around the cube
    robot.close("gripper around cube")
    # Move the gripper and cube to the other side of the table
    robot.slide("gripper and cube to the right")
{'sweep-into': [("the robot's gripper is not above the cube", 'place gripper above cube'), ("the robot's gripper is not around cube and the robot's gripper is open", 'drop gripper around cube'), ("the robot's gripper is near cube and the robot's gripper is open", 'close gripper around cube')], 'sweep-cube-into-gripper': []}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'place gripper above puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the cube and the robot's gripper is open", 'close gripper around puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'place gripper above puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the cube and the robot's gripper is open", 'close gripper around puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.52
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'place gripper above puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the cube and the robot's gripper is open", 'close gripper around puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.499270514725644
Success rates:
{
 "sweep-into": 0.52
}
