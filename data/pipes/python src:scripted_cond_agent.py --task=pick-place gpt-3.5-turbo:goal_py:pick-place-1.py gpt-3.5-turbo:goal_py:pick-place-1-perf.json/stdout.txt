['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
Since we already have a `pick_place` function defined above for picking up and holding a puck, we can reuse that code for picking up an object and placing it at a target location. We just need to update the comments to reflect the general nature of the function.

# pick-place: pick up an object and hold it at the target location
# def pick_place(robot):
    # Steps:
    #  1. Put gripper above the object
    #  2. Grab the object with the gripper
    #  3. Move the gripper to the target location
    # First, put the gripper above the object.
    if check("the robot's gripper is not above the object"):
        robot.move_gripper("above the object")
    # If the gripper isn't around the object, put it around the object.
    if check("the robot's gripper is not around the object and the robot's gripper is open"):
        robot.move_gripper("near the object", close_gripper=True)
    # If the gripper is near the object and closed, move it to the target
    # location.
    if check("the robot's gripper is near the object and the object is below the robot's gripper"):
        robot.move_gripper("above the target location")
{'pick-place': [("the robot's gripper is not above the object", "the robot's gripper is above the object"), ("the robot's gripper is not around the object and the robot's gripper is open", "the robot's gripper is near the object and the robot's gripper is closed"), ("the robot's gripper is near the object and the object is below the robot's gripper", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.021477574473338566
Success rates:
{
 "pick-place": 0.0
}
