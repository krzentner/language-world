['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):
    if check("the robot's gripper is not vertically aligned with the hole"):
        robot.put("gripper above hole")
    if check("the robot's gripper is aligned with the hole"):
        robot.push("gripper into hole")
    if check("the robot's gripper is around the peg"):
        robot.lift("peg out of hole")
    if check("the robot's gripper is not above the target location"):
        robot.move("gripper to target location")
    if check("the robot's gripper is above the target location"):
        robot.place("peg at target location")
{'pick-out-of-hole': [("the robot's gripper is not vertically aligned with the hole", 'put gripper above hole'), ("the robot's gripper is aligned with the hole", 'push gripper into hole'), ("the robot's gripper is around the peg", 'lift peg out of hole'), ("the robot's gripper is not above the target location", 'move gripper to target location'), ("the robot's gripper is above the target location", 'place peg at target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is forward aligned with the puck", 'push the gripper into the puck'), ("the robot's gripper is around the puck", 'align peg to hole'), ("the robot's gripper is not above the target location", 'move gripper to right of window handle'), ("the robot's gripper is above the target location", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is forward aligned with the puck", 'push the gripper into the puck'), ("the robot's gripper is around the puck", 'align peg to hole'), ("the robot's gripper is not above the target location", 'move gripper to right of window handle'), ("the robot's gripper is above the target location", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is forward aligned with the puck", 'push the gripper into the puck'), ("the robot's gripper is around the puck", 'align peg to hole'), ("the robot's gripper is not above the target location", 'move gripper to right of window handle'), ("the robot's gripper is above the target location", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.014641295517643482
Success rates:
{
 "pick-out-of-hole": 0.0
}
