['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# door-close: push the door closed to the target location
# def door_close(robot):
    # Steps:
    # 1. Put the gripper near the door knob
    # 2. Turn the gripper to grab the knob
    # 3. Push the door towards the target location
    # First, we need to move the gripper close to the door knob. 
    if check("the robot's gripper is not near the door knob"):
        robot.move("gripper to door knob")
    # Next, turn the gripper to grab the knob. 
    if check("the robot's gripper is near the door knob and the robot's gripper is not turning to grab the knob"):
        robot.turn("gripper to grab knob")
    # Finally, we can push the door towards the target location. 
    if check("the robot's gripper is grabbing the knob"):
        robot.push("door towards target location")
{'door-close': [("the robot's gripper is not near the door knob", 'move gripper to door knob'), ("the robot's gripper is near the door knob and the robot's gripper is not turning to grab the knob", 'turn gripper to grab knob'), ("the robot's gripper is grabbing the knob", 'push door towards target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'move gripper to left of window handle'), ("the robot's gripper is near the door and the robot's gripper is not right of the door", 'move gripper to right of window handle'), ("the robot's gripper is behind the door", 'slide the puck to the goal')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'move gripper to left of window handle'), ("the robot's gripper is near the door and the robot's gripper is not right of the door", 'move gripper to right of window handle'), ("the robot's gripper is behind the door", 'slide the puck to the goal')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'move gripper to left of window handle'), ("the robot's gripper is near the door and the robot's gripper is not right of the door", 'move gripper to right of window handle'), ("the robot's gripper is behind the door", 'slide the puck to the goal')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.24203346174704332
Success rates:
{
 "door-close": 0.0
}
