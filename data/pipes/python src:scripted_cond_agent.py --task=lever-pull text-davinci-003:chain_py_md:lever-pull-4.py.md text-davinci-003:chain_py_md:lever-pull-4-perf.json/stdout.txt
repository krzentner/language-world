['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then, add the necessary code:

```
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    #  1. Put the gripper on the side of the lever
    #  2. Close the gripper around the lever
    #  3. Pull the lever up
    # We need to put the gripper to the side of the lever to make sure that it
    # grabs the lever securely. 
    if check("the robot's gripper is not sideways aligned with lever"):
        robot.put("gripper to side of lever")
    # Now that the gripper is at the side of the lever, close it around the lever.
    if check("the robot's gripper is sideways aligned with lever and the gripper is open"):
        robot.close("gripper around lever")
    # Now that the gripper is closed around the lever, try to pull the lever up.
    if check("the robot's gripper is close to the lever and closed"):
        robot.pull("lever up")
``
{'lever-pull': [("the robot's gripper is not sideways aligned with lever", 'put gripper to side of lever'), ("the robot's gripper is sideways aligned with lever and the gripper is open", 'close gripper around lever'), ("the robot's gripper is close to the lever and closed", 'pull lever up')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the lever", 'put gripper above button'), ("the robot's gripper is forward aligned with the lever and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is left of the lever", 'pull door open')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the lever", 'put gripper above button'), ("the robot's gripper is forward aligned with the lever and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is left of the lever", 'pull door open')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the lever", 'put gripper above button'), ("the robot's gripper is forward aligned with the lever and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is left of the lever", 'pull door open')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.13421860500501867
Success rates:
{
 "lever-pull": 0.0
}
