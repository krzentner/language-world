['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Move gripper above the cube
    #  2. Grab the cube
    #  3. Move the cube sideways to the target location
    # First, move the gripper above the cube, if it isn't already.
    if check("the robot's gripper is not above the cube"):
        robot.move_gripper("above the cube", close_gripper=True)
    # If the cube is still above the gripper but the gripper is open, maybe
    # we can grab it by closing the gripper.
    if check("the robot's gripper is above the cube and the robot's gripper is open"):
        robot.move_gripper("above the cube", close_gripper=True)
    # Now that the cube is in the gripper, we can move the cube sideways to
    # the target position.
    if check("the robot's gripper is above the cube and the robot's gripper is closed"):
        robot.move_gripper("above the target location")
{'sweep': [("the robot's gripper is not above the cube", "the robot's gripper is above the cube and the robot's gripper is closed"), ("the robot's gripper is above the cube and the robot's gripper is open", "the robot's gripper is above the cube and the robot's gripper is closed"), ("the robot's gripper is above the cube and the robot's gripper is closed", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'put the gripper above the puck')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'put the gripper above the puck')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'put the gripper above the puck')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.3076271039851414
Success rates:
{
 "sweep": 0.0
}
