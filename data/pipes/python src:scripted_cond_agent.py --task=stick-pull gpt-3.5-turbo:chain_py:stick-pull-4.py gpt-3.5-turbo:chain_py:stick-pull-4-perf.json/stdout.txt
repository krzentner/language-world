['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put one end of the stick near the thermos
    #  2. Use the stick to hook onto the handle of the thermos
    #  3. Pull the stick back towards the target location, dragging the thermos
    # First, put one end of the stick close to the thermos.
    if check("one end of the stick is not near the thermos"):
        robot.move("one end of the stick close to the thermos")
    # Once the stick is close enough, use the other end of the stick to hook onto
    # the handle of the thermos.
    if check("one end of the stick is near the thermos but the stick is not hooked onto the thermos handle"):
        robot.hook("the stick onto the thermos handle")
    # With the stick hooked on, pull the stick back towards the target location
    # to drag the thermos.
    if check("the stick is hooked onto the thermos handle"):
        robot.pull("the stick back towards the target location, dragging the thermos")
{'stick-pull': [('one end of the stick is not near the thermos', 'move one end of the stick close to the thermos'), ('one end of the stick is near the thermos but the stick is not hooked onto the thermos handle', 'hook the stick onto the thermos handle'), ('the stick is hooked onto the thermos handle', 'pull the stick back towards the target location, dragging the thermos')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos and the stick is not in front of the thermos', 'slide the puck to the goal'), ('the stick is in front of the thermos', 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos and the stick is not in front of the thermos', 'slide the puck to the goal'), ('the stick is in front of the thermos', 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos and the stick is not in front of the thermos', 'slide the puck to the goal'), ('the stick is in front of the thermos', 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0063480200619146195
Success rates:
{
 "stick-pull": 0.0
}
