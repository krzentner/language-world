['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Once the gripper is near the wall, the robot should reach around it.

# reach-wall: reach to the target location with a short wall in the way
# def reach_wall(robot):
    # Steps:
    #  1. Reach towards the wall
    #  2. Reach around the wall
    #  3. Reach to the target
    # 
    # First, reach towards the wall. We don't have any objects to manipulate, so
    # we can just move the robot's gripper directly to the wall.
    if check("the robot's gripper is not near the wall"):
        robot.move_gripper("near the wall")
    # Now that the gripper is near the wall, position the gripper so that it is
    # parallel to the wall and reach around it.
    if check("the robot's gripper is not parallel to the wall"):
        robot.move_gripper("parallel to the wall")
    # Now that the gripper is parallel to the wall, move it around the wall to
    # the target.
    if check("the robot's gripper is not near the target"):
        robot.move_gripper("around the wall to the target")
{'reach-wall': [("the robot's gripper is not near the wall", "the robot's gripper is near the wall"), ("the robot's gripper is not parallel to the wall", "the robot's gripper is near parallel to the wall"), ("the robot's gripper is not near the target", "the robot's gripper is around the wall to the target")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not left of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not near the target location", 'put the gripper in front of the drawer')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not left of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not near the target location", 'put the gripper in front of the drawer')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not left of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not near the target location", 'put the gripper in front of the drawer')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5847585761916649
Success rates:
{
 "reach-wall": 0.0
}
