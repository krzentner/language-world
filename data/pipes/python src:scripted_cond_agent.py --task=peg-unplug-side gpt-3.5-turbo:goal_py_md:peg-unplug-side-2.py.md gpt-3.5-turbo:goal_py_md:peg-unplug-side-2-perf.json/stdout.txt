['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# peg-unplug-side: pull the peg out from the side
# def peg_unplug_side(robot):
    # Steps:
    #  1. Put gripper above the peg
    #  2. Grab the peg with the gripper
    #  3. Line the peg up to the direction to remove the peg
    #  4. Pull the peg out from the hole
    # First, put the gripper above the peg.
    if check("the robot's gripper is not vertically aligned with the peg"):
        robot.move_gripper("vertically aligned with the peg")
    # If the peg is not near the gripper, move the gripper near to the peg
    # and grab the peg
    if check("the robot's gripper is not around the peg" or "the robot's gripper is open"):
        robot.move_gripper("near the peg", close_gripper=True)
    # If the peg is held by the gripper, start moving towards to the direction
    # to remove the peg.
    if check("the robot's gripper is around the peg"):
        robot.move_gripper("roughly aligned with the direction to remove the peg")
    # Once the gripper is aligned with the direction to remove the peg, pull the
    # peg outwards.
    if check("the robot's gripper is aligned with the direction to remove the peg"):
        robot.move_gripper("out of the hole")
{'peg-unplug-side': [("the robot's gripper is not vertically aligned with the peg", "the robot's gripper is vertically aligned with the peg"), ("the robot's gripper is around the peg", "the robot's gripper is near roughly aligned with the direction to remove the peg"), ("the robot's gripper is aligned with the direction to remove the peg", "the robot's gripper is near out of the hole")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the robot's gripper is around the peg", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the peg", 'put the gripper in front of the drawer')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the robot's gripper is around the peg", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the peg", 'put the gripper in front of the drawer')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.27
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the robot's gripper is around the peg", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the peg", 'put the gripper in front of the drawer')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.10327910769241261
Success rates:
{
 "peg-unplug-side": 0.27
}
