['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put the gripper above the plate
    #  2. Push the gripper forward to grab the plate
    #  3. Slide the plate back into the location
    # First, put the gripper above the plate.
    if check("the robot's gripper is not above the plate"):
        robot.move_gripper("above the plate", close_gripper=True)
    # Now that the gripper is above the plate, we can slide the gripper forward
    # and grab the plate.
    if check("the robot's gripper is ahead of the plate"):
        robot.move_gripper("horizontally aligned with the plate")
    # Once the gripper is around the plate, we can slide the plate back.
    if check("the robot's gripper is horizontally aligned with the plate"):
        robot.move_gripper("above the target location")
{'plate-slide-back': [("the robot's gripper is not above the plate", "the robot's gripper is above the plate and the robot's gripper is closed"), ("the robot's gripper is ahead of the plate", "the robot's gripper is horizontally aligned with the plate"), ("the robot's gripper is horizontally aligned with the plate", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is left of the plate", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is left of the plate", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is left of the plate", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9670710782824327
Success rates:
{
 "plate-slide-back": 0.0
}
