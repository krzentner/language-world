['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put gripper above faucet knob
    #  2. Grab onto the knob
    #  3. Turn the knob left to open the faucet
    # Align the gripper vertically with the faucet knob.
    if check("the robot's gripper is not vertically aligned with faucet knob"):
        robot.move_gripper("vertically aligned with the faucet knob")
    # Turn the knob left to open the faucet.
    if check("the robot's gripper is near the faucet knob and the faucet knob is not turned left"):
        robot.move_gripper("horizontally aligned with the faucet knob")
    # If the knob is turned partially left, keep turning the knob left until
    # we've fully opened the faucet.
    if check("the robot's gripper is near the faucet knob and the faucet knob is turned partially left"):
        robot.move_gripper("horizontally aligned with the faucet knob", close_gripper=True)

# faucet-close: turn the faucet right
# def faucet_close(robot):
    # Steps:
    #  1. Put gripper above faucet knob
    #  2. Grab onto the knob
    #  3. Turn the knob right to close the faucet
    # Align the gripper vertically with the faucet knob.
    if check("the robot's gripper is not vertically aligned with faucet knob"):
        robot.move_gripper("vertically aligned with the faucet knob")
    # Turn the knob right to close the faucet.
    if check("the robot's gripper is near the faucet knob and the faucet knob is not turned right"):
        robot.move_gripper("horizontally aligned with the faucet knob")
    # If the knob is turned partially left, keep turning the knob left until
    # we've fully opened the faucet.
    if check("the robot's gripper is near the faucet knob and the faucet knob is turned partially right"):
        robot.move_gripper("horizontally aligned with the faucet knob", close_gripper=True)
{'faucet-close': [("the robot's gripper is not vertically aligned with faucet knob", "the robot's gripper is vertically aligned with the faucet knob"), ("the robot's gripper is near the faucet knob and the faucet knob is not turned right", "the robot's gripper is horizontally aligned with the faucet knob"), ("the robot's gripper is near the faucet knob and the faucet knob is turned partially right", "the robot's gripper is horizontally aligned with the faucet knob and the robot's gripper is closed")], 'faucet-open': [("the robot's gripper is not vertically aligned with faucet knob", "the robot's gripper is vertically aligned with the faucet knob"), ("the robot's gripper is near the faucet knob and the faucet knob is not turned left", "the robot's gripper is horizontally aligned with the faucet knob"), ("the robot's gripper is near the faucet knob and the faucet knob is turned partially left", "the robot's gripper is horizontally aligned with the faucet knob and the robot's gripper is closed")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'push the gripper into the puck'), ("the robot's gripper is near the faucet and faucet is not touching the table", 'push the gripper into the puck'), ("the robot's gripper is near the faucet and the faucet is near the robot's gripper", 'put the gripper in front of the drawer')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'push the gripper into the puck'), ("the robot's gripper is near the faucet and faucet is not touching the table", 'push the gripper into the puck'), ("the robot's gripper is near the faucet and the faucet is near the robot's gripper", 'put the gripper in front of the drawer')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'push the gripper into the puck'), ("the robot's gripper is near the faucet and faucet is not touching the table", 'push the gripper into the puck'), ("the robot's gripper is near the faucet and the faucet is near the robot's gripper", 'put the gripper in front of the drawer')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.148415111700935
Success rates:
{
 "faucet-open": 0.0
}
