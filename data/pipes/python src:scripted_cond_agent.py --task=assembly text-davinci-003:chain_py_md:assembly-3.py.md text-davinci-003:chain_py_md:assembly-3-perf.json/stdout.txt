['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Here's the program:
```
# assembly: put the wrench around the peg
# def assembly(robot):
    # Steps:
    #  1. Put gripper above wrench
    #  2. Grab wrench with gripper
    #  3. Line up wrench with peg
    #  4. Drop wrench around peg
    # First, put the gripper above the wrench.
    if check("the robot's gripper is not vertically aligned with the wrench"):
        robot.put("gripper above wrench")
    # Once the gripper is above the wrench, grab it.
    if check("the robot's gripper is vertically aligned with wrench and the robot's gripper is open"):
        robot.grab("wrench")
    # Align wrench with peg
    if check("the robot's gripper is above peg and wrench is not horizontally aligned with peg"):
        robot.align("wrench to peg")
    # Drop wrench around peg.
    if check("the robot's gripper is horizontally aligned with peg and the robot's gripper is open"):
        robot.drop("wrench around peg")
```
{'assembly': [("the robot's gripper is not vertically aligned with the wrench", 'put gripper above wrench'), ("the robot's gripper is vertically aligned with wrench and the robot's gripper is open", 'grab wrench'), ("the robot's gripper is above peg and wrench is not horizontally aligned with peg", 'align wrench to peg'), ("the robot's gripper is horizontally aligned with peg and the robot's gripper is open", 'drop wrench around peg')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the wrench", 'put gripper above button'), ("the robot's gripper is vertically aligned with the wrench and the robot's gripper is open", 'grab peg'), ("the robot's gripper is above the peg and the wrench is not horizontally aligned with the peg", 'align peg to hole'), ("the robot's gripper is horizontally aligned with the peg and the robot's gripper is open", 'drop gripper around puck')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the wrench", 'put gripper above button'), ("the robot's gripper is vertically aligned with the wrench and the robot's gripper is open", 'grab peg'), ("the robot's gripper is above the peg and the wrench is not horizontally aligned with the peg", 'align peg to hole'), ("the robot's gripper is horizontally aligned with the peg and the robot's gripper is open", 'drop gripper around puck')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the wrench", 'put gripper above button'), ("the robot's gripper is vertically aligned with the wrench and the robot's gripper is open", 'grab peg'), ("the robot's gripper is above the peg and the wrench is not horizontally aligned with the peg", 'align peg to hole'), ("the robot's gripper is horizontally aligned with the peg and the robot's gripper is open", 'drop gripper around puck')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.1093389428039275
Success rates:
{
 "assembly": 0.0
}
