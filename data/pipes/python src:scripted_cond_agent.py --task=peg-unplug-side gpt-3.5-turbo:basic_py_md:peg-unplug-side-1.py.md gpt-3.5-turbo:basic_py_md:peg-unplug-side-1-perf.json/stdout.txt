['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# peg-unplug-side: pull the peg out from the side
# def peg_unplug_side(robot):
if check("the robot's gripper is not vertically aligned with the peg"):
    robot.put("gripper above peg")
if check("peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper"):
    robot.grab("peg")
if check("the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):
    robot.align("peg to hole")
if check("peg is horizontally aligned with hole and the robot's gripper is in front of the peg"):
    robot.pull("peg out from hole")
{'peg-unplug-side': [("the robot's gripper is not vertically aligned with the peg", 'put gripper above peg'), ("peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper", 'grab peg'), ("the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole", 'align peg to hole'), ("peg is horizontally aligned with hole and the robot's gripper is in front of the peg", 'pull peg out from hole')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'put gripper above button'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'grab peg'), ("the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with the robot's gripper", 'align peg to hole'), ("the peg is horizontally aligned with the robot's gripper and the robot's gripper is in front of the peg", 'align peg to hole')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'put gripper above button'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'grab peg'), ("the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with the robot's gripper", 'align peg to hole'), ("the peg is horizontally aligned with the robot's gripper and the robot's gripper is in front of the peg", 'align peg to hole')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.11
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'put gripper above button'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'grab peg'), ("the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with the robot's gripper", 'align peg to hole'), ("the peg is horizontally aligned with the robot's gripper and the robot's gripper is in front of the peg", 'align peg to hole')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.3253952522976457
Success rates:
{
 "peg-unplug-side": 0.11
}
