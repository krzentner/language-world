['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# door-lock: turn the dial on the door
# def door_lock(robot):
    # Steps:
    #  1. Put gripper on dial
    #  2. Turn dial to the right number
    #  3. Close the lock
    # Place the gripper on the dial.
    if check("the robot's gripper is not on the dial"):
        robot.put("gripper on the dial")
    # Turn the dial to the correct number, assuming the number is 5.
    if check("the dial is not pointed to 5"):
        robot.turn("dial to 5")
    # Close the lock.
    if check("the lock is not closed"):
        robot.close("lock")
{'door-lock': [("the robot's gripper is not on the dial", 'put gripper on the dial'), ('the dial is not pointed to 5', 'turn dial to 5'), ('the lock is not closed', 'close lock')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'put the gripper in front of the drawer'), ("the door's lock is not behind the robot's gripper", 'reach to goal'), ("the robot's gripper is closed", 'grab peg')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'put the gripper in front of the drawer'), ("the door's lock is not behind the robot's gripper", 'reach to goal'), ("the robot's gripper is closed", 'grab peg')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.76
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'put the gripper in front of the drawer'), ("the door's lock is not behind the robot's gripper", 'reach to goal'), ("the robot's gripper is closed", 'grab peg')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.319961647535407
Success rates:
{
 "door-lock": 0.76
}
