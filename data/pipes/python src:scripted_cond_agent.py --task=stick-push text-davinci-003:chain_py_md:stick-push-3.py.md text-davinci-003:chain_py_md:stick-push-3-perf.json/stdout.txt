['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The Steps:
1. Put gripper above the stick 
2. Grab stick with the gripper
3. Position the stick in front of the thermos
4. Push the thermos to the target location

If the gripper is not above the stick, move it there:

```
if check("the robot's gripper is not above the stick"):
    robot.put("gripper above the stick") 
```

If the stick is not gripped, grab it with the gripper:

```
if check("the robot's gripper is not gripping the stick"):
    robot.grab("stick") 
```

If the stick isn't positioned in front of the thermos, line it up:

```
if check("the stick is not forward aligned with the thermos"):
    robot.align("stick to thermos") 
```

Finally, push the thermos to the target location:

```
if check("the stick is forward aligned with thermos"):
    robot.push("thermos to target")
```
{'stick-push': [("the robot's gripper is not above the stick", 'put gripper above the stick'), ("the robot's gripper is not gripping the stick", 'grab stick'), ('the stick is not forward aligned with the thermos', 'align stick to thermos'), ('the stick is forward aligned with thermos', 'push thermos to target')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'put the gripper above the puck'), ("the robot's gripper is not right of the stick", 'grab peg'), ('the stick is not forward aligned with the thermos', 'align peg to hole'), ('the stick is forward aligned with the thermos', 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'put the gripper above the puck'), ("the robot's gripper is not right of the stick", 'grab peg'), ('the stick is not forward aligned with the thermos', 'align peg to hole'), ('the stick is forward aligned with the thermos', 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'put the gripper above the puck'), ("the robot's gripper is not right of the stick", 'grab peg'), ('the stick is not forward aligned with the thermos', 'align peg to hole'), ('the stick is forward aligned with the thermos', 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.03438905555104739
Success rates:
{
 "stick-push": 0.0
}
