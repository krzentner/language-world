['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Here's the program:

```
# door-close: push the door closed to the target location
# def door_close(robot):
    # Steps:
    #  1. Put gripper in front of the door handle
    #  2. Push against the door handle to move the door
    #  3. Push the door closed more
    # First, we need to move the robot's gripper near the door handle.
    if check("the robot's gripper is not near the door handle"):
        robot.move_gripper("near the door handle")
    # If the robot's gripper is near the door handle, we just need to push the
    # door closed a little to start the door moving.
    if check("the robot's gripper is near the door handle"):
        robot.move_gripper("left of the door handle")
    # Once the door is moving, push harder.
    if check("the robot's gripper is horizontally aligned with the door handle"):
        robot.move_gripper("around the door handle")
    # Keep pushing until the door closes.
    if check("the door is not closed"):
        robot.move_gripper("around the door handle")
```
{'door-close': [("the robot's gripper is not near the door handle", "the robot's gripper is near the door handle"), ("the robot's gripper is near the door handle", "the robot's gripper is left of the door handle"), ("the robot's gripper is horizontally aligned with the door handle", "the robot's gripper is around the door handle"), ('the door is not closed', "the robot's gripper is around the door handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'push the gripper into the puck'), ("the robot's gripper is near the door", 'put the gripper in front of the drawer'), ("the robot's gripper is horizontally aligned with the door", 'drop gripper around puck'), ("the robot's gripper is closed", 'drop gripper around puck')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'push the gripper into the puck'), ("the robot's gripper is near the door", 'put the gripper in front of the drawer'), ("the robot's gripper is horizontally aligned with the door", 'drop gripper around puck'), ("the robot's gripper is closed", 'drop gripper around puck')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door", 'push the gripper into the puck'), ("the robot's gripper is near the door", 'put the gripper in front of the drawer'), ("the robot's gripper is horizontally aligned with the door", 'drop gripper around puck'), ("the robot's gripper is closed", 'drop gripper around puck')], env_name='door-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 8.702162844052069
Success rates:
{
 "door-close": 1.0
}
