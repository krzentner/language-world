['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
```
# push-back: slide the puck backwards to the target location
# def push_back(robot):
    # Steps:
    # 1. Put gripper above the puck
    # 2. Push gripper into the puck
    # 3. Move gripper and puck backwards to the target
    # The robot will slide the puck backwards by trapping it with its gripper and
    # moving the gripper and puck backwards.
    # If the puck is not vertically aligned with the gripper, move the gripper
    # above the puck.
    if check("the robot's gripper is not vertically aligned with the puck"):
        robot.put("gripper above the puck")
    # If the gripper is not around the puck, move the gripper down and around
    # the puck.
    if check("the robot's gripper is not around the puck"):
        robot.drop("gripper around the puck")
    # If the gripper is around the puck, move the gripper and puck backwards
    # towards the target.
    if check("the robot's gripper is around the puck"):
        robot.push_back("the gripper and puck towards the target")
{'push-back': [("the robot's gripper is not vertically aligned with the puck", 'put gripper above the puck'), ("the robot's gripper is not around the puck", 'drop gripper around the puck'), ("the robot's gripper is around the puck", 'push_back the gripper and puck towards the target')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is around the puck", 'push the gripper into the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is around the puck", 'push the gripper into the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is around the puck", 'push the gripper into the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.10898793389533623
Success rates:
{
 "push-back": 0.0
}
