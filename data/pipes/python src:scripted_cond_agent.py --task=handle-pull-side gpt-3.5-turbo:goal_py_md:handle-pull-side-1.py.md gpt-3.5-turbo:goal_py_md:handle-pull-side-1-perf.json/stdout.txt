['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
Here's the program to perform the `handle-pull-side` task:

```
# handle-pull-side: pull up the handle from the side
# def handle_pull_side(robot):
    # Steps:
    #  1. Put gripper above the handle
    #  2. Grab the handle with the gripper
    #  3. Lift the handle up
    # First, put the gripper above the handle.
    if check("the robot's gripper is not vertically aligned with the handle"):
        robot.move_gripper("vertically aligned with the handle")
    # If the handle is not in the gripper, grab it.
    if check("the robot's gripper is not around handle and the robot's gripper is open"):
        robot.move_gripper("near the handle", close_gripper=True)
    # Once the gripper is around the handle, lift it up.
    if check("the robot's gripper is around the handle"):
        robot.move_gripper("above the handle")
```

This program will put the gripper above the handle, grab the handle with the gripper, and then lift the handle up. It uses the same structure as the other programs, with if statements to check if each step has been completed and to move the robot's gripper as needed.
{'handle-pull-side': [("the robot's gripper is not vertically aligned with the handle", "the robot's gripper is vertically aligned with the handle"), ("the robot's gripper is not around handle and the robot's gripper is open", "the robot's gripper is near the handle and the robot's gripper is closed"), ("the robot's gripper is around the handle", "the robot's gripper is above the handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the handle", 'push the gripper into the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the handle", 'push the gripper into the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the handle", 'push the gripper into the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.17278249511860913
Success rates:
{
 "handle-pull-side": 0.0
}
