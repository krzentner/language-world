['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put gripper behind the handle
2. Drop gripper around handle
3. Pull the handle up

# handle-pull: pull up the handle
# def handle_pull(robot):
    # Steps:
    #  1. Put gripper behind the handle
    #  2. Drop gripper around handle
    #  3. Pull the handle up
    # First, put the gripper behind the handle, so that the gripper can get a
    # good grip on the handle.
    if check("the robot's gripper is not behind the handle"):
        robot.put("gripper behind handle")
    # As long as the gripper is behind the handle, grab the handle.
    if check("the robot's gripper is behind the handle and the gripper is open"):
        robot.drop("gripper around handle")
    # If the gripper is already around the handle and closed, pull the handle up.
    if check("the robot's gripper is around handle and the robot's gripper is closed"):
        robot.pull("handle up")
{'handle-pull': [("the robot's gripper is not behind the handle", 'put gripper behind handle'), ("the robot's gripper is behind the handle and the gripper is open", 'drop gripper around handle'), ("the robot's gripper is around handle and the robot's gripper is closed", 'pull handle up')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the handle", 'put gripper above button'), ("the robot's gripper is behind the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the handle and the robot's gripper is closed", 'place puck at goal')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the handle", 'put gripper above button'), ("the robot's gripper is behind the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the handle and the robot's gripper is closed", 'place puck at goal')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the handle", 'put gripper above button'), ("the robot's gripper is behind the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the handle and the robot's gripper is closed", 'place puck at goal')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.21818967500774594
Success rates:
{
 "handle-pull": 0.0
}
