['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper in front of the plate
    #  2. Grab the plate
    #  3. Line up the plate with with the target location
    #  4. Slide the plate back
    # Place the gripper in front of the plate.
    if check("the robot's gripper is not in front of the plate"):
        robot.put("gripper in front of the plate")
    # If the gripper is in front of the plate, grab it.
    if check("the robot's gripper is in front of the plate and the robot's gripper is open"):
        robot.grab("plate")
    # As long as the plate isn't lined up with the target location, line it up.
    if check("the robot's gripper is holding the plate and the plate is not horizontally aligned with the goal"):
        robot.align("plate to goal")
    # If the plate is horizontally aligned with the goal, slide it back into the
    # goal.
    if check("the plate is horizontally aligned with the goal"):
        robot.slide("plate back to goal")
{'plate-slide-back-side': [("the robot's gripper is not in front of the plate", 'put gripper in front of the plate'), ("the robot's gripper is in front of the plate and the robot's gripper is open", 'grab plate'), ("the robot's gripper is holding the plate and the plate is not horizontally aligned with the goal", 'align plate to goal'), ('the plate is horizontally aligned with the goal', 'slide plate back to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the plate", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the plate and the robot's gripper is open", 'grab peg'), ("the robot's gripper is behind the plate and the plate is not horizontally aligned with the robot's gripper", 'align peg to hole'), ("the plate is horizontally aligned with the robot's gripper", 'slide the puck to the goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the plate", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the plate and the robot's gripper is open", 'grab peg'), ("the robot's gripper is behind the plate and the plate is not horizontally aligned with the robot's gripper", 'align peg to hole'), ("the plate is horizontally aligned with the robot's gripper", 'slide the puck to the goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the plate", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the plate and the robot's gripper is open", 'grab peg'), ("the robot's gripper is behind the plate and the plate is not horizontally aligned with the robot's gripper", 'align peg to hole'), ("the plate is horizontally aligned with the robot's gripper", 'slide the puck to the goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.06477402850651859
Success rates:
{
 "plate-slide-back-side": 0.0
}
