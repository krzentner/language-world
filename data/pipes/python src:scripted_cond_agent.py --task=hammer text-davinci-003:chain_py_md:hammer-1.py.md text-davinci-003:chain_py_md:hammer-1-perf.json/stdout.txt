['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Here's the program:

```
# hammer: hit the nail with the hammer
# def hammer(robot):
    # Steps:
    #  1. Put gripper above the hammer
    #  2. Drop gripper around the hammer 
    #  3. Drop gripper around the nail 
    #  4. Move the hammer down and hit the nail
    
    # Put the gripper above the hammer, so that it can grab it without bumping
    # into it.
    if check("the robot's gripper is not above the hammer"):
        robot.put("gripper above hammer")
    # If the gripper is above the hammer but not around it, try to grab the
    # hammer.
    if check("the robot's gripper is above the hammer and the robot's gripper is not around the hammer"):
        robot.drop("gripper around hammer")
    # If the gripper is above the nail but not around it, try to grab the nail
    # with the gripper.
    if check("the robot's gripper is not around the nail"):
        robot.drop("gripper around nail")
    # If the gripper is around both the hammer and the nail, move the gripper
    # down towards the nail to hit it.
    if check("the robot's gripper is around the hammer and the robot's gripper is around the nail"):
        robot.move("gripper down and hit nail")
```
{'hammer': [("the robot's gripper is not above the hammer", 'put gripper above hammer'), ("the robot's gripper is above the hammer and the robot's gripper is not around the hammer", 'drop gripper around hammer'), ("the robot's gripper is not around the nail", 'drop gripper around nail'), ("the robot's gripper is around the hammer and the robot's gripper is around the nail", 'move gripper down and hit nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put gripper above button'), ("the robot's gripper is above the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the robot's gripper is around the hammer", 'move gripper to right of window handle')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put gripper above button'), ("the robot's gripper is above the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the robot's gripper is around the hammer", 'move gripper to right of window handle')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put gripper above button'), ("the robot's gripper is above the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the robot's gripper is around the hammer", 'move gripper to right of window handle')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.968290860434733
Success rates:
{
 "hammer": 0.0
}
