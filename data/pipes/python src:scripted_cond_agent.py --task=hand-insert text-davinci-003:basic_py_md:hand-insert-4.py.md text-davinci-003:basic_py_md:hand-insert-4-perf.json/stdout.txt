['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


if check("the robot's gripper is not vertically aligned with the puck"):
    robot.put("gripper above puck")
if check("the robot's gripper is not around puck and the robot's gripper is open"):
    robot.drop("gripper around puck")
if check("the robot's gripper is near puck and the robot's gripper is closed"):
    robot.move("puck to goal")
if check("the robot's gripper is above puck and the robot's gripper is closed"):
    robot.lift("puck from the ground")
if check("the robot's gripper is moving forward and the puck is above the robot's gripper"):
    robot.move("gripper and puck to goal")
{'hand-insert': [("the robot's gripper is not vertically aligned with the puck", 'put gripper above puck'), ("the robot's gripper is not around puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near puck and the robot's gripper is closed", 'move puck to goal'), ("the robot's gripper is above puck and the robot's gripper is closed", 'lift puck from the ground'), ("the robot's gripper is moving forward and the puck is above the robot's gripper", 'move gripper and puck to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is closed", 'place puck at goal'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is open and the puck is above the robot's gripper", 'close gripper around puck')], env_name='hand-insert', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is closed", 'place puck at goal'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is open and the puck is above the robot's gripper", 'close gripper around puck')], env_name='hand-insert', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.63
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is closed", 'place puck at goal'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is open and the puck is above the robot's gripper", 'close gripper around puck')], env_name='hand-insert', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.5207090410379174
Success rates:
{
 "hand-insert": 0.63
}
