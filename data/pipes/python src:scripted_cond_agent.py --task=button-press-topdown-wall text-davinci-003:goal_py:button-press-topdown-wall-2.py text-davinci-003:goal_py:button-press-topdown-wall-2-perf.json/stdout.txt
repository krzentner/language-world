['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Line up the gripper as viewed from above
    #  2. Push the wall so that the button is exposed
    #  3. Push down on the buttononce it's exposed
    # The robot needs to line up its gripper with the button by looking at it
    # from above.
    # To do that, the robot will need to see if there's an obstacle blocking the
    # button, that is, the short wall.
    if check("there is a short wall in the way of the robot's gripper and button"):
        robot.move_gripper("forward aligned with the short wall")
    # The robot should push the wall until it's out of the way or curved around the button.
    if check("the wall is out of the way of the robot's gripper and button"):
        robot.move_gripper("vertically aligned with the button", close_gripper=True)
    # If the button is exposed, the robot can push it.
    if check("the robot's gripper is vertically aligned with the button"):
        robot.move_gripper("near the button")
{'button-press-topdown-wall': [("there is a short wall in the way of the robot's gripper and button", "the robot's gripper is forward aligned with the short wall"), ("the wall is out of the way of the robot's gripper and button", "the robot's gripper is vertically aligned with the button and the robot's gripper is closed"), ("the robot's gripper is vertically aligned with the button", "the robot's gripper is near the button")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the button is near wall and the robot's gripper is around the button", 'put the gripper in front of the drawer'), ("wall is left of the button and the robot's gripper is around the button", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the button", 'push the gripper into the puck')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the button is near wall and the robot's gripper is around the button", 'put the gripper in front of the drawer'), ("wall is left of the button and the robot's gripper is around the button", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the button", 'push the gripper into the puck')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the button is near wall and the robot's gripper is around the button", 'put the gripper in front of the drawer'), ("wall is left of the button and the robot's gripper is around the button", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the button", 'push the gripper into the puck')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.210264589719217
Success rates:
{
 "button-press-topdown-wall": 1.0
}
