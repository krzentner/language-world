['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then, write the code:

```
# button-press-topdown-wall: push the button down from above with a short wall in the way
# def button_press_topdown_wall(robot):
    # Steps:
    # 1. Put the gripper above the wall
    # 2. Push the wall out of the way
    # 3. Line up the gripper as viewed from above
    # 4. Push down on the button from the top
    # Put the robot's gripper above the wall so that it doesn't get stuck on it.
    if check("the robot's gripper is not above the wall"):
        robot.put("gripper above wall")
    # We can now push the wall out of the way to make space for the gripper to
    # reach the button.
    if check("the robot's gripper is above the wall"):
        robot.push("wall out of way")
    # Once the wall has been pushed out of the way, we can put the gripper above
    # the button.
    if check("the robot's gripper is not vertically aligned with the button"):
        robot.put("gripper above button")
    # Now that the gripper is lined up, just push down on the button.
    if check("the robot's gripper is vertically aligned with the button"):
        robot.push("down on button")
```
{'button-press-topdown-wall': [("the robot's gripper is not above the wall", 'put gripper above wall'), ("the robot's gripper is above the wall", 'push wall out of way'), ("the robot's gripper is not vertically aligned with the button", 'put gripper above button'), ("the robot's gripper is vertically aligned with the button", 'push down on button')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put gripper above button'), ("the robot's gripper is above wall", 'push down on button'), ("the robot's gripper is not vertically aligned with the button", 'put gripper above button'), ("the robot's gripper is vertically aligned with the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put gripper above button'), ("the robot's gripper is above wall", 'push down on button'), ("the robot's gripper is not vertically aligned with the button", 'put gripper above button'), ("the robot's gripper is vertically aligned with the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.78
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put gripper above button'), ("the robot's gripper is above wall", 'push down on button'), ("the robot's gripper is not vertically aligned with the button", 'put gripper above button'), ("the robot's gripper is vertically aligned with the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.6510998784239606
Success rates:
{
 "button-press-topdown-wall": 0.78
}
