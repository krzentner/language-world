['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put gripper above the handle 
2. Drop gripper around the handle 
3. Pull handle upwards 

# handle-pull-side: pull up the handle from the side
# def handle_pull_side(robot):
    # Steps:
    #  1. Put gripper above the handle
    #  2. Drop gripper around the handle
    #  3. Pull handle upwards
    if check("the robot's gripper is not above the handle"):
        robot.put("gripper above handle")
    if check("the robot's gripper is not around handle and the robot's gripper is open"):
        robot.drop("gripper around handle")
    if check("the robot's gripper is around the handle"):
        robot.pull("handle upwards")
{'handle-pull-side': [("the robot's gripper is not above the handle", 'put gripper above handle'), ("the robot's gripper is not around handle and the robot's gripper is open", 'drop gripper around handle'), ("the robot's gripper is around the handle", 'pull handle upwards')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put gripper above button'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put gripper above button'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put gripper above button'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.08023392163687179
Success rates:
{
 "handle-pull-side": 0.0
}
