['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The steps would be:

1. Put gripper at the top of the stick 
2. Move the stick to the thermos
3. Push the stick against the thermos to slide it to the target location 

```
# stick-push: use the stick to push the thermos to the target location
# def stick_push(robot):
    # Steps:
    #  1. Put gripper at the top of the stick
    #  2. Move the stick to the thermos
    #  3. Push the stick against the thermos to slide it to the target location
    # Place the gripper at the top of the stick.
    if check("the robot's gripper is not at the top of the stick"):
        robot.put("gripper at the top of the stick")
    # Move the stick to the thermos.
    if check("the stick is not near the thermos"):
        robot.move("stick to the thermos")
    # Push the stick against the thermos.
    if check("the stick is near the thermos"):
        robot.push("stick against the thermos")
    # Slide the thermos to the target location.
     if check("thermos is not near target"):
        robot.slide("thermos to the target location")
```
{'stick-push': [("the robot's gripper is not at the top of the stick", 'put gripper at the top of the stick'), ('the stick is not near the thermos', 'move stick to the thermos'), ('the stick is near the thermos', 'push stick against the thermos'), ('thermos is not near target', 'slide thermos to the target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the stick", 'put the gripper above the puck'), ('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos', 'slide the puck to the goal'), ('the thermos is not near the stick', 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the stick", 'put the gripper above the puck'), ('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos', 'slide the puck to the goal'), ('the thermos is not near the stick', 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the stick", 'put the gripper above the puck'), ('the stick is not near the thermos', 'slide the puck to the goal'), ('the stick is near the thermos', 'slide the puck to the goal'), ('the thermos is not near the stick', 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.006295767951969942
Success rates:
{
 "stick-push": 0.0
}
