['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# plate-slide: slide the plate into the target location
# def plate_slide(robot):
    # Steps:
    #  1. Position gripper above plate
    #  2. Close gripper around plate
    #  3. Move plate to target location
    # Place the gripper above the plate
    if check("the robot's gripper is not above the plate"):
        robot.place("gripper above plate")
    # Close the gripper around the plate
    if check("the robot's gripper is above plate and the robot's gripper is not closed around the plate"):
        robot.close("gripper around plate")
    # Move the plate to the target location
    if check("the robot's gripper is closed around plate and the robot's gripper is not at the target location"):
        robot.slide("plate to target location")
{'plate-slide': [("the robot's gripper is not above the plate", 'place gripper above plate'), ("the robot's gripper is above plate and the robot's gripper is not closed around the plate", 'close gripper around plate'), ("the robot's gripper is closed around plate and the robot's gripper is not at the target location", 'slide plate to target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is above the plate and the robot's gripper is not around the plate", 'close gripper around puck'), ("the robot's gripper is not around the plate and the robot's gripper is not near the target location", 'slide the puck to the goal')], env_name='plate-slide', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is above the plate and the robot's gripper is not around the plate", 'close gripper around puck'), ("the robot's gripper is not around the plate and the robot's gripper is not near the target location", 'slide the puck to the goal')], env_name='plate-slide', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.04
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is above the plate and the robot's gripper is not around the plate", 'close gripper around puck'), ("the robot's gripper is not around the plate and the robot's gripper is not near the target location", 'slide the puck to the goal')], env_name='plate-slide', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.3076513131637313
Success rates:
{
 "plate-slide": 0.04
}
