['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


If check("the robot's gripper is not above the hammer"):
    robot.put("gripper above hammer")
if check("the robot's gripper is not around hammer and the robot's gripper is open"):
    robot.drop("gripper around hammer")
if check("the robot's gripper is around hammer and the robot's gripper is closed"):
    robot.strike("hammer onto nail")
{'hammer': [("the robot's gripper is not around hammer and the robot's gripper is open", 'drop gripper around hammer'), ("the robot's gripper is around hammer and the robot's gripper is closed", 'strike hammer onto nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the robot's gripper is closed", 'insert peg into hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the robot's gripper is closed", 'insert peg into hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the robot's gripper is closed", 'insert peg into hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9577792323365308
Success rates:
{
 "hammer": 0.0
}
