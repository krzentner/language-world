['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# soccer: push the soccer ball into the target location
# def soccer(robot):
    # Steps:
    #  1. Approach the ball
    #  2. Trap the ball below the gripper
    #  3. Position the ball in front of the target location
    #  4. Push the ball into the target location

    # Approach the ball by moving the gripper down to it
    if check("the robot's gripper is not near the ball"):
        robot.move_gripper("near the ball")

    # Trap the ball by lowering the gripper onto it and closing the gripper
    if check("the robot's gripper is not around the ball"):
        robot.move_gripper("around the ball", close_gripper=True)

    # Position the ball in front of the target location
    if check("the ball is not in front of the target location"):
        robot.move_gripper("above the target location", close_gripper=True)

    # Push the ball into the target location
    if check("the robot's gripper is not close to the target location"):
        robot.move_gripper("close to the target location")
{'soccer': [("the robot's gripper is not near the ball", "the robot's gripper is near the ball"), ("the robot's gripper is not around the ball", "the robot's gripper is around the ball and the robot's gripper is closed"), ('the ball is not in front of the target location', "the robot's gripper is above the target location and the robot's gripper is closed"), ("the robot's gripper is not close to the target location", "the robot's gripper is near close to the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the ball", 'push the gripper into the puck'), ("the robot's gripper is not around the ball", 'put the gripper in front of the drawer'), ('the ball is not in front of the goal', 'put the gripper above the puck'), ("the robot's gripper is not left of the goal", 'push the gripper into the puck')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the ball", 'push the gripper into the puck'), ("the robot's gripper is not around the ball", 'put the gripper in front of the drawer'), ('the ball is not in front of the goal', 'put the gripper above the puck'), ("the robot's gripper is not left of the goal", 'push the gripper into the puck')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.02
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the ball", 'push the gripper into the puck'), ("the robot's gripper is not around the ball", 'put the gripper in front of the drawer'), ('the ball is not in front of the goal', 'put the gripper above the puck'), ("the robot's gripper is not left of the goal", 'push the gripper into the puck')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5025370031398559
Success rates:
{
 "soccer": 0.02
}
