['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# hammer: hit the nail with the hammer
# def hammer(robot):
    # Steps:
    #  1. Put the gripper above the hammer
    #  2. Grab the hammer with the gripper
    #  3. Align the hammer with the nail
    #  4. Hit the nail with the hammer
    # First, put the gripper above the hammer.
    if check("the robot's gripper is not vertically aligned with the hammer"):
        robot.put("gripper above hammer")
    # If the hammer isn't in the gripper, grab it.
    if check("the robot's gripper is not around the hammer and the robot's gripper is open"):
        robot.grab("hammer")
    # If the hammer is in the gripper but not aligned with the nail, align it.
    if check("the hammer is in the gripper and the hammer is not aligned with the nail"):
        robot.align("hammer with the nail")
    # If the hammer is aligned with the nail and the gripper is above the nail,
    # hit the nail with the hammer.
    if check("the hammer is aligned with the nail and the robot's gripper is above the nail"):
        robot.hit("hammer into the nail")
{'hammer': [("the robot's gripper is not vertically aligned with the hammer", 'put gripper above hammer'), ("the robot's gripper is not around the hammer and the robot's gripper is open", 'grab hammer'), ('the hammer is in the gripper and the hammer is not aligned with the nail', 'align hammer with the nail'), ("the hammer is aligned with the nail and the robot's gripper is above the nail", 'hit hammer into the nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'put gripper above button'), ("the robot's gripper is not around the hammer and the robot's gripper is open", 'grab peg'), ("the hammer is behind the robot's gripper and the hammer is not forward aligned with the robot's gripper", 'align peg to hole'), ("the hammer is forward aligned with the robot's gripper and the robot's gripper is above the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'put gripper above button'), ("the robot's gripper is not around the hammer and the robot's gripper is open", 'grab peg'), ("the hammer is behind the robot's gripper and the hammer is not forward aligned with the robot's gripper", 'align peg to hole'), ("the hammer is forward aligned with the robot's gripper and the robot's gripper is above the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.01
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'put gripper above button'), ("the robot's gripper is not around the hammer and the robot's gripper is open", 'grab peg'), ("the hammer is behind the robot's gripper and the hammer is not forward aligned with the robot's gripper", 'align peg to hole'), ("the hammer is forward aligned with the robot's gripper and the robot's gripper is above the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.6815895180665072
Success rates:
{
 "hammer": 0.01
}
