['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
    if check("the robot's gripper is not holding the hammer"):
        robot.grab("hammer")
    if check("the hammer is not above the nail"):
        robot.move("hammer above nail")
    if check("the hammer is above and near the nail"):
        robot.hit("nail with hammer")
{'hammer': [("the robot's gripper is not holding the hammer", 'grab hammer'), ('the hammer is not above the nail', 'move hammer above nail'), ('the hammer is above and near the nail', 'hit nail with hammer')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the hammer is not above the robot's gripper", 'place puck at goal'), ("the hammer is not near the robot's gripper", 'grab peg')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the hammer is not above the robot's gripper", 'place puck at goal'), ("the hammer is not near the robot's gripper", 'grab peg')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the hammer is not above the robot's gripper", 'place puck at goal'), ("the hammer is not near the robot's gripper", 'grab peg')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5903746972834812
Success rates:
{
 "hammer": 0.0
}
