['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# door-lock: turn the dial on the door
# def door_lock(robot):
    if check("the robot's gripper is not near the dial"):
        robot.move("gripper to the right of the dial")
    if check("the robot's gripper is near the dial and the robot's gripper is not vertically aligned with the dial"):
        robot.put("gripper above the dial")
    if check("the robot's gripper is vertically aligned with the dial"):
        robot.grab("the dial")
        robot.rotate("the dial right by 3 full turns") #assuming three turns will lock it

{'door-lock': [("the robot's gripper is not near the dial", 'move gripper to the right of the dial'), ("the robot's gripper is near the dial and the robot's gripper is not vertically aligned with the dial", 'put gripper above the dial'), ("the robot's gripper is vertically aligned with the dial", 'grab the dial')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'move gripper to right of window handle'), ("the robot's gripper is near the door's lock and the robot's gripper is not vertically aligned with the door's lock", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the door's lock", 'reach to goal')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'move gripper to right of window handle'), ("the robot's gripper is near the door's lock and the robot's gripper is not vertically aligned with the door's lock", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the door's lock", 'reach to goal')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.06
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'move gripper to right of window handle'), ("the robot's gripper is near the door's lock and the robot's gripper is not vertically aligned with the door's lock", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the door's lock", 'reach to goal')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.4856833280364576
Success rates:
{
 "door-lock": 0.06
}
