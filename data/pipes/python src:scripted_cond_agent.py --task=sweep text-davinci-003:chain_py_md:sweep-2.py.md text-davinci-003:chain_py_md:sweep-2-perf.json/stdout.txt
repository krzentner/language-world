['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The code:

```
# sweep: grab the cube and move sideways it to the target location
# def sweep(robot):
    # Steps:
    #  1. Put gripper above cube
    #  2. Grab cube with gripper
    #  3. Move cube sideways to desired location
    # First, put the gripper above the cube.
    if check("the robot's gripper is not vertically aligned with the cube"):
        robot.put("gripper above cube")
    # If the gripper is near the cube and open, maybe we can grab it by closing
    # the gripper.
    if check("the robot's gripper is near cube and the robot's gripper is open"):
        robot.close("gripper around cube")
    # We closed the gripper, and the cube is still near the gripper, so maybe we
    # grabbed it.
    # Try to move the cube sideways to the target location.
    # If we didn't grab it, we'll just go back to an earlier step.
    if check("the robot's gripper is above cube and the robot's gripper is closed"):
        robot.slide("cube to the target")
```
{'sweep': [("the robot's gripper is not vertically aligned with the cube", 'put gripper above cube'), ("the robot's gripper is near cube and the robot's gripper is open", 'close gripper around cube'), ("the robot's gripper is above cube and the robot's gripper is closed", 'slide cube to the target')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'put gripper above button'), ("the robot's gripper is near the cube and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'slide the puck to the goal')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'put gripper above button'), ("the robot's gripper is near the cube and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'slide the puck to the goal')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'put gripper above button'), ("the robot's gripper is near the cube and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'slide the puck to the goal')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.6797493377941151
Success rates:
{
 "sweep": 0.0
}
