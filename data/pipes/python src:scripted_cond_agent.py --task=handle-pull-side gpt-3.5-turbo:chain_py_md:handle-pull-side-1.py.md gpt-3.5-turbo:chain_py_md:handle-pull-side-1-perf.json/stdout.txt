['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# handle-pull-side: pull up the handle from the side
# def handle_pull_side(robot):
    # Steps:
    #  1. Put gripper next to handle on the side
    #  2. Grab handle with the gripper
    #  3. Pull the handle upwards
    # We need to put the gripper next to the handle on the side.
    if check("the robot's gripper is not next to the handle on the side"):
        robot.move("the gripper next to the handle on the side")
    # If the gripper is next to the handle on the side, we need to grab it.
    if check("the robot's gripper is next to the handle on the side and the gripper is not around the handle"):
        robot.grab("the handle with the gripper")
    # Finally, pull up on the handle.
    if check("the gripper is around the handle"):
        robot.pull_up("on the handle")
{'handle-pull-side': [("the robot's gripper is not next to the handle on the side", 'move the gripper next to the handle on the side'), ("the robot's gripper is next to the handle on the side and the gripper is not around the handle", 'grab the handle with the gripper'), ('the gripper is around the handle', 'pull_up on the handle')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is left of the handle and the robot's gripper is not around the handle", 'slide the puck to the goal'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is left of the handle and the robot's gripper is not around the handle", 'slide the puck to the goal'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is left of the handle and the robot's gripper is not around the handle", 'slide the puck to the goal'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.06658638360999448
Success rates:
{
 "handle-pull-side": 0.0
}
