['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Place the gripper right of the wall
2. Lower the gripper over the top of the puck
3. Push the puck with the wall

```
# push-wall: slide the puck to the target location with a small wall in the way
# def push_wall(robot):
    # Steps:
    #  1. Place the gripper right of the wall
    #  2. Lower the gripper over the top of the puck
    #  3. Push the puck with the wall
    # We need to put the robot's gripper near the wall before beginning the
    # task.
    if check("the robot's gripper is not to the right of the wall"):
        robot.place("gripper to the right of the wall")
    # Once the robot's gripper is near the wall, lower it to the top of the
    # puck.
    # We don't have to be careful about the angle, since the wall limits the
    # movement available.
    if check("the robot's gripper is to the right of the wall and the robot's gripper is not near puck"):
        robot.drop("gripper over puck")
    # Now that the gripper is above the puck and the wall is between the gripper
    # and the puck we can start pushing with the wall.
    if check("the robot's gripper is near puck and the wall is between the gripper and the puck"):
        robot.push("puck with wall")
{'push-wall': [("the robot's gripper is not to the right of the wall", 'place gripper to the right of the wall'), ("the robot's gripper is to the right of the wall and the robot's gripper is not near puck", 'drop gripper over puck'), ("the robot's gripper is near puck and the wall is between the gripper and the puck", 'push puck with wall')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of wall", 'move gripper to right of window handle'), ("the robot's gripper is not right of wall and the robot's gripper is not near the puck", 'drop gripper around puck'), ("the robot's gripper is near the puck and wall is behind the puck", 'place puck at goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of wall", 'move gripper to right of window handle'), ("the robot's gripper is not right of wall and the robot's gripper is not near the puck", 'drop gripper around puck'), ("the robot's gripper is near the puck and wall is behind the puck", 'place puck at goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of wall", 'move gripper to right of window handle'), ("the robot's gripper is not right of wall and the robot's gripper is not near the puck", 'drop gripper around puck'), ("the robot's gripper is near the puck and wall is behind the puck", 'place puck at goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.44761230859556655
Success rates:
{
 "push-wall": 0.0
}
