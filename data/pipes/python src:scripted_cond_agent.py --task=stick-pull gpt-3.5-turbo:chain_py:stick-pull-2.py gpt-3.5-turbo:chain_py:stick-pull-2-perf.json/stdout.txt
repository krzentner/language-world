['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
#  1. Grab the stick with the gripper
#  2. Position the gripper and stick over the thermos
#  3. Use the stick to hook onto the handle of the thermos
#  4. Pull the thermos towards the target
# First, put the gripper around the stick.
if check("the robot's gripper is not around stick"):
    robot.drop("gripper around stick")
# If the gripper is not over the thermos, move it there.
if check("the robot's gripper is not above the thermos"):
    robot.move("gripper to thermos")
# If the stick isn't aligned with the thermos handle, line it up.
if check("the stick is not aligned with the thermos handle"):
    robot.align("stick to thermos handle")
# Use the hook at the end of the stick to grab onto the thermos handle.
if check("the stick is aligned with the thermos handle"):
    robot.hook("stick onto thermos handle")
# Use the stick to pull the thermos towards the target.
if check("the stick is attached to the thermos and the thermos is not at the target"):
    robot.pull("thermos towards target")
{'stick-pull': [("the robot's gripper is not around stick", 'drop gripper around stick'), ("the robot's gripper is not above the thermos", 'move gripper to thermos'), ('the stick is not aligned with the thermos handle', 'align stick to thermos handle'), ('the stick is aligned with the thermos handle', 'hook stick onto thermos handle'), ('the stick is attached to the thermos and the thermos is not at the target', 'pull thermos towards target')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the stick", 'drop gripper around puck'), ("the robot's gripper is not above the thermos", 'move gripper to left of window handle'), ('the stick is not forward aligned with the thermos', 'align peg to hole'), ('the stick is forward aligned with the thermos', 'slide the puck to the goal'), ('the stick is left of the thermos and the thermos is not near the target location', 'push the gripper into the puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the stick", 'drop gripper around puck'), ("the robot's gripper is not above the thermos", 'move gripper to left of window handle'), ('the stick is not forward aligned with the thermos', 'align peg to hole'), ('the stick is forward aligned with the thermos', 'slide the puck to the goal'), ('the stick is left of the thermos and the thermos is not near the target location', 'push the gripper into the puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the stick", 'drop gripper around puck'), ("the robot's gripper is not above the thermos", 'move gripper to left of window handle'), ('the stick is not forward aligned with the thermos', 'align peg to hole'), ('the stick is forward aligned with the thermos', 'slide the puck to the goal'), ('the stick is left of the thermos and the thermos is not near the target location', 'push the gripper into the puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.051963380764476236
Success rates:
{
 "stick-pull": 0.0
}
