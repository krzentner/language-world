['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# push-wall: slide the puck to the target location with a small wall in the way
# def push_wall(robot):
    # Steps:
    #  1. Put gripper above the puck, to the side of the wall
    #  2. Push gripper into top of puck
    #  3. Slide puck to goal
    # First, check if the gripper is on the left side of the wall. If not, move it there.
    if check("the robot's gripper is not left of the wall"):
        robot.move_gripper("left of the wall")
    # If the gripper is not in position above the puck, move it there.
    if check("the robot's gripper is not above the puck"):
        robot.move_gripper("above the puck")
    # If the gripper is aligned with the puck but not near it, move the gripper
    # down to the puck to slide it.
    if check("the robot's gripper is vertically aligned with the puck but the robot's gripper is not near puck"):
        robot.move_gripper("near the puck", close_gripper=True)
    # If the gripper is near the puck and the puck is below the robot's gripper, approach the wall.
    if check("the robot's gripper is near the puck and the puck is below the robot's gripper"):
        robot.move_gripper("against the wall")
    # If the gripper is against the wall, push the puck until it is past the wall.
    if check("the robot's gripper is against the wall and the puck is not past the wall"):
        robot.move_gripper("past the wall", close_gripper=True)
    # If the puck is past the wall, slide it to the target location.
    if check("the puck is past the wall"):
        robot.move_gripper("above the target location")
{'push-wall': [("the robot's gripper is not left of the wall", "the robot's gripper is left of the wall"), ("the robot's gripper is not above the puck", "the robot's gripper is above the puck"), ("the robot's gripper is vertically aligned with the puck but the robot's gripper is not near puck", "the robot's gripper is near the puck and the robot's gripper is closed"), ("the robot's gripper is near the puck and the puck is below the robot's gripper", "the robot's gripper is near against the wall"), ("the robot's gripper is against the wall and the puck is not past the wall", "the robot's gripper is near past the wall and the robot's gripper is closed"), ('the puck is past the wall', "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is not near wall and the puck is not above wall", 'put the gripper in front of the drawer'), ('the puck is above wall', 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is not near wall and the puck is not above wall", 'put the gripper in front of the drawer'), ('the puck is above wall', 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is not near wall and the puck is not above wall", 'put the gripper in front of the drawer'), ('the puck is above wall', 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.015358483027249584
Success rates:
{
 "push-wall": 0.0
}
