['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# hammer: hit the nail with the hammer
# def hammer(robot):
if check("the robot's gripper is not above the hammer and the hammer is not close to the nail"):
    robot.move("gripper above the hammer")
    robot.grab("the hammer")
    robot.move("gripper above the nail")
if check("the hammer is above the nail and the robot's gripper is holding the hammer"):
    robot.push("hammer to hit the nail")
    robot.move("gripper away from the nail and the hammer")
    robot.drop("the hammer")
{'hammer': [("the robot's gripper is not above the hammer and the hammer is not close to the nail", 'move gripper above the hammer'), ("the hammer is above the nail and the robot's gripper is holding the hammer", 'push hammer to hit the nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer and hammer is not touching the table", 'put the gripper above the puck'), ("the hammer is above the robot's gripper and the robot's gripper is behind the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer and hammer is not touching the table", 'put the gripper above the puck'), ("the hammer is above the robot's gripper and the robot's gripper is behind the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer and hammer is not touching the table", 'put the gripper above the puck'), ("the hammer is above the robot's gripper and the robot's gripper is behind the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9572018299636583
Success rates:
{
 "hammer": 0.0
}
