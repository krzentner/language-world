['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then add the code:

```
    # Steps:
    #  1. Put gripper left of the faucet handle
    #  2. Grip the faucet handle with the gripper
    #  3. Push the handle to the right
    # First, make sure the gripper is to the left of the faucet handle.
    if check("the robot's gripper is not left of the faucet handle"):
        robot.move_gripper("left of the faucet handle")
    # Once the gripper is to the left, close the gripper to hold the handle.
    if check("the robot's gripper is left of the faucet handle and the robot's gripper is open"):
        robot.move_gripper("above the faucet handle", close_gripper=True)
    # With the gripper closed, push the handle to the right to turn it off.
    if check("the robot's gripper is left of the faucet handle and the robot's gripper is closed"):
        robot.move_gripper("right of the faucet handle")
```
{'faucet-close': [("the robot's gripper is not left of the faucet handle", "the robot's gripper is left of the faucet handle"), ("the robot's gripper is left of the faucet handle and the robot's gripper is open", "the robot's gripper is above the faucet handle and the robot's gripper is closed"), ("the robot's gripper is left of the faucet handle and the robot's gripper is closed", "the robot's gripper is right of the faucet handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the faucet", 'push the gripper into the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is closed", 'move gripper to right of window handle')], env_name='faucet-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the faucet", 'push the gripper into the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is closed", 'move gripper to right of window handle')], env_name='faucet-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the faucet", 'push the gripper into the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is left of the faucet and the robot's gripper is closed", 'move gripper to right of window handle')], env_name='faucet-close', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 9.098275970809041
Success rates:
{
 "faucet-close": 1.0
}
