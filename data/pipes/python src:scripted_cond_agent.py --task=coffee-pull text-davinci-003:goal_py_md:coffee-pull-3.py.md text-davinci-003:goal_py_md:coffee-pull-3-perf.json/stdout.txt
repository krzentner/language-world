['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then,

```
# coffee-pull: grab the mug and pull it to the target location
# def coffee_pull(robot):
    # Steps:
    #  1. Put gripper left of mug
    #  2. Grab mug with gripper 
    #  3. Pull mug to the target location
    # First, we want to move the gripper left of the mug, so that we don't
    # accidentally click it while we're trying to grab it.
    if check("the robot's gripper is not left of mug"):
        robot.move_gripper("left of the mug")
    # If the mug is now left of the robot's gripper, close the gripper around the
    # mug.
    if check("the robot's gripper is open and the mug is left of the robot's gripper"):
        robot.move_gripper("around the mug", close_gripper=True)
    # Once we have the mug securely in the gripper, we can just pull it to the
    # target location.
    if check("the robot's gripper is around mug"):
        robot.move_gripper("near the target location")

```
{'coffee-pull': [("the robot's gripper is not left of mug", "the robot's gripper is left of the mug"), ("the robot's gripper is open and the mug is left of the robot's gripper", "the robot's gripper is around the mug and the robot's gripper is closed"), ("the robot's gripper is around mug", "the robot's gripper is near the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the mug", 'push the gripper into the puck'), ("the robot's gripper is open and the mug is left of the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug", 'push the gripper into the puck')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the mug", 'push the gripper into the puck'), ("the robot's gripper is open and the mug is left of the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug", 'push the gripper into the puck')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.01
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the mug", 'push the gripper into the puck'), ("the robot's gripper is open and the mug is left of the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug", 'push the gripper into the puck')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.4330849363460401
Success rates:
{
 "coffee-pull": 0.01
}
