['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put the gripper above the hole
    #  2. Line up the gripper with the peg
    #  3. Grab the peg with the gripper
    #  4. Lift the peg out of the hole
    #  5. Move the peg to the target location
    # First, put the gripper above the peg hole.
    if check("the robot's gripper is not vertically aligned with the hole"):
        robot.put("gripper above hole")
    # Align the gripper with the peg so that we can grab it.
    if check("the peg is not forward aligned with the robot's gripper" and "the peg is not left of the robot's gripper"):
        robot.align("peg with gripper")
    # Grab the peg with the gripper once it's aligned.
    if check("the peg is forward aligned with the robot's gripper and the peg is left of the robot's gripper"):
        robot.grab("peg")
    # Move the gripper up to lift the peg out of the hole.
    if check("the gripper is around the peg"):
        robot.lift("peg out of hole")
    # Move the peg to the target location.
    if check("the gripper is holding the peg above the hole"):
        robot.move("peg to goal location")
{'pick-out-of-hole': [("the robot's gripper is not vertically aligned with the hole", 'put gripper above hole'), ("the peg is forward aligned with the robot's gripper and the peg is left of the robot's gripper", 'grab peg'), ('the gripper is around the peg', 'lift peg out of hole'), ('the gripper is holding the peg above the hole', 'move peg to goal location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the puck is forward aligned with the robot's gripper and the puck is left of the robot's gripper", 'grab peg'), ("the robot's gripper is around the puck", 'align peg to hole'), ("the robot's gripper is not above the puck", 'move gripper to left of window handle')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the puck is forward aligned with the robot's gripper and the puck is left of the robot's gripper", 'grab peg'), ("the robot's gripper is around the puck", 'align peg to hole'), ("the robot's gripper is not above the puck", 'move gripper to left of window handle')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the puck is forward aligned with the robot's gripper and the puck is left of the robot's gripper", 'grab peg'), ("the robot's gripper is around the puck", 'align peg to hole'), ("the robot's gripper is not above the puck", 'move gripper to left of window handle')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.02121885060437739
Success rates:
{
 "pick-out-of-hole": 0.0
}
