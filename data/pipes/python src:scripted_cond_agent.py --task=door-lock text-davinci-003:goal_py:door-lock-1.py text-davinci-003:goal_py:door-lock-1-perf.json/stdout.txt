['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above the door lock's dial
    #  2. Grab lock's dial with gripper
    #  3. Turn the dial
    # Put the gripper vertically above the dial.
    if check("the robot's gripper is not vertically aligned with the dial"):
        robot.move_gripper("vertically aligned with the dial")
    # once the gripper is above the dial, it can pull down to grab the dial.
    if check("the robot's gripper is not above the dial"):
        robot.move_gripper("above the dial", close_gripper=True)
    # If the gripper is now around the dial, we should be able to turn the
    # dial.
    if check("the robot's gripper is around the dial"):
        robot.move_gripper("left of the dial")
{'door-lock': [("the robot's gripper is not vertically aligned with the dial", "the robot's gripper is vertically aligned with the dial"), ("the robot's gripper is not above the dial", "the robot's gripper is above the dial and the robot's gripper is closed"), ("the robot's gripper is around the dial", "the robot's gripper is left of the dial")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is around the door's lock", 'put the gripper in front of the drawer')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is around the door's lock", 'put the gripper in front of the drawer')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is around the door's lock", 'put the gripper in front of the drawer')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9207007808513216
Success rates:
{
 "door-lock": 0.0
}
