['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps: 
1. Move the gripper to the short wall that is near the button
2. Lower the gripper to the wall in line with the button
3. Push the button from the side of the short wall

Solution:
```
# button-press-wall: push the button from the front with a short wall in the way
# def button_press_wall(robot):
    # Steps:
    #  1. Move the gripper to the short wall that is near the button
    #  2. Lower the gripper to the wall in line with the button
    #  3. Push the button from the side of the short wall
    if check("the robot's gripper is not near the short wall"):
        robot.move_gripper("near the short wall")
    # If the gripper is near the short wall, lower it to the wall in line with
    # the button.
    if check("the robot's gripper is in line with the button"):
        robot.move_gripper("in line with the button", close_gripper=True)
    # If the gripper is in line with the button (as viewed from the side) we
    # can push the buton by moving the gripper left.
    if check("the robot's gripper is in line with the button and the robot's gripper is not near the button"):
        robot.move_gripper("left of the button")
{'button-press-wall': [("the robot's gripper is not near the short wall", "the robot's gripper is near the short wall"), ("the robot's gripper is in line with the button", "the robot's gripper is near in line with the button and the robot's gripper is closed"), ("the robot's gripper is in line with the button and the robot's gripper is not near the button", "the robot's gripper is left of the button")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is forward aligned with the button and the robot's gripper is not near the button", 'push the gripper into the puck')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is forward aligned with the button and the robot's gripper is not near the button", 'push the gripper into the puck')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is forward aligned with the button and the robot's gripper is not near the button", 'push the gripper into the puck')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.09546858278365036
Success rates:
{
 "button-press-wall": 0.0
}
