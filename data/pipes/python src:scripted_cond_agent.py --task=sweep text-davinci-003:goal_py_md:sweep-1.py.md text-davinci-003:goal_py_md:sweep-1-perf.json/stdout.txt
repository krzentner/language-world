['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put the gripper right of the cube
2. Drop the gripper around the cube
3. Close gripper around the cube
4. Swing the cube to the right to the target location

if check("the robot's gripper is not right of the cube"):
    robot.move_gripper("right of the cube", close_gripper=True)
if check("the robot's gripper is not around the cube"):
    robot.move_gripper("around the cube")
if check("the robot's gripper is around the cube and the robot's gripper is not closed"):
    robot.move_gripper("closed")
if check("the robot's gripper is around the cube and the robot's gripper is closed"):
    robot.move_gripper("right of the target location")
{'sweep': [("the robot's gripper is not right of the cube", "the robot's gripper is right of the cube and the robot's gripper is closed"), ("the robot's gripper is not around the cube", "the robot's gripper is around the cube"), ("the robot's gripper is around the cube and the robot's gripper is not closed", "the robot's gripper is near closed"), ("the robot's gripper is around the cube and the robot's gripper is closed", "the robot's gripper is right of the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the cube", 'drop gripper around puck'), ("the robot's gripper is around the cube and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is around the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the cube", 'drop gripper around puck'), ("the robot's gripper is around the cube and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is around the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the cube", 'drop gripper around puck'), ("the robot's gripper is around the cube and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is around the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.3279250524796917
Success rates:
{
 "sweep": 0.0
}
