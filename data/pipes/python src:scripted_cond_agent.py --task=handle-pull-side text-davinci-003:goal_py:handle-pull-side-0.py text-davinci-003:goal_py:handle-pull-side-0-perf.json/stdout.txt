['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above the bottom of the handle
    #  2. Grab the handle with the gripper
    #  3. Lift the handle up
    # Put the gripper left of the handle. We don't need to worry about being
    # exact because this is just a side pull.
    if check("the robot's gripper is not left of the handle"):
        robot.move_gripper("left of the handle")
    # If the gripper is not on the handle, put it on the handle.
    # Again, we don't need to worry about aligning the gripper, since this is a
    # side pull.
    if check("the robot's gripper is left of the handle and the robot's gripper is not around handle"):
        robot.move_gripper("around the handle", close_gripper=True)
    # Pull up on the handle, using the gripper as a lever.
    if check("the robot's gripper is around handle"):
        robot.move_gripper("above the handle")
{'handle-pull-side': [("the robot's gripper is not left of the handle", "the robot's gripper is left of the handle"), ("the robot's gripper is left of the handle and the robot's gripper is not around handle", "the robot's gripper is around the handle and the robot's gripper is closed"), ("the robot's gripper is around handle", "the robot's gripper is above the handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is left of the handle and the robot's gripper is not around the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is left of the handle and the robot's gripper is not around the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is left of the handle and the robot's gripper is not around the handle", 'drop gripper around puck'), ("the robot's gripper is around the handle", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.17278249511860913
Success rates:
{
 "handle-pull-side": 0.0
}
