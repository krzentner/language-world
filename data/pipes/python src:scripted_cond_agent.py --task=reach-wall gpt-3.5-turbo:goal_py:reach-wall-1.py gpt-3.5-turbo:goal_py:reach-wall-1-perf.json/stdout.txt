['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Move the gripper above the wall
    #  2. Move the gripper to the target location
    #  3. Drop the gripper down to the target location
    # If the robot's gripper is not above the wall, move it there first.
    if check("the robot's gripper is not above the wall"):
        robot.move_gripper("above the wall")
    # If the gripper is above the wall but not at the target location, move it
    # to the target location.
    if check("the robot's gripper is above the wall and the gripper is not at the target location"):
        robot.move_gripper("near the target location")
    # Finally, drop the gripper down to the target location.
    # We assume the gripper can fit through any gap in the wall.
    if check("the robot's gripper is not at the target location"):
        robot.move_gripper("at the target location", close_gripper=True)
{'reach-wall': [("the robot's gripper is not above the wall", "the robot's gripper is above the wall"), ("the robot's gripper is above the wall and the gripper is not at the target location", "the robot's gripper is near the target location"), ("the robot's gripper is not at the target location", "the robot's gripper is near at the target location and the robot's gripper is closed")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the robot's gripper is not near the target location", 'push the gripper into the puck'), ("the robot's gripper is not near the target location", 'push the gripper into the puck')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the robot's gripper is not near the target location", 'push the gripper into the puck'), ("the robot's gripper is not near the target location", 'push the gripper into the puck')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall and the robot's gripper is not near the target location", 'push the gripper into the puck'), ("the robot's gripper is not near the target location", 'push the gripper into the puck')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.390167419302864
Success rates:
{
 "reach-wall": 0.0
}
