['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


# door-lock: turn the dial on the door
# def door_lock(robot):
    # Steps:
    #  1. Put gripper above door dial
    #  2. Drop gripper around door dial
    #  3. Turn dial to lock the door
    # First, put the gripper above the dial.
    if check("the robot's gripper is not vertically aligned with the door dial"):
        robot.move_gripper("vertically aligned with the door dial")
    # If the gripper isn't around the dial, we can drop it around the dial.
    if check("the robot's gripper is not around door dial and the robot's gripper is open"):
        robot.move_gripper("around the door dial", close_gripper=True)
    # Now that the gripper is around the dial, we can turn the dial to lock the
    # door.
    if check("the robot's gripper is around door dial"):
        robot.move_gripper("counterclockwise")
{'door-lock': [("the robot's gripper is not vertically aligned with the door dial", "the robot's gripper is vertically aligned with the door dial"), ("the robot's gripper is not around door dial and the robot's gripper is open", "the robot's gripper is around the door dial and the robot's gripper is closed"), ("the robot's gripper is around door dial", "the robot's gripper is near counterclockwise")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is not around the door's lock and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the door's lock", 'drop gripper around puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is not around the door's lock and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the door's lock", 'drop gripper around puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is not around the door's lock and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the door's lock", 'drop gripper around puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.1187380420608555
Success rates:
{
 "door-lock": 0.0
}
