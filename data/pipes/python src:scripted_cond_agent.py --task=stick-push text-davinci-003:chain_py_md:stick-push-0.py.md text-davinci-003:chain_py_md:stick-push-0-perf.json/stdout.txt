['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


# stick-push: use the stick to push the thermos to the target location
# def stick_push(robot):
    # Steps:
    #  1. Put the gripper above the stick
    #  2. Place the stick at the robot's side with the end facing the thermos
    #  3. Retract the stick with the gripper until the stick is at the back of the thermos
    #  4. Push the thermos to the goal
    # First, bring the gripper near the stick.
    if check("the robot's gripper is not near the stick"):
        robot.put("gripper above stick")
    # Move the stick to the robot's side so that the end of the stick points
    # toward the thermos
    if check("stick is not at the side of the robot"):
        robot.place("stick to the side")
    # Pull the stick back with the gripper until the stick is at the back of
    # the thermos
    if check("stick is not at the back of the thermos"):
        robot.pull("stick back")
    # The stick is now positioned to push the thermos.
    # Push the thermos forward.
    if check("stick is at the back of the thermos and the robot's gripper is near the stick"):
        robot.push("thermos to goal")
{'stick-push': [("the robot's gripper is not near the stick", 'put gripper above stick'), ('stick is not at the side of the robot', 'place stick to the side'), ('stick is not at the back of the thermos', 'pull stick back'), ("stick is at the back of the thermos and the robot's gripper is near the stick", 'push thermos to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'put gripper above button'), ('the stick is not near the thermos', 'place puck at goal'), ('the stick is not left of the thermos', 'place puck at goal'), ("the stick is not left of the thermos and the robot's gripper is near the stick", 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'put gripper above button'), ('the stick is not near the thermos', 'place puck at goal'), ('the stick is not left of the thermos', 'place puck at goal'), ("the stick is not left of the thermos and the robot's gripper is near the stick", 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'put gripper above button'), ('the stick is not near the thermos', 'place puck at goal'), ('the stick is not left of the thermos', 'place puck at goal'), ("the stick is not left of the thermos and the robot's gripper is near the stick", 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.009951665308051113
Success rates:
{
 "stick-push": 0.0
}
