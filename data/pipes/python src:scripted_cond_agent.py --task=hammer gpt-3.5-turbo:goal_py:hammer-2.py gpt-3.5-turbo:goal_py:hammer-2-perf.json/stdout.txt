['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put the gripper above the hammer
    #  2. Grab the hammer with the gripper
    #  3. Line up the hammer with the nail
    #  4. Swing the hammer to hit the nail
    # First, put the gripper above the hammer.
    if check("the robot's gripper is not vertically aligned with the hammer"):
        robot.move_gripper("vertically aligned with the hammer")
    # If the gripper isn't around the hammer, put it around the hammer.
    if check("the robot's gripper is above the hammer and the robot's gripper is not around hammer"):
        robot.move_gripper("around the hammer", close_gripper=True)
    # If the hammer isn't aligned with the nail, align it.
    if check("the hammer is not aligned with the nail"):
        robot.move_gripper("above the nail with the hammer")
    # Swing the hammer to hit the nail.
    if check("the hammer is aligned with the nail"):
        robot.move_gripper("swinging the hammer")
{'hammer': [("the robot's gripper is not vertically aligned with the hammer", "the robot's gripper is vertically aligned with the hammer"), ("the robot's gripper is above the hammer and the robot's gripper is not around hammer", "the robot's gripper is around the hammer and the robot's gripper is closed"), ('the hammer is not aligned with the nail', "the robot's gripper is above the nail with the hammer"), ('the hammer is aligned with the nail', "the robot's gripper is near swinging the hammer")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'push the gripper into the puck'), ("the robot's gripper is above the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the hammer is not forward aligned with the robot's gripper", 'put the gripper above the puck'), ("the hammer is forward aligned with the robot's gripper", 'push the gripper into the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'push the gripper into the puck'), ("the robot's gripper is above the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the hammer is not forward aligned with the robot's gripper", 'put the gripper above the puck'), ("the hammer is forward aligned with the robot's gripper", 'push the gripper into the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'push the gripper into the puck'), ("the robot's gripper is above the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the hammer is not forward aligned with the robot's gripper", 'put the gripper above the puck'), ("the hammer is forward aligned with the robot's gripper", 'push the gripper into the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9544737557601559
Success rates:
{
 "hammer": 0.0
}
