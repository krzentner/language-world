['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    if check("the robot's gripper is not vertically aligned with the faucet handle"):
        robot.put("gripper above faucet handle")
    if check("faucet handle is not left of the robot's gripper"):
        robot.grab("faucet handle")
    if check("faucet handle is left of the robot's gripper"):
        robot.turn("faucet left")

# faucet-close: turn the faucet right
# def faucet_close(robot):
    if check("the robot's gripper is not vertically aligned with the faucet handle"):
        robot.put("gripper above faucet handle")
    if check("faucet handle is not right of the robot's gripper"):
        robot.grab("faucet handle")
    if check("faucet handle is right of the robot's gripper"):
        robot.turn("faucet right")
{'faucet-close': [("the robot's gripper is not vertically aligned with the faucet handle", 'put gripper above faucet handle'), ("faucet handle is not right of the robot's gripper", 'grab faucet handle'), ("faucet handle is right of the robot's gripper", 'turn faucet right')], 'faucet-open': [("the robot's gripper is not vertically aligned with the faucet handle", 'put gripper above faucet handle'), ("faucet handle is not left of the robot's gripper", 'grab faucet handle'), ("faucet handle is left of the robot's gripper", 'turn faucet left')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'put gripper above button'), ("the faucet is not left of the robot's gripper", 'grab peg'), ("the faucet is left of the robot's gripper", 'align peg to hole')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'put gripper above button'), ("the faucet is not left of the robot's gripper", 'grab peg'), ("the faucet is left of the robot's gripper", 'align peg to hole')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.65
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'put gripper above button'), ("the faucet is not left of the robot's gripper", 'grab peg'), ("the faucet is left of the robot's gripper", 'align peg to hole')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.785799030023385
Success rates:
{
 "faucet-open": 0.65
}
