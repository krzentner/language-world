['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put gripper above block
2. Drop gripper around block
3. Grip block with gripper
4. Move block above target location
5. Place block in target position

# shelf-place: pick up the block and place it at the target location
# def shelf_place(robot):
    # Steps:
    #  1. Put gripper above block
    #  2. Drop gripper around block
    #  3. Grip block with gripper
    #  4. Move block above target location
    #  5. Place block in target position
    # First, put the gripper above the block so that it can be grabbed.
    if check("the robot's gripper is not above the block"):
        robot.move_gripper("above the block")
    # If the gripper is not around the block, put it around the block.
    if check("the robot's gripper is not around the block and the robot's gripper is open"):
        robot.move_gripper("near the block", close_gripper=True)
    # If the gripper is near the block, grab the block by closing the gripper.
    if check("the robot's gripper is near the block and the gripper is closed"):
        robot.move_gripper("above the target location")
    # Now, move the block to the target location.
    if check("the robot's gripper is above the target location"):
        robot.move_gripper("near the target location")
    # Once the block is lined up with the target location, place it on the shelf.
    if check("the robot's gripper is vertically aligned with the target location"):
        robot.move_gripper("near the target location", open_gripper=True)
{'shelf-place': [("the robot's gripper is not above the block", "the robot's gripper is above the block"), ("the robot's gripper is not around the block and the robot's gripper is open", "the robot's gripper is near the block and the robot's gripper is closed"), ("the robot's gripper is near the block and the gripper is closed", "the robot's gripper is above the target location"), ("the robot's gripper is above the target location", "the robot's gripper is near the target location"), ("the robot's gripper is vertically aligned with the target location", "the robot's gripper is near the target location and the robot's gripper is open"), ("the robot's gripper is vertically aligned with the target location", "the robot's gripper is the robot's gripper is near the target location and the robot's gripper is open")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the block and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above the block", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the block", 'put the gripper in front of the drawer'), ("the robot's gripper is vertically aligned with the block", 'push the gripper into the puck')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the block and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above the block", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the block", 'put the gripper in front of the drawer'), ("the robot's gripper is vertically aligned with the block", 'push the gripper into the puck')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the block and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above the block", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the block", 'put the gripper in front of the drawer'), ("the robot's gripper is vertically aligned with the block", 'push the gripper into the puck')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.1004715655897974
Success rates:
{
 "shelf-place": 0.0
}
