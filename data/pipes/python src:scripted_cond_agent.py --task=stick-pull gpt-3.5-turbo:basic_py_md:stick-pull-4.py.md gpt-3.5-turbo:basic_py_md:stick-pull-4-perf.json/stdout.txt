['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# stick-pull: use the stick to pull the thermos to the target location
# def stick_pull(robot):
    if check("the robot's gripper does not hold the stick and the stick is not vertically aligned with the thermos"):
        robot.put("the gripper above the stick")
    if check("the stick is vertically aligned with the thermos and the robot's gripper is not near the thermos"):
        robot.push("the stick to the thermos")
    if check("the stick is near the thermos and the thermos is not aligned with the goal"):
        robot.pull("the stick and the thermos towards the goal")
    if check("the thermos is aligned with the goal"):
        robot.release("the stick and the thermos at the goal")
{'stick-pull': [("the robot's gripper does not hold the stick and the stick is not vertically aligned with the thermos", 'put the gripper above the stick'), ("the stick is vertically aligned with the thermos and the robot's gripper is not near the thermos", 'push the stick to the thermos'), ('the stick is near the thermos and the thermos is not aligned with the goal', 'pull the stick and the thermos towards the goal'), ('the thermos is aligned with the goal', 'release the stick and the thermos at the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the stick and the stick is not vertically aligned with the thermos", 'put the gripper above the puck'), ("the stick is vertically aligned with the thermos and the robot's gripper is not near the thermos", 'slide the puck to the goal'), ('the stick is near the thermos and the thermos is not forward aligned with the stick', 'slide the puck to the goal'), ('the thermos is forward aligned with the stick', 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the stick and the stick is not vertically aligned with the thermos", 'put the gripper above the puck'), ("the stick is vertically aligned with the thermos and the robot's gripper is not near the thermos", 'slide the puck to the goal'), ('the stick is near the thermos and the thermos is not forward aligned with the stick', 'slide the puck to the goal'), ('the thermos is forward aligned with the stick', 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the stick and the stick is not vertically aligned with the thermos", 'put the gripper above the puck'), ("the stick is vertically aligned with the thermos and the robot's gripper is not near the thermos", 'slide the puck to the goal'), ('the stick is near the thermos and the thermos is not forward aligned with the stick', 'slide the puck to the goal'), ('the thermos is forward aligned with the stick', 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.05282837282439346
Success rates:
{
 "stick-pull": 0.0
}
