['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then add the following code so that the robot can successfully put the ball into the hoop:
```
    if check("the robot's gripper is not directly below the basket"):
        robot.put("gripper below basket")
    if check("the robot's gripper is directly below the basket and the robot's gripper is not near the ball"):
        robot.drop("gripper around ball")
    if check("the robot's gripper is near ball and the robot's gripper is not forward aligned with the hoop"):
        robot.align("gripper with hoop")
    if check("the robot's gripper is forward aligned with the hoop and the robot's gripper is open"):
        robot.push("ball into the hoop")
```
{'basketball': [("the robot's gripper is not directly below the basket", 'put gripper below basket'), ("the robot's gripper is directly below the basket and the robot's gripper is not near the ball", 'drop gripper around ball'), ("the robot's gripper is near ball and the robot's gripper is not forward aligned with the hoop", 'align gripper with hoop'), ("the robot's gripper is forward aligned with the hoop and the robot's gripper is open", 'push ball into the hoop')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not mostly below the ball", 'put gripper above button'), ("the robot's gripper is mostly below the ball and the robot's gripper is not near the ball", 'drop gripper around puck'), ("the robot's gripper is near the ball and the robot's gripper is not forward aligned with the hoop", 'align peg to hole'), ("the robot's gripper is forward aligned with the hoop and the robot's gripper is open", 'slide the puck to the goal')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not mostly below the ball", 'put gripper above button'), ("the robot's gripper is mostly below the ball and the robot's gripper is not near the ball", 'drop gripper around puck'), ("the robot's gripper is near the ball and the robot's gripper is not forward aligned with the hoop", 'align peg to hole'), ("the robot's gripper is forward aligned with the hoop and the robot's gripper is open", 'slide the puck to the goal')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not mostly below the ball", 'put gripper above button'), ("the robot's gripper is mostly below the ball and the robot's gripper is not near the ball", 'drop gripper around puck'), ("the robot's gripper is near the ball and the robot's gripper is not forward aligned with the hoop", 'align peg to hole'), ("the robot's gripper is forward aligned with the hoop and the robot's gripper is open", 'slide the puck to the goal')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.687985391439889
Success rates:
{
 "basketball": 0.0
}
