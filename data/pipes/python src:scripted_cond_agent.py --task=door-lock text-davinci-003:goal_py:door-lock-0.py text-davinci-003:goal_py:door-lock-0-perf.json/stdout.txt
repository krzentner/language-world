['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put the gripper above the dial
    #  2. Put the gripper around the dial
    #  3. Turn the dial clockwise
    # The door lock has a dial, so we need to line up the robot's gripper as
    # seen from above to rotate it.
    if check("robot's gripper is not vertically aligned with dial"):
        robot.move_gripper("vertically aligned with the dial",close_gripper=True)
    # If the gripper is lined up from above, move the gripper down to the dial
    # and rotate the dial clockwise.
    if check("the robot's gripper is vertically aligned with dial and the robot's gripper is not near dial"):
        robot.move_gripper("around the dial")
    # If the gripper is near the dial, rotate the dial clockwise until the
    # door is unlocked.
    if check("the robot's gripper is near dial"):
        robot.turn_dial("clockwise")
{'door-lock': [("the robot's gripper is vertically aligned with dial and the robot's gripper is not near dial", "the robot's gripper is around the dial"), ("the robot's gripper is near dial", 'turn_dial clockwise')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is vertically aligned with the door's lock and the robot's gripper is not near the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is open", 'push drawer closed')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is vertically aligned with the door's lock and the robot's gripper is not near the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is open", 'push drawer closed')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.02
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is vertically aligned with the door's lock and the robot's gripper is not near the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is open", 'push drawer closed')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.1293607105804184
Success rates:
{
 "door-lock": 0.02
}
