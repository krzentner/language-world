['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put gripper above the stick
2. Drop gripper around the stick
3. Pull the stick towards the target location
4. Move the stick until the thermos is at the target location

# stick-pull: use the stick to pull the thermos to the target location
# def stick_pull(robot):
    # Steps:
    #  1. Put gripper above the stick
    if check("the robot's gripper is not vertically aligned with the stick"):
        robot.move_gripper("vertically aligned with the stick")
    #  2. Drop gripper around the stick
    if check("the robot's gripper is not around the stick"):
        robot.move_gripper("around the stick")
    #  3. Pull the stick towards the target location
    if check("the robot's gripper is around the stick"):
        robot.move_gripper("near the target location")       
    #  4. Move the stick until the thermos is at the target location
    if check("the thermos is not near the target location"):
        robot.move_gripper("near the thermos")
{'stick-pull': [("the robot's gripper is not vertically aligned with the stick", "the robot's gripper is vertically aligned with the stick"), ("the robot's gripper is not around the stick", "the robot's gripper is around the stick"), ("the robot's gripper is around the stick", "the robot's gripper is near the target location"), ('the thermos is not near the target location', "the robot's gripper is near the thermos")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the stick", 'push the gripper into the puck'), ("the robot's gripper is not around the stick", 'drop gripper around puck'), ("the robot's gripper is around the stick", 'push the gripper into the puck'), ('the thermos is not near the target location', 'put the gripper in front of the drawer')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the stick", 'push the gripper into the puck'), ("the robot's gripper is not around the stick", 'drop gripper around puck'), ("the robot's gripper is around the stick", 'push the gripper into the puck'), ('the thermos is not near the target location', 'put the gripper in front of the drawer')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the stick", 'push the gripper into the puck'), ("the robot's gripper is not around the stick", 'drop gripper around puck'), ("the robot's gripper is around the stick", 'push the gripper into the puck'), ('the thermos is not near the target location', 'put the gripper in front of the drawer')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.03918688590261988
Success rates:
{
 "stick-pull": 0.0
}
