['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


```
# stick-push: use the stick to push the thermos to the target location
# def stick_push(robot):
    # Steps:
    #  1. Put gripper near the stick
    #  2. Grab the stick
    #  3. Move the stick to above the thermos
    #  4. Push the thermos to the target location
    # First, put the gripper near the stick.
    if check("the robot's gripper is not near the stick"):
        robot.move_gripper("near the stick")
    # Once the gripper is near the stick, close the gripper and grab the stick.
    if check("the robot's gripper is open"):
        robot.move_gripper("near the stick", close_gripper=True)
    # Line the stick up above the thermos.
    if check("the stick is not above the thermos"):
        robot.move_gripper("above the thermos")
    # Push the thermos towards the target location.
    if check("the stick is above the thermos"):
        robot.move_gripper("above the target location")
```
{'stick-push': [("the robot's gripper is not near the stick", "the robot's gripper is near the stick"), ("the robot's gripper is open", "the robot's gripper is near the stick and the robot's gripper is closed"), ('the stick is not above the thermos', "the robot's gripper is above the thermos"), ('the stick is above the thermos', "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'push the gripper into the puck'), ("the robot's gripper is open", 'push the gripper into the puck'), ('the stick is not above the thermos', 'put the gripper above the puck'), ('the stick is above the thermos', 'put the gripper above the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'push the gripper into the puck'), ("the robot's gripper is open", 'push the gripper into the puck'), ('the stick is not above the thermos', 'put the gripper above the puck'), ('the stick is above the thermos', 'put the gripper above the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'push the gripper into the puck'), ("the robot's gripper is open", 'push the gripper into the puck'), ('the stick is not above the thermos', 'put the gripper above the puck'), ('the stick is above the thermos', 'put the gripper above the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.28521172425021896
Success rates:
{
 "stick-push": 0.0
}
