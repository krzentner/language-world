['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way
# def pick_place_wall(robot):

# Steps:
#  1. Check if the wall is blocking the gripper from reaching the puck
#  2. If the gripper is not aligned with the puck, move to a position above the puck
#  3. If the gripper is not around the puck, move the gripper around the puck
#  4. If the gripper is below the wall, move the gripper to a position above the wall
#  5. Close the gripper around the puck
#  6. Move the gripper to the target location below the wall
#  7. Open the gripper to place the puck at the target location

# Check if the wall is blocking the gripper from reaching the puck
if check("the wall is blocking the gripper from reaching the puck"):
  # If the wall is blocking the gripper, move the robot's base to the side of
  # the wall to get around it
  robot.move_base("to the side of the wall")

# If the gripper is not aligned with the puck, move to a position above the puck
if check("the robot's gripper is not above the puck"):
  robot.move_gripper("above the puck")

# If the gripper is not around the puck, move the gripper around the puck
if check("the robot's gripper is not around puck and the robot's gripper is open"):
  robot.move_gripper("near the puck", close_gripper=True)

# If the gripper is below the wall, move the gripper to a position above the wall
if check("the robot's gripper is below the wall"):
  robot.move_gripper("above the wall")

# Close the gripper around the puck
if check("the robot's gripper is above the puck and the robot's gripper is closed"):
  robot.move_gripper("above the target location below the wall", close_gripper=True)

# Move the gripper to the target location below the wall
if check("the robot's gripper is above the target location below the wall"):
  robot.move_gripper("the target location below the wall")

# Open the gripper to place the puck at the target location
if check("the robot's gripper is above the target location below the wall and the robot's gripper is closed"):
  robot.move_gripper("above the target location below the wall", close_gripper=False)
{'pick-place-wall': [("the robot's gripper is not above the puck", "the robot's gripper is above the puck"), ("the robot's gripper is not around puck and the robot's gripper is open", "the robot's gripper is near the puck and the robot's gripper is closed"), ("the robot's gripper is below the wall", "the robot's gripper is above the wall"), ("the robot's gripper is above the puck and the robot's gripper is closed", "the robot's gripper is above the target location below the wall and the robot's gripper is closed"), ("the robot's gripper is above the target location below the wall", "the robot's gripper is the target location below the wall")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is below wall", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above wall and the target location is below wall", 'put the gripper in front of the drawer')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is below wall", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above wall and the target location is below wall", 'put the gripper in front of the drawer')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is below wall", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'put the gripper above the puck'), ("the robot's gripper is above wall and the target location is below wall", 'put the gripper in front of the drawer')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Success rates:
{
 "pick-place-wall": 0.0
}
