['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# stick-push: use the stick to push the thermos to the target location
# def stick_push(robot):
    # Steps:
    #  1. Put gripper above the stick
    #  2. Grab the stick with the gripper
    #  3. Put the gripper above the thermos
    #  4. Push the thermos to the goal
    # First, put the gripper above the stick.
    if check("the robot's gripper is not vertically aligned with the stick"):
        robot.put("gripper above stick")
    # If the gripper is not holding the stick, grab it.
    if check("the robot's gripper is not holding the stick"):
        robot.grab("stick")
    # Put the gripper above the thermos.
    if check("the robot's gripper is not above the thermos"):
        robot.put("gripper above thermos")
    # Push the thermos to the goal with the stick.
    if check("the robot's gripper is above the thermos"):
        robot.push("the thermos towards the goal with the stick")
{'stick-push': [("the robot's gripper is not vertically aligned with the stick", 'put gripper above stick'), ("the robot's gripper is not holding the stick", 'grab stick'), ("the robot's gripper is not above the thermos", 'put gripper above thermos'), ("the robot's gripper is above the thermos", 'push the thermos towards the goal with the stick')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the stick", 'put gripper above button'), ("the robot's gripper is not behind the stick", 'grab peg'), ("the robot's gripper is not above the thermos", 'put gripper above button'), ("the robot's gripper is above the thermos", 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the stick", 'put gripper above button'), ("the robot's gripper is not behind the stick", 'grab peg'), ("the robot's gripper is not above the thermos", 'put gripper above button'), ("the robot's gripper is above the thermos", 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the stick", 'put gripper above button'), ("the robot's gripper is not behind the stick", 'grab peg'), ("the robot's gripper is not above the thermos", 'put gripper above button'), ("the robot's gripper is above the thermos", 'push the gripper into the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.09781617167350362
Success rates:
{
 "stick-push": 0.0
}
