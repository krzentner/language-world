['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
 
    # Steps:
    #  1. Put gripper above door handle
    #  2. Drop gripper around door handle
    #  3. Pull open the door
    # First, put the gripper roughly above the door handle, so that we don't bump
    # it while trying to grab it.
    if check("the robot's gripper is not above the door handle"):
        robot.put("gripper above door handle")
    # Once the gripper is roughly above the door handle, we should be able to
    # grab it by moving the gripper down around it.
    if check("the robot's gripper is not around door handle and the robot's gripper is open"):
        robot.drop("gripper around door handle")
    # Once the gripper is around the door handle, we can just pull the door open.
    if check("the robot's gripper is around door handle"):
        robot.pull("door open")
    
# door-close: push the door closed
# def door_close(robot): 
    # Steps:
    #  1. Put gripper roughly around the door handle
    #  2. Push the door closed
    # If the gripper is not near the door handle, move it to the door
    # handle.
    # We don't need to be careful about the direction, since the door is large and
    # we're just pushing it (unlike when opening the door).
    if check("the robot's gripper is not near the door handle"):
        robot.grab("door handle")
    # If the door is aligned with the gripper as seen from in front, we can
    # push the door closed.
    if check("the robot's gripper is forward aligned with door handle"):
        robot.push("door closed")
{'door-close': [("the robot's gripper is not near the door handle", 'grab door handle'), ("the robot's gripper is forward aligned with door handle", 'push door closed')], 'door-open': [("the robot's gripper is not above the door handle", 'put gripper above door handle'), ("the robot's gripper is not around door handle and the robot's gripper is open", 'drop gripper around door handle'), ("the robot's gripper is around door handle", 'pull door open')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door handle", 'put gripper above button'), ("the robot's gripper is not around the door handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the door handle", 'pull door open')], env_name='door-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door handle", 'put gripper above button'), ("the robot's gripper is not around the door handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the door handle", 'pull door open')], env_name='door-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door handle", 'put gripper above button'), ("the robot's gripper is not around the door handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the door handle", 'pull door open')], env_name='door-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.975189442762142
Success rates:
{
 "door-open": 0.0
}
