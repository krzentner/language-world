['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then, the rest of the program:

```
    # Steps:
    #  1. Put gripper above the block
    #  2. Drop gripper around the block
    #  3. Pick up the block
    #  4. Move block to destination
    # First, put the gripper roughly above the block, so that we don't bump it
    # while trying to grab it.
    if check("the robot's gripper is not above the block"):
        robot.move_gripper("above the block")
    # If the gripper isn't around the block, put it around the block.
    if check("the robot's gripper is not around the block and the robot's gripper is open"):
        robot.move_gripper("near the block", close_gripper=True)
    # If the gripper is near the block and open, maybe we can grab it by
    # closing the gripper.
    if check("the robot's gripper is above the block and the robot's gripper is closed"):
        robot.move_gripper("above the target location")
    # If the gripper is near the target location, release the block by
    # opening the gripper.
    if check("the robot's gripper is near the target location"):
        robot.move_gripper("above the target location", close_gripper=False)
```
{'shelf-place': [("the robot's gripper is not above the block", "the robot's gripper is above the block"), ("the robot's gripper is not around the block and the robot's gripper is open", "the robot's gripper is near the block and the robot's gripper is closed"), ("the robot's gripper is above the block and the robot's gripper is closed", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the block and the robot's gripper is closed", 'put the gripper above the puck')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the block and the robot's gripper is closed", 'put the gripper above the puck')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the block and the robot's gripper is closed", 'put the gripper above the puck')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Success rates:
{
 "shelf-place": 0.0
}
