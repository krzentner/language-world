['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# disassemble: pull the wrench off the peg
# def disassemble(robot):
    # Steps:
    #  1. Put gripper above the wrench
    #  2. Grab the wrench with the gripper
    #  3. Move the gripper away from the peg
    # First, put the gripper above the wrench.
    if check("the robot's gripper is not vertically aligned with the wrench"):
        robot.put("gripper above wrench")
    # If the wrench becomes left of the gripper, go back to putting the gripper
    # above the wrench.
    # Because the wrench is a long object, check if the gripper is lined up with 
    # it from the front instead of around it.
    if check("wrench is not left of the robot's gripper and wrench is not forward aligned with the robot's gripper"):
        robot.grab("wrench")
    # Pull the wrench away from the peg while keeping it in the gripper's grasp.
    if check("the wrench is held by the gripper and the wrench is still on the peg"):
        robot.pull("wrench off the peg")
    # Drop the wrench after removing it from the peg.
    if check("the wrench is no longer on the peg"):
        robot.drop("wrench")
{'disassemble': [("the robot's gripper is not vertically aligned with the wrench", 'put gripper above wrench'), ("wrench is not left of the robot's gripper and wrench is not forward aligned with the robot's gripper", 'grab wrench'), ('the wrench is held by the gripper and the wrench is still on the peg', 'pull wrench off the peg'), ('the wrench is no longer on the peg', 'drop wrench')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the wrench", 'put gripper above button'), ("the wrench is not left of the robot's gripper and the wrench is not forward aligned with the robot's gripper", 'grab peg'), ("the wrench is below the robot's gripper and the wrench is left of the peg", 'slide the puck to the goal'), ('the wrench is not near the peg', 'grab peg')], env_name='disassemble', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the wrench", 'put gripper above button'), ("the wrench is not left of the robot's gripper and the wrench is not forward aligned with the robot's gripper", 'grab peg'), ("the wrench is below the robot's gripper and the wrench is left of the peg", 'slide the puck to the goal'), ('the wrench is not near the peg', 'grab peg')], env_name='disassemble', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the wrench", 'put gripper above button'), ("the wrench is not left of the robot's gripper and the wrench is not forward aligned with the robot's gripper", 'grab peg'), ("the wrench is below the robot's gripper and the wrench is left of the peg", 'slide the puck to the goal'), ('the wrench is not near the peg', 'grab peg')], env_name='disassemble', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.11736595499416536
Success rates:
{
 "disassemble": 0.0
}
