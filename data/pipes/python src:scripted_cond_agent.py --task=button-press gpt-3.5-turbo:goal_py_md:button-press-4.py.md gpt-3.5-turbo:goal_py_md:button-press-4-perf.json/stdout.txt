['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# button-press: push the button from the front
# def button_press(robot):
    # Steps:
    #  1. Put gripper in front of button
    #  2. Lower gripper onto button
    #  3. Push down on the button
    if check("the robot's gripper is not in front of the button"):
        robot.move_gripper("in front of the button")
    # If the gripper is in front of the button, lower it onto the button.
    if check("the robot's gripper is in front of the button and the robot's gripper is not near the button"):
        robot.move_gripper("over the button", close_gripper=True)
    # Once the gripper is closed around the button, push down on the button.
    if check("the robot's gripper is near the button and the gripper is holding the button"):
        robot.move_gripper("pressed on the button")
{'button-press': [("the robot's gripper is not in front of the button", "the robot's gripper is in front of the button"), ("the robot's gripper is in front of the button and the robot's gripper is not near the button", "the robot's gripper is near over the button and the robot's gripper is closed"), ("the robot's gripper is near the button and the gripper is holding the button", "the robot's gripper is near pressed on the button")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the button", 'push the gripper into the puck'), ("the robot's gripper is in front of the button and the robot's gripper is not near the button", 'put the gripper above the puck'), ("the robot's gripper is near the button and the robot's gripper is behind the button", 'push the gripper into the puck')], env_name='button-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the button", 'push the gripper into the puck'), ("the robot's gripper is in front of the button and the robot's gripper is not near the button", 'put the gripper above the puck'), ("the robot's gripper is near the button and the robot's gripper is behind the button", 'push the gripper into the puck')], env_name='button-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the button", 'push the gripper into the puck'), ("the robot's gripper is in front of the button and the robot's gripper is not near the button", 'put the gripper above the puck'), ("the robot's gripper is near the button and the robot's gripper is behind the button", 'push the gripper into the puck')], env_name='button-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.950839775869505
Success rates:
{
 "button-press": 0.0
}
