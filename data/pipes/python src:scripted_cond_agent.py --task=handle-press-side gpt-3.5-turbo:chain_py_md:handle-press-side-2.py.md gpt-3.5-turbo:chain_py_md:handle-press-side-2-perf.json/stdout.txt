['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# handle-press-side: push down the handle from the side
# def handle_press_side(robot):
    # Steps:
    #  1. Put gripper near the handle
    #  2. Grab the handle with the gripper
    #  3. Push down on the handle
    # First, put the gripper near the handle.
    if check("the robot's gripper is not near the handle"):
        robot.move("gripper near handle")
    # If the gripper isn't around the handle, put it around the handle.
    if check("the robot's gripper is not around the handle and the robot's gripper is open"):
        robot.drop("gripper around handle")
    # If the gripper is near the handle and open, close it to grab the handle.
    if check("the robot's gripper is near the handle and the robot's gripper is open"):
        robot.close("gripper around handle")
    # Once the gripper is closed around the handle, push down to press it.
    if check("the robot's gripper is around the handle"):
        robot.push("down on handle")
{'handle-press-side': [("the robot's gripper is not near the handle", 'move gripper near handle'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around handle'), ("the robot's gripper is near the handle and the robot's gripper is open", 'close gripper around handle'), ("the robot's gripper is around the handle", 'push down on handle')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the handle", 'close gripper around puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the handle", 'close gripper around puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the handle", 'close gripper around puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle", 'push down on button')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9244605342801746
Success rates:
{
 "handle-press-side": 0.0
}
