['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# door-unlock: turn the dial on the door
# def door_unlock(robot):
    # Steps:
    #  1. Put gripper on the dial
    #  2. Turn the dial to the right
    #  3. Turn the dial to the left
    #  4. Turn the dial to the right
    #  5. Pull the door open
    # First, put the gripper on the dial.
    if check("the robot's gripper is not on the dial"):
        robot.grab("dial")
    # Turn the dial to the right.
    if check("the dial is not turned to the right"):
        robot.turn("dial", "right")
    # Turn the dial to the left.
    if check("the dial is not turned to the left"):
        robot.turn("dial", "left")
    # Turn the dial to the right again.
    # The dial should now be roughly where it started, but we want to make sure
    # we're in the correct position before trying to open the door.
    if check("the dial is not turned to the right again"):
        robot.turn("dial", "right")
    # Pull the door open.
    # We might need to move the gripper to the door handle before we can open the
    # door.
    if check("the door is not open"):
        robot.put("gripper on door handle")
        robot.pull("door open")
{'door-unlock': [("the robot's gripper is not on the dial", 'grab dial'), ('the door is not open', 'put gripper on door handle')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is open", 'put gripper around door handle')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is open", 'put gripper around door handle')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.75
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'grab peg'), ("the robot's gripper is open", 'put gripper around door handle')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.8070398456142107
Success rates:
{
 "door-unlock": 0.75
}
