['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above puck
    #  2. Drop gripper around puck
    #  3. Close gripper around puck
    #  4. Move puck to goal
    # First, put the gripper roughly above the puck.
    if check("the robot's gripper is not above puck"):
        robot.put("gripper above puck")
    # If the gripper isn't already around the puck, put it around the puck.
    if check("the robot's gripper is not around puck and the robot's gripper is open"):
        robot.drop("gripper around puck")
    # If the gripper is near the puck and open, maybe we can grab it by
    # closing the gripper.
    if check("the robot's gripper is near puck and the robot's gripper is open"):
        robot.close("gripper around puck")
    # If we can close the gripper around the puck, try to move the puck to the
    # goal.
    if check("the robot's gripper is closed around the puck"):
        robot.move("puck to goal")

# push-through-opening: push the puck through the opening
# def push_through_opening(robot):
    # Steps:
    #  1. Put gripper above puck  
    #  2. Push gripper into top of puck
    #  3. Push the puck into the opening
    # First, put the gripper roughly above the puck.
    if check("the robot's gripper is not above puck"):
        robot.put("gripper above puck")
    # If the gripper isn't already around the puck, put it around the puck.
    if check("the robot's gripper is not around puck and the robot's gripper is open"):
        robot.drop("gripper around puck")
    # If the gripper is near the puck, we can trap the puck by pushing down on
    # it from above.
    if check("the robot's gripper is near the puck and the puck is below the robot's gripper"):
        robot.push("the gripper into the puck")
    # Now that the puck is trapped, we can push it into the opening.
    # We need to keep pushing until the puck passes through the opening.
    if check("the puck is not through the opening"):
        robot.push("the puck through the opening")
{'push-through-opening': [("the robot's gripper is not above puck", 'put gripper above puck'), ("the robot's gripper is not around puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'push the gripper into the puck'), ('the puck is not through the opening', 'push the puck through the opening')], 'pick-place': [("the robot's gripper is not above puck", 'put gripper above puck'), ("the robot's gripper is not around puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is closed around the puck", 'move puck to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is not around the puck", 'place puck at goal')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is not around the puck", 'place puck at goal')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is not around the puck", 'place puck at goal')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.011232856761893133
Success rates:
{
 "pick-place": 0.0
}
