['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper close to the dial
    #  2. Put gripper around the dial
    #  3. Turn the dial
    # First, put the gripper close to the dial to make it easy to grab.
    if check("the robot's gripper is not above the dial"):
        robot.move_gripper("above the dial")
    # If the gripper isn't around the dial, put it around the dial and close the
    # gripper around it.
    if check("the robot's gripper is not around the dial and the robot's gripper is not closed"):
        robot.move_gripper("around the dial", close_gripper=True)
    # Once the gripper is around the dial, we can just turn the dial by using
    # the robot's gripper.
    if check("the robot's gripper is around the dial and the robot's gripper is closed"):
        robot.move_gripper("turn the dial")
{'dial-turn': [("the robot's gripper is not above the dial", "the robot's gripper is above the dial"), ("the robot's gripper is not around the dial and the robot's gripper is not closed", "the robot's gripper is around the dial and the robot's gripper is closed"), ("the robot's gripper is around the dial and the robot's gripper is closed", "the robot's gripper is near turn the dial")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'put the gripper above the puck'), ("the robot's gripper is not around the dial and the robot's gripper is closed", 'put the gripper in front of the drawer'), ("the robot's gripper is around the dial and the robot's gripper is closed", 'push the gripper into the puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'put the gripper above the puck'), ("the robot's gripper is not around the dial and the robot's gripper is closed", 'put the gripper in front of the drawer'), ("the robot's gripper is around the dial and the robot's gripper is closed", 'push the gripper into the puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'put the gripper above the puck'), ("the robot's gripper is not around the dial and the robot's gripper is closed", 'put the gripper in front of the drawer'), ("the robot's gripper is around the dial and the robot's gripper is closed", 'push the gripper into the puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.07657041597487066
Success rates:
{
 "dial-turn": 0.0
}
