['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above puck
    #  2. Push gripper into top of puck
    #  3. Roll puck towards goal, pushing the wall
    # First, put the gripper roughly above the puck so we don't accidentally
    # bump it.
    if check("the robot's gripper is not above puck"):
        robot.move_gripper("above the puck")
    # If the puck isn't below the gripper, move the gripper so it is in front of
    # the puck. This should keep it above the wall.
    if check("the puck is below the robot's gripper and the robot's gripper is not forward aligned with the puck"):
        robot.move_gripper("forward aligned with the puck", close_gripper=True)
    # If the gripper is near the puck and open, close the gripper to trap the
    # puck and slide it towards the goal.
    if check("the robot's gripper is near the puck and the robot's gripper is closed"):
        robot.move_gripper("above the target location")
{'push-wall': [("the robot's gripper is not above puck", "the robot's gripper is above the puck"), ("the puck is below the robot's gripper and the robot's gripper is not forward aligned with the puck", "the robot's gripper is forward aligned with the puck and the robot's gripper is closed"), ("the robot's gripper is near the puck and the robot's gripper is closed", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the puck is below the robot's gripper and the robot's gripper is not forward aligned with the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is near the puck and the robot's gripper is closed", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the puck is below the robot's gripper and the robot's gripper is not forward aligned with the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is near the puck and the robot's gripper is closed", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the puck is below the robot's gripper and the robot's gripper is not forward aligned with the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is near the puck and the robot's gripper is closed", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.012809115858989141
Success rates:
{
 "push-wall": 0.0
}
