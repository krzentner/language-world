['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# plate-slide: slide the plate into the target location
# def plate_slide(robot):
    # Steps:
    #  1. Check if plate is in front of robot and nicely centered
    #  2. Move gripper above the plate
    #  3. Close the gripper around the plate
    #  4. Move the plate to the target location
    # If the plate is not in front of the robot and centered, move closer and center it
    if check("the plate is not in front of the robot and nicely centered"):
        robot.move_gripper("in front of the plate and center it")
    # If the gripper is not above the plate, move it above
    if check("the robot's gripper is not above the plate"):
        robot.move_gripper("above the plate")
    # If the gripper is above the plate but not closed, close the gripper
    if check("the robot's gripper is above the plate and the gripper is not closed"):
        robot.move_gripper("near the plate", close_gripper=True)
    # If the gripper is closed around the plate, move the plate to the target location
    if check("the gripper is closed around the plate"):
        robot.move_gripper("above the target location")
{'plate-slide': [('the plate is not in front of the robot and nicely centered', "the robot's gripper is in front of the plate and the robot's gripper is near center it"), ("the robot's gripper is not above the plate", "the robot's gripper is above the plate"), ("the robot's gripper is above the plate and the gripper is not closed", "the robot's gripper is near the plate and the robot's gripper is closed"), ('the gripper is closed around the plate', "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the plate is not in front of the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is not around the plate", 'put the gripper above the puck')], env_name='plate-slide', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the plate is not in front of the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is not around the plate", 'put the gripper above the puck')], env_name='plate-slide', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the plate is not in front of the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is not around the plate", 'put the gripper above the puck')], env_name='plate-slide', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.7110983432515259
Success rates:
{
 "plate-slide": 0.0
}
