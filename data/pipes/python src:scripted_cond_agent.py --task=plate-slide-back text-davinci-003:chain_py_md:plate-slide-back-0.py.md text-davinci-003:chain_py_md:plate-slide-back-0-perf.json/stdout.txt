['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The program should do the following steps:

1. Put gripper above plate.
2. Drop gripper around plate.
3. Push the plate back to its target location.

```
# plate-slide-back: slide the plate back into the target location
# def plate_slide_back(robot):
    # Steps:
    #  1. Put gripper above plate
    #  2. Drop gripper around plate
    #  3. Push the plate back to its target location
    # First, put the gripper above the plate.
    if check("the robot's gripper is not vertically aligned with plate"):
        robot.put("gripper above plate")
    # If the plate is beneath the gripper as seen from above, line the gripper up 
    # around the plate.
    if check("the robot's gripper is not around plate and the robot's gripper is vertically aligned with plate"):
        robot.drop("gripper around plate")
    # Once the gripper is around the plate, we can just push it back to its target
    # location.
    if check("the robot's gripper is around plate"):
        robot.push("plate back to target")
```
{'plate-slide-back': [("the robot's gripper is not vertically aligned with plate", 'put gripper above plate'), ("the robot's gripper is not around plate and the robot's gripper is vertically aligned with plate", 'drop gripper around plate'), ("the robot's gripper is around plate", 'push plate back to target')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate", 'put gripper above button'), ("the robot's gripper is not around the plate and the robot's gripper is vertically aligned with the plate", 'drop gripper around puck'), ("the robot's gripper is around the plate", 'place puck at goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate", 'put gripper above button'), ("the robot's gripper is not around the plate and the robot's gripper is vertically aligned with the plate", 'drop gripper around puck'), ("the robot's gripper is around the plate", 'place puck at goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate", 'put gripper above button'), ("the robot's gripper is not around the plate and the robot's gripper is vertically aligned with the plate", 'drop gripper around puck'), ("the robot's gripper is around the plate", 'place puck at goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.2329638273214543
Success rates:
{
 "plate-slide-back": 0.0
}
