['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):
    # Steps:
    #  1. Put gripper above the hole
    #  2. Grab the peg with the gripper
    # First, put the gripper above the hole.
    if check("the robot's gripper is not vertically aligned with the hole"):
        robot.put("gripper above hole")
    # If the gripper isn't around the peg, put it around the peg.
    if check("the robot's gripper is not around peg"):
        robot.drop("gripper around peg")
    # If the gripper is near the peg and open, maybe we can grab it by closing
    # the gripper.
    if check("the robot's gripper is near peg and the robot's gripper is open and the peg is in the hole"):
        robot.close("gripper around peg")
    # We closed the gripper, and the peg is not in the hole, so we
    # haven't grabbed anything. Go back to step 1.
    if check("the robot's gripper is above hole and the robot's gripper is closed and the peg is not in the hole"):
        robot.put("gripper above hole")
    # If the gripper is closed around the peg and it's not still in the hole,
    # we must have grabbed it.
    # Try to move the peg to the goal.
    if check("the robot's gripper is closed around peg and the peg is not in the hole"):
        robot.place("peg at goal")
{'pick-out-of-hole': [("the robot's gripper is not vertically aligned with the hole", 'put gripper above hole'), ("the robot's gripper is not around peg", 'drop gripper around peg'), ("the robot's gripper is near peg and the robot's gripper is open and the peg is in the hole", 'close gripper around peg'), ("the robot's gripper is above hole and the robot's gripper is closed and the peg is not in the hole", 'put gripper above hole'), ("the robot's gripper is closed around peg and the peg is not in the hole", 'place peg at goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is not around the puck", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put gripper above button'), ("the robot's gripper is closed and puck is not touching the table", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is not around the puck", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put gripper above button'), ("the robot's gripper is closed and puck is not touching the table", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.05
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is not around the puck", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put gripper above button'), ("the robot's gripper is closed and puck is not touching the table", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.1443664145807642
Success rates:
{
 "pick-out-of-hole": 0.05
}
