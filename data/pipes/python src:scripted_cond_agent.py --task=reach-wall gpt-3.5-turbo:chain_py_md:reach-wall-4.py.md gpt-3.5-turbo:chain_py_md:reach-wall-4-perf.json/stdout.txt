['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
```
# reach-wall: reach to the target location with a short wall in the way
# def reach_wall(robot):
    # Steps:
    #  1. Identify the location of the wall
    #  2. Determine if the robot's gripper is above or below the wall
    #  3. Move the gripper to the appropriate position
    #  4. Reach towards the target
    # First, we need to determine the location of the wall. We can use the robot's sensors
    # to detect when there is a change in distance from the robot to the ground.
    wall_nearby = False
    while not wall_nearby:
        distance1 = robot.get_distance()
        time.sleep(0.1)
        distance2 = robot.get_distance()
        if abs(distance1 - distance2) > 5:  # adjust threshold as needed
            wall_nearby = True
            
    # Once we know there is a wall nearby, we need to determine if the gripper is above or below the wall.
    # We can do this by checking the distance to the ground before and after moving the gripper up
    # and down by a fixed amount.
    gripper_above_wall = False
    curr_distance = robot.get_distance()
    robot.move_up(10)  # adjust height as needed
    new_distance = robot.get_distance()
    if new_distance > curr_distance:
        gripper_above_wall = True
    robot.move_down(10)  # return to original height
    
    # Now that we know the position of the wall and the gripper, we can move the gripper to the appropriate
    # position. If the gripper is above the wall, we can move it directly towards the target. If it is below
    # the wall, we need to move it up and over the wall first.
    if gripper_above_wall:
        robot.reach("to goal")
    else:
        robot.move_up(10)  # adjust height as needed
        robot.move_forward(20)  # adjust distance as needed
        robot.move_down(10)  # return to original height
        robot.reach("to goal")
```
{'reach-wall': []}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.5975166647215249
Success rates:
{
 "reach-wall": 0.0
}
