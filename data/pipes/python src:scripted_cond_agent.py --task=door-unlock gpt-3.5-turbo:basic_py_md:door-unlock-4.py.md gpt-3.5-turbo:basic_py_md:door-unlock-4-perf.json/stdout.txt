['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# door-unlock: turn the dial on the door
# def door_unlock(robot):
if check("the robot is not facing the dial or is too far from the dial"):
    robot.turn("to face the dial")
if check("the robot's gripper is not near the dial"):
    robot.move("closer to the dial")
if check("the robot's gripper is near the dial"):
    robot.grab("the dial")
if check("the dial is not in the correct starting position"):
    robot.turn("the dial to the correct starting position")
if check("the dial is not unlocked"):
    robot.turn("the dial to the right until the dial is unlocked")
{'door-unlock': [('the robot is not facing the dial or is too far from the dial', 'turn to face the dial'), ("the robot's gripper is not near the dial", 'move closer to the dial'), ("the robot's gripper is near the dial", 'grab the dial'), ('the dial is not in the correct starting position', 'turn the dial to the correct starting position'), ('the dial is not unlocked', 'turn the dial to the right until the dial is unlocked')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not near the door's lock", 'move gripper to left of window handle'), ("the robot's gripper is near the door's lock", 'reach to goal'), ("the robot's gripper is not behind the door's lock", 'push the gripper into the puck'), ("the robot's gripper is not around the door's lock", 'push the gripper into the puck')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not near the door's lock", 'move gripper to left of window handle'), ("the robot's gripper is near the door's lock", 'reach to goal'), ("the robot's gripper is not behind the door's lock", 'push the gripper into the puck'), ("the robot's gripper is not around the door's lock", 'push the gripper into the puck')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.15
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not near the door's lock", 'move gripper to left of window handle'), ("the robot's gripper is near the door's lock", 'reach to goal'), ("the robot's gripper is not behind the door's lock", 'push the gripper into the puck'), ("the robot's gripper is not around the door's lock", 'push the gripper into the puck')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.8123363992714117
Success rates:
{
 "door-unlock": 0.15
}
