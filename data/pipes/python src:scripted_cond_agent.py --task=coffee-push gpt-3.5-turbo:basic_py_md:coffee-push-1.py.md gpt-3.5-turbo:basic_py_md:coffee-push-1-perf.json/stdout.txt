['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# coffee-push: grab the mug and move it to the target location
# def coffee_push(robot):
    if check("the robot's gripper is not above the coffee mug"):
        robot.place("gripper above coffee mug")
    if check("the robot's gripper is not around coffee mug and the robot's gripper is open"):
        robot.drop("gripper around coffee mug")
    if check("the robot's gripper is near coffee mug and the robot's gripper is open"):
        robot.close("gripper around coffee mug")
    if check("the robot's gripper is above coffee mug and the robot's gripper is closed"):
        robot.move("the coffee mug to the target location")
{'coffee-push': [("the robot's gripper is not above the coffee mug", 'place gripper above coffee mug'), ("the robot's gripper is not around coffee mug and the robot's gripper is open", 'drop gripper around coffee mug'), ("the robot's gripper is near coffee mug and the robot's gripper is open", 'close gripper around coffee mug'), ("the robot's gripper is above coffee mug and the robot's gripper is closed", 'move the coffee mug to the target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'place gripper above puck'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'slide the puck to the goal')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'place gripper above puck'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'slide the puck to the goal')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.11
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'place gripper above puck'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'slide the puck to the goal')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.6590665210776079
Success rates:
{
 "coffee-push": 0.11
}
