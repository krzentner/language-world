['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then the solution:

```
# button-press-topdown-wall: push the button down from above with a short wall in the way
# def button_press_topdown_wall(robot):
    # Steps:
    #  1. Put gripper above wall
    #  2. Drop gripper over wall
    #  3. Move gripper right of the button
    #  4. Push down on the button from the top
    # Put the gripper roughly above the wall.
    if check("the robot's gripper is not above wall"):
        robot.place("gripper above wall")
    # Move the gripper down and right to get over the wall.
    if check("the robot's gripper is not over wall and the robot's gripper is below wall"):
        robot.drop("gripper over wall")
    # Move the gripper over to the right of button.
    if check("the robot's gripper is not right of the button"):
        robot.move("gripper to right of button")
    # Finally, push down on the button from the top.
    if check("the robot's gripper is right of the button"):
        robot.push("down on button")
```
{'button-press-topdown-wall': [("the robot's gripper is not above wall", 'place gripper above wall'), ("the robot's gripper is not over wall and the robot's gripper is below wall", 'drop gripper over wall'), ("the robot's gripper is not right of the button", 'move gripper to right of button'), ("the robot's gripper is right of the button", 'push down on button')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'place gripper above puck'), ("the robot's gripper is not above wall and the robot's gripper is below wall", 'put gripper above button'), ("the robot's gripper is not right of the button", 'move gripper to right of window handle'), ("the robot's gripper is right of the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'place gripper above puck'), ("the robot's gripper is not above wall and the robot's gripper is below wall", 'put gripper above button'), ("the robot's gripper is not right of the button", 'move gripper to right of window handle'), ("the robot's gripper is right of the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall", 'place gripper above puck'), ("the robot's gripper is not above wall and the robot's gripper is below wall", 'put gripper above button'), ("the robot's gripper is not right of the button", 'move gripper to right of window handle'), ("the robot's gripper is right of the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.7120597720437845
Success rates:
{
 "button-press-topdown-wall": 0.0
}
