['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Next, add the steps for performing the task:

```
# stick-push: use the stick to push the thermos to the target location
# def stick_push(robot):
    # Steps:
    # 1. Put gripper near the stick 
    # 2. Grab the stick with the gripper
    # 3. Place the end of the stick against the side of the thermos
    # 4. Push the stick against the thermos to move it towards the target location

    # First put the gripper near the stick.
    if check("the robot's gripper is not near the stick"):
        robot.put("gripper near the stick")
    # Once the gripper is near the stick, grab it with the gripper.
    if check("the robot's gripper is near the stick and the robot's gripper is open"):
        robot.grab("stick")
    # Place the end of the stick against the side of the thermos.
    if check("the robot's gripper is near the stick and the robot's gripper is closed"):
        robot.put("end of the stick against side of the thermos")
    # Push the stick against the thermos to move it towards the target location.
    if check("the robot's gripper is near the stick and the stick is resting against the thermos"):
        robot.push("stick into thermos and towards goal")
```
{'stick-push': [("the robot's gripper is not near the stick", 'put gripper near the stick'), ("the robot's gripper is near the stick and the robot's gripper is open", 'grab stick'), ("the robot's gripper is near the stick and the robot's gripper is closed", 'put end of the stick against side of the thermos'), ("the robot's gripper is near the stick and the stick is resting against the thermos", 'push stick into thermos and towards goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'put gripper above button'), ("the robot's gripper is near the stick and the robot's gripper is open", 'grab peg'), ("the robot's gripper is near the stick and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is near the stick and the stick is right of the thermos", 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'put gripper above button'), ("the robot's gripper is near the stick and the robot's gripper is open", 'grab peg'), ("the robot's gripper is near the stick and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is near the stick and the stick is right of the thermos", 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'put gripper above button'), ("the robot's gripper is near the stick and the robot's gripper is open", 'grab peg'), ("the robot's gripper is near the stick and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is near the stick and the stick is right of the thermos", 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.04298330508378705
Success rates:
{
 "stick-push": 0.0
}
