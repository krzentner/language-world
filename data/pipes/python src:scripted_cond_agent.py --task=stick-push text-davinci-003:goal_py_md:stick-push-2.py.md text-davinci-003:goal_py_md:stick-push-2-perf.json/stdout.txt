['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then create the steps to complete the task.

# stick-push: use the stick to push the thermos to the target location
# def stick_push(robot):
    # Steps:
    #  1. Place the gripper on top of the stick
    #  2. Ride the stick over to the thermos
    #  3. Place the gripper near the thermos
    #  4. Push the thermos to the target location
    # First, we need to place the gripper on top of the stick so that it can be 
    # used to push the thermos.
    if check("the robot's gripper is not above the stick"):
        robot.move_gripper("above the stick")
    # Now that the gripper is above the stick, move it to the thermos so that it
    # can be used to push it.
    if check("the robot's gripper is above the stick and the robot's gripper is not near the thermos"):
        robot.move_gripper("near the thermos")
    # Once the gripper is near the thermos, push it to the target location.
    if check("the robot's gripper is near the thermos"):
        robot.move_gripper("above the target location")
{'stick-push': [("the robot's gripper is not above the stick", "the robot's gripper is above the stick"), ("the robot's gripper is above the stick and the robot's gripper is not near the thermos", "the robot's gripper is near the thermos"), ("the robot's gripper is near the thermos", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'put the gripper above the puck'), ("the robot's gripper is above the stick and the robot's gripper is not near the thermos", 'put the gripper in front of the drawer'), ("the robot's gripper is near the thermos", 'put the gripper above the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'put the gripper above the puck'), ("the robot's gripper is above the stick and the robot's gripper is not near the thermos", 'put the gripper in front of the drawer'), ("the robot's gripper is near the thermos", 'put the gripper above the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'put the gripper above the puck'), ("the robot's gripper is above the stick and the robot's gripper is not near the thermos", 'put the gripper in front of the drawer'), ("the robot's gripper is near the thermos", 'put the gripper above the puck')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.006792116465926803
Success rates:
{
 "stick-push": 0.0
}
