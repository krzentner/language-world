['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# faucet-open: turn the faucet left
# def faucet_open(robot):
    # Steps:
    # 1. Put the gripper above the faucet handle
    # 2. Turn the faucet handle left
    # First, put the gripper above the faucet handle.
    if check("the robot's gripper is not vertically aligned with faucet handle"):
        robot.move_gripper("vertically aligned with the faucet handle")
    # If the robot's gripper is above the faucet handle but not around it, move
    # the gripper down and close the gripper around the faucet handle.
    if check("the robot's gripper is above the faucet handle and the robot's gripper is not around the faucet handle"):
        robot.move_gripper("around the faucet handle", close_gripper=True)
    # Rotate the gripper to the left to turn the faucet handle.
    if check("the faucet is not fully turned on"):
        robot.rotate_gripper("left")
{'faucet-open': [("the robot's gripper is not vertically aligned with faucet handle", "the robot's gripper is vertically aligned with the faucet handle"), ("the robot's gripper is above the faucet handle and the robot's gripper is not around the faucet handle", "the robot's gripper is around the faucet handle and the robot's gripper is closed"), ('the faucet is not fully turned on', 'rotate_gripper left')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'push the gripper into the puck'), ("the robot's gripper is above the faucet and the robot's gripper is not around the faucet", 'drop gripper around puck'), ("the faucet is not below the robot's gripper", 'place gripper above puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'push the gripper into the puck'), ("the robot's gripper is above the faucet and the robot's gripper is not around the faucet", 'drop gripper around puck'), ("the faucet is not below the robot's gripper", 'place gripper above puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.83
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the faucet", 'push the gripper into the puck'), ("the robot's gripper is above the faucet and the robot's gripper is not around the faucet", 'drop gripper around puck'), ("the faucet is not below the robot's gripper", 'place gripper above puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 6.839332888423022
Success rates:
{
 "faucet-open": 0.83
}
