['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Answer: 
```
# push-wall: slide the puck to the target location with a small wall in the way
# def push_wall(robot):
    if check("the robot's gripper is not above puck and the wall and the robot's gripper is not vertically aligned with the puck and the wall"):
        robot.put("gripper above puck and wall")
    if check("the robot's gripper is vertically aligned with the puck and the wall and the robot's gripper is not near puck and wall"):
        robot.push("gripper into puck and wall")
    if check("the robot's gripper is near the puck and wall and the puck and wall are below the robot's gripper"):
        robot.slide("puck and wall to the goal")
```
{'push-wall': [("the robot's gripper is not above puck and the wall and the robot's gripper is not vertically aligned with the puck and the wall", 'put gripper above puck and wall'), ("the robot's gripper is vertically aligned with the puck and the wall and the robot's gripper is not near puck and wall", 'push gripper into puck and wall'), ("the robot's gripper is near the puck and wall and the puck and wall are below the robot's gripper", 'slide puck and wall to the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall and the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not around wall", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'slide the puck to the goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall and the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not around wall", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'slide the puck to the goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above wall and the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not around wall", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'slide the puck to the goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 8.606338642880322
Success rates:
{
 "push-wall": 1.0
}
