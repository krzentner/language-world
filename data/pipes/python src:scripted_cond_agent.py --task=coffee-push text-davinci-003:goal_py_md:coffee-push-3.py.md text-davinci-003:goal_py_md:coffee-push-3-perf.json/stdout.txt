['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then add the code to perform the following steps: 

1. Put gripper above mug.
2. Grab mug with gripper
3. Move mug to target location.

```
# coffee-push: grab the mug and move it to the target location
# def coffee_push(robot):
    # Steps:
    #  1. Put gripper above mug
    #  2. Grab mug with gripper
    #  3. Move mug to target location
    # First, put the gripper roughly above mug. We don't want to bump it while
    # grabbing it.
    if check("the robot's gripper is not above the mug"):
        robot.move_gripper("above the mug")
    # If the gripper isn't around the mug, put it around the mug.
    if check("the robot's gripper is not around mug and the robot's gripper is open"):
        robot.move_gripper("near the mug", close_gripper=True)
    # Then, move the mug to the target location.
    if check("the robot's gripper is near the mug and the mug is below the robot's gripper"):
        robot.move_gripper("near the target location")
```
{'coffee-push': [("the robot's gripper is not above the mug", "the robot's gripper is above the mug"), ("the robot's gripper is not around mug and the robot's gripper is open", "the robot's gripper is near the mug and the robot's gripper is closed"), ("the robot's gripper is near the mug and the mug is below the robot's gripper", "the robot's gripper is near the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put the gripper above the puck'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the mug and the mug is below the robot's gripper", 'push the gripper into the puck')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put the gripper above the puck'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the mug and the mug is below the robot's gripper", 'push the gripper into the puck')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put the gripper above the puck'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the mug and the mug is below the robot's gripper", 'push the gripper into the puck')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.6767747962393427
Success rates:
{
 "coffee-push": 0.0
}
