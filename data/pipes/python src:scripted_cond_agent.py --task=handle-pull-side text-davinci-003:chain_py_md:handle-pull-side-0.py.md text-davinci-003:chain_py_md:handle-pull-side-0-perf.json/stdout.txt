['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The code for the task should be:

```
# handle-pull-side: pull up the handle from the side
# def handle_pull_side(robot):
    # Steps:
    #  1. Put gripper right of the handle
    #  2. Grab the handle with the gripper
    #  3. Pull up the handle
    # First, put the gripper right of the handle.
    if check("the robot's gripper is not right of the handle"):
        robot.put("gripper right of handle")
    # As long as the gripper isn't around the handle, move the gripper around it.
    if check("the robot's gripper is not around handle and the robot's gripper is open"):
        robot.grab("handle")
    # If the gripper is around the handle, we can probably grab it by closing the 
    # gripper.
    if check("the robot's gripper is around handle and the robot's gripper is open"):
        robot.close("gripper around handle")
    # If the gripper is grabbing the handle, try to pull the handle up.
    if check("the robot's gripper is around handle and the robot's gripper is closed"):
        robot.pull("handle up")
```
{'handle-pull-side': [("the robot's gripper is not right of the handle", 'put gripper right of handle'), ("the robot's gripper is not around handle and the robot's gripper is open", 'grab handle'), ("the robot's gripper is around handle and the robot's gripper is open", 'close gripper around handle'), ("the robot's gripper is around handle and the robot's gripper is closed", 'pull handle up')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the handle", 'move gripper to right of window handle'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle and the robot's gripper is closed", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the handle", 'move gripper to right of window handle'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle and the robot's gripper is closed", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not right of the handle", 'move gripper to right of window handle'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle and the robot's gripper is closed", 'place puck at goal')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.04518658464692425
Success rates:
{
 "handle-pull-side": 0.0
}
