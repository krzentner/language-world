['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# door-lock: turn the dial on the door
# def door_lock(robot):
    # Steps:
    #  1. Put gripper above the dial
    #  2. Grab the dial with the gripper
    #  3. Turn the dial to the right until it reaches the correct combination
    # First, put the gripper above the dial.
    if check("the robot's gripper is not vertically aligned with the dial"):
        robot.move_gripper("vertically aligned with the dial")
    # If the dial isn't gripped by the gripper, grab it.
    # We can determine whether the gripper is gripping the dial by checking if
    # the gripper is closed and the dial is within the gripper's reach.
    if check("the robot's gripper is not gripping the dial and the robot's gripper is close to the dial"):
        robot.move_gripper("around the dial", close_gripper=True)
    # Once the dial is gripped, turn it to the right until it reaches the correct
    # combination.
    if check("the robot's gripper is gripping the dial and the dial is not at the correct combination"):
        robot.move_gripper("to the right of the dial") # this should turn the dial to the right
        # repeat the above step until the correct combination is reached
        while (not check("the dial is at the correct combination")):
            robot.move_gripper("to the right of the dial") 
    # Once the correct combination is reached, we're done locking the door.
    if check("the dial is at the correct combination"):
        robot.move_gripper("above the door handle") # remove gripper from dial, we're done!
{'door-lock': [("the robot's gripper is not vertically aligned with the dial", "the robot's gripper is vertically aligned with the dial"), ("the robot's gripper is not gripping the dial and the robot's gripper is close to the dial", "the robot's gripper is around the dial and the robot's gripper is closed"), ("the robot's gripper is gripping the dial and the dial is not at the correct combination", "the robot's gripper is to the right of the dial"), ('the dial is at the correct combination', "the robot's gripper is above the door handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is not right of the door's lock and the robot's gripper is closed", 'drop gripper around puck'), ("the robot's gripper is right of the door's lock and the door's lock is not near the robot's gripper", 'put the gripper in front of the drawer'), ("the door's lock is near the robot's gripper", 'put the gripper above the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is not right of the door's lock and the robot's gripper is closed", 'drop gripper around puck'), ("the robot's gripper is right of the door's lock and the door's lock is not near the robot's gripper", 'put the gripper in front of the drawer'), ("the door's lock is near the robot's gripper", 'put the gripper above the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is not right of the door's lock and the robot's gripper is closed", 'drop gripper around puck'), ("the robot's gripper is right of the door's lock and the door's lock is not near the robot's gripper", 'put the gripper in front of the drawer'), ("the door's lock is near the robot's gripper", 'put the gripper above the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 6.439783963008767
Success rates:
{
 "door-lock": 1.0
}
