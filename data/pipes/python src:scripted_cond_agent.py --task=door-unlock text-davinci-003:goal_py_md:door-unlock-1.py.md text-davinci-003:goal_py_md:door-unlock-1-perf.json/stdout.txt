['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps: 
1. Put gripper in front of the dial
2. Slowly rotate the dial in one direction
3. Switch direction and slowly rotate in the opposite direction
4. Repeat steps 2 and 3 until the door unlocks

if check("the robot's gripper is not forward aligned with dial"):
  robot.move_gripper("forward aligned with dial")

initial_direction = "clockwise"
while(not check("the door is unlocked")):
  robot.rotate_gripper(initial_direction)
  initial_direction = "counter-clockwise" if initial_direction == "clockwise" else "clockwise"
{'door-unlock': [("the robot's gripper is not forward aligned with dial", "the robot's gripper is forward aligned with dial")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the door's lock", 'put the gripper in front of the drawer')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the door's lock", 'put the gripper in front of the drawer')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the door's lock", 'put the gripper in front of the drawer')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.7684185094099121
Success rates:
{
 "door-unlock": 0.0
}
