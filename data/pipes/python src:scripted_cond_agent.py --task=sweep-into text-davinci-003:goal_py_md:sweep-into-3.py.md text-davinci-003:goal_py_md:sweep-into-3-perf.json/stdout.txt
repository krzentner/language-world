['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
  1. Put gripper above the cube
  2. Sweep the cube in a plateau with the gripper
  3. Push the cube to the target location

# sweep-into: grab the cube and move it to the target location
# def sweep_into(robot):
    # Steps:
    #  1. Put gripper above the cube
    #  2. Sweep the cube in a plateau with the gripper
    #  3. Push the cube to the target location
    # First, put the gripper above the cube so that it can sweep it without
    # bumping it.
    if check("the robot's gripper is not above the cube"):
        robot.move_gripper("above the cube")
    # Once the gripper is above the cube, sweep it inwards in a plateau.
    if check("the robot's gripper is not above the cube and the robot's gripper is not around the cube"):
        robot.move_gripper("around the cube")
    # As long as the the cube isn't at the target location, keep pushing the
    # cube in a plateau.
    if check("the cube is not at the target location"):
        robot.move_gripper("towards the target location")
    # If the gripper is close to the target, just move the gripper to the
    # target location.
    if check("the robot's gripper is nearly at the target location"):
        robot.move_gripper("right at the target location")
{'sweep-into': [("the robot's gripper is not above the cube", "the robot's gripper is above the cube"), ("the robot's gripper is not above the cube and the robot's gripper is not around the cube", "the robot's gripper is around the cube"), ('the cube is not at the target location', "the robot's gripper is near towards the target location"), ("the robot's gripper is nearly at the target location", "the robot's gripper is near right at the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not above the cube and the robot's gripper is not around the cube", 'drop gripper around puck'), ('the cube is not near the target location', 'push the gripper into the puck'), ("the robot's gripper is near the target location", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not above the cube and the robot's gripper is not around the cube", 'drop gripper around puck'), ('the cube is not near the target location', 'push the gripper into the puck'), ("the robot's gripper is near the target location", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not above the cube and the robot's gripper is not around the cube", 'drop gripper around puck'), ('the cube is not near the target location', 'push the gripper into the puck'), ("the robot's gripper is near the target location", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.7596958777561111
Success rates:
{
 "sweep-into": 0.0
}
