['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Grip the hammer
    #  2. Move to position above the nail
    #  3. Swing hammer down to hit the nail
    # If the gripper is not holding the hammer, we should grip it first.
    if check("the robot's gripper is not holding the hammer"):
        robot.grab("hammer")
    # If the gripper is not above the nail, move it above the nail.
    if check("the robot's gripper is not above the nail"):
        robot.move("gripper above nail")
    # If the gripper is above the nail now, swing the hammer down to hit it.
    if check("the robot's gripper is above the nail"):
        robot.swing("hammer down on the nail")
{'hammer': [("the robot's gripper is not holding the hammer", 'grab hammer'), ("the robot's gripper is not above the nail", 'move gripper above nail'), ("the robot's gripper is above the nail", 'swing hammer down on the nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the robot's gripper is not above the hammer", 'place gripper above puck'), ("the robot's gripper is above the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the robot's gripper is not above the hammer", 'place gripper above puck'), ("the robot's gripper is above the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the robot's gripper is not above the hammer", 'place gripper above puck'), ("the robot's gripper is above the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.935301411655233
Success rates:
{
 "hammer": 0.0
}
