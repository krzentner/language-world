['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Answer:

```
# stick-pull: use the stick to pull the thermos to the target location
# def stick_pull(robot):
    if check("the robot's gripper is not near the stick"):
        robot.reach("to stick")
    if check("the robot's gripper is not grabbing the stick"):
        robot.grab("stick")
    if check("the thermos is not in front of the robot's gripper and the thermos is not right of the robot's gripper"):
        robot.place("stick ahead of thermos")
    if check("the thermos is right of the robot's gripper"):
        robot.pull("stick to the left")
    if check("the thermos is left of the robot's gripper"):
        robot.pull("stick to the right")
    if check("the thermos is in front of the robot's gripper"):
        robot.push("stick forward and thermos to goal")
```
{'stick-pull': [("the robot's gripper is not near the stick", 'reach to stick'), ("the robot's gripper is not grabbing the stick", 'grab stick'), ("the thermos is not in front of the robot's gripper and the thermos is not right of the robot's gripper", 'place stick ahead of thermos'), ("the thermos is right of the robot's gripper", 'pull stick to the left'), ("the thermos is left of the robot's gripper", 'pull stick to the right'), ("the thermos is in front of the robot's gripper", 'push stick forward and thermos to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'grab peg'), ("the robot's gripper is not behind the stick", 'grab peg'), ("the thermos is not in front of the robot's gripper and the thermos is not right of the robot's gripper", 'place puck at goal'), ("the thermos is right of the robot's gripper", 'align peg to hole'), ("the thermos is left of the robot's gripper", 'slide the puck to the goal'), ("the thermos is in front of the robot's gripper", 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'grab peg'), ("the robot's gripper is not behind the stick", 'grab peg'), ("the thermos is not in front of the robot's gripper and the thermos is not right of the robot's gripper", 'place puck at goal'), ("the thermos is right of the robot's gripper", 'align peg to hole'), ("the thermos is left of the robot's gripper", 'slide the puck to the goal'), ("the thermos is in front of the robot's gripper", 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the stick", 'grab peg'), ("the robot's gripper is not behind the stick", 'grab peg'), ("the thermos is not in front of the robot's gripper and the thermos is not right of the robot's gripper", 'place puck at goal'), ("the thermos is right of the robot's gripper", 'align peg to hole'), ("the thermos is left of the robot's gripper", 'slide the puck to the goal'), ("the thermos is in front of the robot's gripper", 'slide the puck to the goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.02974160122053035
Success rates:
{
 "stick-pull": 0.0
}
