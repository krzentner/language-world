['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# plate-slide-back: slide the plate back into the target location
# def plate_slide_back(robot):
    # Steps:
    #  1. Move the gripper to be above the plate
    #  2. Grip the plate
    #  3. Move back to the target location
    #  4. Release the plate
    # First, put the gripper above the plate to be able to grip it.
    if check("the robot's gripper is not above the plate"):
        robot.move_gripper("above the plate")
    # Once the gripper is above the plate, grip the plate.
    if check("the robot's gripper is above the plate and the robot's gripper is not gripping the plate"):
        robot.move_gripper("around the plate")
    # Now that the plate is gripped, move back to the target location.
    if check("the robot's gripper is gripping the plate and the robot's gripper is not above the target location"):
        robot.move_gripper("above the target location")
    # Once we're at the target location, release the plate.
    if check("the robot's gripper is above the target location and the robot's gripper is gripping the plate"):
        robot.move_gripper("near the target location", close_gripper=False)
{'plate-slide-back': [("the robot's gripper is not above the plate", "the robot's gripper is above the plate"), ("the robot's gripper is above the plate and the robot's gripper is not gripping the plate", "the robot's gripper is around the plate"), ("the robot's gripper is gripping the plate and the robot's gripper is not above the target location", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is not right of the plate", 'drop gripper around puck'), ("the robot's gripper is right of the plate and the robot's gripper is not above the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is not right of the plate", 'drop gripper around puck'), ("the robot's gripper is right of the plate and the robot's gripper is not above the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put the gripper above the puck'), ("the robot's gripper is above the plate and the robot's gripper is not right of the plate", 'drop gripper around puck'), ("the robot's gripper is right of the plate and the robot's gripper is not above the plate", 'put the gripper above the puck')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.259233465949921
Success rates:
{
 "plate-slide-back": 0.0
}
