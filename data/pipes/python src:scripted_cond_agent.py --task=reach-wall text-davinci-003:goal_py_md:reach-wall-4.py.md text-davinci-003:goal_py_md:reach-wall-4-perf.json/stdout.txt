['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The robot should grab onto the wall and then reach to the target location.

# reach-wall: reach to the target location with a short wall in the way
# def reach_wall(robot):
    # Steps:
    #  1. Reach towards the wall
    #  2. Grab onto the wall with the gripper
    #  3. Reach towards the target
    
    # We want to grab onto the wall first, so we need to make sure the gripper is
    # near it.
    if check("the robot's gripper is not near the wall"):
        robot.move_gripper("near the wall")
    # Once the gripper is near the wall, try to grab it by closing the gripper.
    # Closing the gripper will also help stabilize the robot's movement.
    if check("the robot's gripper is near the wall and the robot's gripper is open"):
        robot.move_gripper("near the wall", close_gripper=True)
    # If the gripper is near the wall and closed, the robot should have a good
    # grip. Now it can move towards the target.
    if check("the robot's gripper is near the wall and the robot's gripper is closed"):
        robot.move_gripper("near the target")
{'reach-wall': [("the robot's gripper is not near the wall", "the robot's gripper is near the wall"), ("the robot's gripper is near the wall and the robot's gripper is open", "the robot's gripper is near the wall and the robot's gripper is closed"), ("the robot's gripper is near the wall and the robot's gripper is closed", "the robot's gripper is near the target")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is near wall and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near wall and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is near wall and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near wall and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near wall", 'put the gripper in front of the drawer'), ("the robot's gripper is near wall and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near wall and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5847585761916649
Success rates:
{
 "reach-wall": 0.0
}
