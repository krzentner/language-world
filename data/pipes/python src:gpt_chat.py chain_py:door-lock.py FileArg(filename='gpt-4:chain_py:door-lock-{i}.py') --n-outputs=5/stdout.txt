Using model: gpt-3.5-turbo
# Steps:
    #  1. Move the gripper to the dial
    #  2. Grab the dial with the gripper
    #  3. Turn the dial to the correct combination
    # First, move the gripper to the dial we need to turn.
    if check("the robot's gripper is not near the dial"):
        robot.move("gripper to dial")
    # Once the gripper is near the dial, grab it with the gripper.
    if check("the robot's gripper is near the dial and the robot's gripper is not around the dial"):
        robot.grab("dial")
    # Turn the dial to the correct combination by rotating it.
    if check("the robot's gripper is around the dial"):
        robot.rotate("dial to the correct combination")
# Steps:
    #  1. Put gripper around the dial
    #  2. Turn the dial to the correct position to lock the door
    # If the gripper isn't around the dial, move it there.
    if check("the robot's gripper is not around the dial"):
        robot.put("gripper around the dial")
    # Turn the dial to the correct position to lock the door.
    robot.turn("dial to lock the door")
# Steps:
    # 1. Put gripper above the dial
    # 2. Grab the dial with the gripper
    # 3. Turn the dial to the correct combination
    # 4. Unlock the door
    # First, move the gripper above the dial.
    if check("the robot's gripper is not above the dial"):
        robot.move("gripper above the dial")
    # Next, grab the dial with the gripper.
    if check("the robot's gripper is above the dial and the gripper is not grabbing the dial"):
        robot.grab("dial")
    # Turn the dial to the correct combination.
    if check("the gripper is grabbing the dial but it is not in the correct combination"):
        robot.turn("the dial to the correct combination")
    # Finally, unlock the door.
    if check("the dial is in the correct combination"):
        robot.unlock("the door")
# Steps:
    #  1. Put gripper around door knob
    #  2. Turn dial on the door
    # First, put the gripper around the door knob.
    if check("the robot's gripper is not around the door knob"):
        robot.grab("door knob")
    # If the dial is not lined up with the desired position, turn it.
    if check("the dial is not in the desired position"):
        robot.turn("dial")
    # If the dial is now in the desired position, we're done.
    if check("the dial is in the desired position"):
        robot.release("door knob")

# object-placement: place an object at the desired location
# def object_placement(robot):
    # Steps:
    #  1. Put gripper next to object
    #  2. Grab object with gripper
    #  3. Lift object
    #  4. Move object to desired location
    #  5. Lower object
    # First, put the gripper roughly next to the object.
    if check("the robot's gripper is not next to the object"):
        robot.move("gripper next to object")
    # If the gripper is next to the object, try grabbing it.
    if check("the robot's gripper is next to the object and the robot's gripper is open"):
        robot.grab("object")
    # If the gripper has grasped the object, try lifting it.
    if check("the robot's gripper is holding the object and the object is not lifted"):
        robot.lift("object")
    # If the gripper is holding the object and it's lifted, try moving it to the
    # desired location.
    if check("the robot's gripper is holding the object and the object is lifted and the object is not at the desired location"):
        robot.move("object to desired location")
    # If the gripper is holding the object and it's at the desired location,
    # lower it.
    if check("the robot's gripper is holding the object and the object is at the desired location and the object is not lowered"):
        robot.lower("object")

# object-retrieval: retrieve an object from a specific location
# def object_retrieval(robot):
    # Steps:
    #  1. Put gripper next to object
    #  2. Grab object with gripper
    #  3. Move object to desired location
    # First, put the gripper roughly next to the object.
    if check("the robot's gripper is not next to the object"):
        robot.move("gripper next to object")
    # If the gripper is next to the object, try grabbing it.
    if check("the robot's gripper is next to the object and the robot's gripper is open"):
        robot.grab("object")
    # If the gripper has grasped the object, try moving it to the desired
    # location.
    if check("the robot's gripper is holding the object and the object is not at the desired location"):
        robot.move("object to desired location")
# Steps:
    #  1. Put gripper around the dial
    #  2. Turn the dial to the correct combination
    # We need to first grip the dial that needs to be turned by dropping the gripper around it.
    if check("the robot's gripper is not around the lock dial"):
        robot.drop("gripper around the lock dial")
    # Once the gripper is around the dial, we can turn it to the correct combination.
    if check("the robot's gripper is around the lock dial"):
        robot.turn("the lock dial to the correct combination")
