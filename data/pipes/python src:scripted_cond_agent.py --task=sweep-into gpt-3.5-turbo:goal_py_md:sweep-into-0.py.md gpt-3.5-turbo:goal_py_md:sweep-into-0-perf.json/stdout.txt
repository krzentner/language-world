['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# sweep-into: grab the cube and move it to the target location
# def sweep_into(robot):
    # Steps:
    # 1. Put the gripper above the cube
    # 2. Drop the gripper around the cube
    # 3. Close the gripper
    # 4. Move the cube to the target location by sweeping it in
    # First, put the gripper roughly above the cube.
    if check("the robot's gripper is not above the cube"):
        robot.move_gripper("above the cube")
    # If the gripper isn't around the cube, put it around the cube.
    if check("the robot's gripper is not around the cube and the robot's gripper is open"):
        robot.move_gripper("near the cube", close_gripper=True)
    # If the gripper is near the cube and closed, sweep the cube into the target location.
    if check("the robot's gripper is near the cube and the robot's gripper is closed"):
        robot.move_gripper("sweep into the target location")
{'sweep-into': [("the robot's gripper is not above the cube", "the robot's gripper is above the cube"), ("the robot's gripper is not around the cube and the robot's gripper is open", "the robot's gripper is near the cube and the robot's gripper is closed"), ("the robot's gripper is near the cube and the robot's gripper is closed", "the robot's gripper is near sweep into the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is near the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.7545854164012988
Success rates:
{
 "sweep-into": 0.0
}
