['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# coffee-pull: grab the mug and pull it to the target location
# def coffee_pull(robot):
    # Steps:
    # 1. Place gripper above the handle of the mug
    # 2. Close the gripper around the handle
    # 3. Move the gripper to the target location while keeping a firm grip on the mug.
    if check("the robot's gripper is not above the handle of the mug"):
        robot.move_gripper("above the handle of the mug")
    if check("the robot's gripper is above the handle of the mug and the robot's gripper is open"):
        robot.move_gripper("around the handle of the mug", close_gripper=True)
    if check("the robot's gripper is around the handle of the mug and the robot's gripper is not at the target location"):
        robot.move_gripper("near the target location")
{'coffee-pull': [("the robot's gripper is not above the handle of the mug", "the robot's gripper is above the handle of the mug"), ("the robot's gripper is above the handle of the mug and the robot's gripper is open", "the robot's gripper is around the handle of the mug and the robot's gripper is closed"), ("the robot's gripper is around the handle of the mug and the robot's gripper is not at the target location", "the robot's gripper is near the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put the gripper above the puck'), ("the robot's gripper is above the mug and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug and the robot's gripper is not near the target location", 'push the gripper into the puck')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put the gripper above the puck'), ("the robot's gripper is above the mug and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug and the robot's gripper is not near the target location", 'push the gripper into the puck')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put the gripper above the puck'), ("the robot's gripper is above the mug and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug and the robot's gripper is not near the target location", 'push the gripper into the puck')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.08591200292201177
Success rates:
{
 "coffee-pull": 0.0
}
