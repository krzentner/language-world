['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above peg
    #  2. Grab peg
    #  3. Pull peg sideways out of hole
    # First, put the gripper above the peg.
    if check("the robot's gripper is not vertically aligned with the peg"):
        robot.move_gripper("vertically aligned with the peg")
    # If the peg becomes left of the gripper, go back to putting the gripper
    # above the peg.
    # Because the peg is a long object, check if the gripper is lined up with it
    # from the front instead of around it.
    if check("peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper"):
        robot.move_gripper("forward aligned with the peg", close_gripper=True)
    # As long the gripper is still mostly around the peg, pull the peg out of
    # the hole.
    if check("the robot's gripper is forward aligned with the peg"):
        robot.move_gripper("left of the peg")
{'peg-unplug-side': [("the robot's gripper is not vertically aligned with the peg", "the robot's gripper is vertically aligned with the peg"), ("peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper", "the robot's gripper is forward aligned with the peg and the robot's gripper is closed"), ("the robot's gripper is forward aligned with the peg", "the robot's gripper is left of the peg")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the peg", 'push the gripper into the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the peg", 'push the gripper into the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.01
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the peg", 'push the gripper into the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.031005195861356315
Success rates:
{
 "peg-unplug-side": 0.01
}
