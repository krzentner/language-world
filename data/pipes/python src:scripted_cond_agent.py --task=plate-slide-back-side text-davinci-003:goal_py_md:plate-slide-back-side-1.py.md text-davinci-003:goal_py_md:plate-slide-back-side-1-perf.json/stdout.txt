['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The steps for this task are: 
1. Put gripper slightly left of the plate 
2. Slide the plate with the gripper (right side moving) back into the target location

The code would look like this:

```
# plate-slide-back-side: slide the plate back sideways into the target location
# def plate_slide_back_side(robot):
    # Steps:
    #  1. Put gripper slightly left of the plate
    #  2. Slide the plate with the gripper (right side moving) back into the target location
    # If the robot's gripper is not slightly left of the plate, move it there.
    if check("the robot's gripper is not slightly left of the plate"):
        robot.move_gripper("slightly left of the plate")
    # Once the gripper is slightly left of the plate, start sliding the plate
    # back with the right side of the plate moving.
    if check("the robot's gripper is slightly left of the plate"):
        robot.move_gripper("right of the target location", close_gripper=True)
    # If the plate is close enough to the target location, we can just push
    # it in sideways.
    if check("the plate is near the target location"): 
        robot.move_gripper("left of the target location")
```
{'plate-slide-back-side': [("the robot's gripper is not slightly left of the plate", "the robot's gripper is slightly left of the plate"), ("the robot's gripper is slightly left of the plate", "the robot's gripper is right of the target location and the robot's gripper is closed"), ('the plate is near the target location', "the robot's gripper is left of the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the plate", 'move gripper to left of window handle'), ("the robot's gripper is not left of the plate", 'put the gripper in front of the drawer'), ("the plate is near the robot's gripper", 'put the gripper in front of the drawer')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the plate", 'move gripper to left of window handle'), ("the robot's gripper is not left of the plate", 'put the gripper in front of the drawer'), ("the plate is near the robot's gripper", 'put the gripper in front of the drawer')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the plate", 'move gripper to left of window handle'), ("the robot's gripper is not left of the plate", 'put the gripper in front of the drawer'), ("the plate is near the robot's gripper", 'put the gripper in front of the drawer')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.21045098378772623
Success rates:
{
 "plate-slide-back-side": 0.0
}
