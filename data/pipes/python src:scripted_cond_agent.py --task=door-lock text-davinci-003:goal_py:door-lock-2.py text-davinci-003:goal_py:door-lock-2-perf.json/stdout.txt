['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above the door lock
    #  2. Move gripper around the lock
    #  3. Twist the knob to the desired number
    # First, put the robot's gripper above the door lock.
    if check("the robot's gripper is not above the door lock"):
        robot.move_gripper("above the door lock")
    # Once the gripper is above the lock, move it around the lock.
    if check("the robot's gripper is not around the door lock"):
        robot.move_gripper("around the door lock", close_gripper=True)
    # Once the gripper is around the lock, twist the knob to the desired number.
    if check("the robot's gripper is around the door lock"):
        robot.move_gripper("counterclockwise around the door lock")
{'door-lock': [("the robot's gripper is not above the door lock", "the robot's gripper is above the door lock"), ("the robot's gripper is not around the door lock", "the robot's gripper is around the door lock and the robot's gripper is closed"), ("the robot's gripper is around the door lock", "the robot's gripper is counterclockwise around the door lock")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not around the door's lock", 'drop gripper around puck'), ("the robot's gripper is around the door's lock", 'push the gripper into the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not around the door's lock", 'drop gripper around puck'), ("the robot's gripper is around the door's lock", 'push the gripper into the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put the gripper above the puck'), ("the robot's gripper is not around the door's lock", 'drop gripper around puck'), ("the robot's gripper is around the door's lock", 'push the gripper into the puck')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 6.082966225941715
Success rates:
{
 "door-lock": 1.0
}
