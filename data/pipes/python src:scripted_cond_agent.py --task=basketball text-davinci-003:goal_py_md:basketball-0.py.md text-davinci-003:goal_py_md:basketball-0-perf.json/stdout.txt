['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps: 
1. Set the robot's gripper above the basketball 
2. Drop the gripper around the basketball 
3. Close the gripper around the basketball 
4. Line up the basketball with the hoop 
5. Release the basketball, shooting it into the hoop 

```
# basketball: put the ball into into the hoop
# def basketball(robot):
    # Steps:
    #  1. Set the robot's gripper above the basketball 
    if check("the robot's gripper is not above the basketball"):
        robot.move_gripper("above the basketball")
    #  2. Drop the gripper around the basketball 
    if check("the robot's gripper is not around the basketball"):
        robot.move_gripper("near the basketball", close_gripper=True)
    #  3. Close the gripper around the basketball
    if check("the robot's gripper is not closed"):
        robot.move_gripper("closed") 
    #  4. Line up the basketball with the hoop 
    if check("the basketball is not horizontally aligned with the hoop"):
        robot.move_gripper("horizontally aligned with hoop")
    #  5. Release the basketball, shooting it into the hoop
    if check("the basketball is horizontally aligned with the hoop"):
        robot.move_gripper("above the basketball", open_gripper=True)

```
{'basketball': [("the robot's gripper is not above the basketball", "the robot's gripper is above the basketball"), ("the robot's gripper is not around the basketball", "the robot's gripper is near the basketball and the robot's gripper is closed"), ("the robot's gripper is not closed", "the robot's gripper is near closed"), ('the basketball is not horizontally aligned with the hoop', "the robot's gripper is horizontally aligned with hoop"), ('the basketball is horizontally aligned with the hoop', "the robot's gripper is above the basketball and the robot's gripper is open"), ('the basketball is horizontally aligned with the hoop', "the robot's gripper is the robot's gripper is above the basketball and the robot's gripper is open")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball", 'push the gripper into the puck'), ("the robot's gripper is closed", 'drop gripper around puck'), ('the ball is not horizontally aligned with the hoop', 'put the gripper in front of the drawer'), ('the ball is horizontally aligned with the hoop', 'put the gripper above the puck'), ('the ball is horizontally aligned with the hoop', 'put the gripper above the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball", 'push the gripper into the puck'), ("the robot's gripper is closed", 'drop gripper around puck'), ('the ball is not horizontally aligned with the hoop', 'put the gripper in front of the drawer'), ('the ball is horizontally aligned with the hoop', 'put the gripper above the puck'), ('the ball is horizontally aligned with the hoop', 'put the gripper above the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball", 'push the gripper into the puck'), ("the robot's gripper is closed", 'drop gripper around puck'), ('the ball is not horizontally aligned with the hoop', 'put the gripper in front of the drawer'), ('the ball is horizontally aligned with the hoop', 'put the gripper above the puck'), ('the ball is horizontally aligned with the hoop', 'put the gripper above the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.03278164357709154
Success rates:
{
 "basketball": 0.0
}
