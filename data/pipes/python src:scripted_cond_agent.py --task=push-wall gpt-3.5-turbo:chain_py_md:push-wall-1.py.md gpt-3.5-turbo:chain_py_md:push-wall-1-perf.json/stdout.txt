['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# push-wall: slide the puck to the target location with a small wall in the way
# def push_wall(robot):
    # Steps:
    #  1. Put gripper above puck
    #  2. Push gripper into top of puck
    #  3. Slide puck to just below the wall
    #  4. Move gripper above the wall
    #  5. Slide the puck to the goal
    # First, put the gripper above the puck, and check if there's a wall blocking it.
    if check("there is a wall between the puck and the robot's gripper"):
        robot.move("gripper to the side of the wall")
    if check("the robot's gripper is not above the puck"):
        robot.put("gripper above the puck")
    # If the gripper is aligned with the puck but not near it, move the gripper
    # down to the puck to slide it.
    if check("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck"):
        robot.push("the gripper into the puck")
    # If the gripper is near the puck, we've probably trapped the puck and can
    # slide it to just below the wall.
    # Close the gripper to make sure we keep control of the puck.
    if check("the robot's gripper is near the puck and the puck is below the robot's gripper"):
        robot.slide("the puck to just below the wall")
    # Once the puck is just below the wall, move the gripper above the wall.
    if check("the puck is just below the wall"):
        robot.move("gripper above the wall")
    # Finally, slide the puck to the goal.
    if check("the robot's gripper is vertically aligned with the puck above the wall"):
        robot.slide("the puck to the goal")
{'push-wall': [("there is a wall between the puck and the robot's gripper", 'move gripper to the side of the wall'), ("the robot's gripper is not above the puck", 'put gripper above the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'slide the puck to just below the wall'), ('the puck is just below the wall', 'move gripper above the wall'), ("the robot's gripper is vertically aligned with the puck above the wall", 'slide the puck to the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the puck is near wall and the puck is behind the robot's gripper", 'move gripper to left of window handle'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'slide the puck to the goal'), ('the puck is not below wall', 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with wall and the puck is above wall", 'slide the puck to the goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the puck is near wall and the puck is behind the robot's gripper", 'move gripper to left of window handle'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'slide the puck to the goal'), ('the puck is not below wall', 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with wall and the puck is above wall", 'slide the puck to the goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the puck is near wall and the puck is behind the robot's gripper", 'move gripper to left of window handle'), ("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'push the gripper into the puck'), ("the robot's gripper is near the puck and the puck is below the robot's gripper", 'slide the puck to the goal'), ('the puck is not below wall', 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with wall and the puck is above wall", 'slide the puck to the goal')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.29593464571872447
Success rates:
{
 "push-wall": 0.0
}
