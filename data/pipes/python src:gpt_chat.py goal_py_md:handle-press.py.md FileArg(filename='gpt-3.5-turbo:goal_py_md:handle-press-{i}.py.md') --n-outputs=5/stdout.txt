Using model: gpt-3.5-turbo
# handle-press: push down the handle
# def handle_press(robot):
    # Steps:
    # 1. Put gripper above the handle
    # 2. Grab the handle with the gripper
    # 3. Push down on the handle
    # 4. Release the handle
    # First, put the gripper above the handle.
    if check("the robot's gripper is not vertically aligned with the handle"):
        robot.move_gripper("vertically aligned with the handle")
    # If the gripper isn't around the handle, put it around the handle.
    if check("the robot's gripper is not around handle and the robot's gripper is open"):
        robot.move_gripper("near the handle", close_gripper=True)
    # If the gripper is around the handle and open, push down on the handle.
    # Close the gripper to make sure we keep control of the handle.
    if check("the robot's gripper is around the handle and the robot's gripper is closed"):
        robot.move_gripper("near the handle", push_down=True)
    # If the handle is pushed down, release the handle.
    if check("the handle is pushed down"):
        robot.move_gripper("near the handle", open_gripper=True)
# handle-press: push down the handle
# def handle_press(robot):
    # Steps:
    #  1. Align the gripper above the handle
    #  2. Close the gripper around the handle
    #  3. Push down on the handle
    # First, put the gripper directly above the handle.
    if check("the robot's gripper is not vertically aligned with the handle"):
        robot.move_gripper("vertically aligned with the handle")
    # If the gripper is above the handle and open, grab the handle by closing
    # the gripper.
    if check("the robot's gripper is vertically aligned with the handle and the robot's gripper is open"):
        robot.move_gripper("around the handle", close_gripper=True)
    # Once the gripper is around the handle, push down on it.
    if check("the robot's gripper is closed around the handle"):
        robot.move_gripper("downward pressure on the handle")
# handle-press: push down the handle
# def handle_press(robot):
    # Steps:
    #  1. Put gripper above handle
    #  2. Drop gripper around handle
    #  3. Push down on the handle
    # First, put the gripper mostly above the handle.
    if check("the robot's gripper is not almost vertically aligned with the handle"):
        robot.move_gripper("almost vertically aligned with the handle", close_gripper=True)
    # As long as the gripper is almost lined up, closing it should line it up
    # all the way.
    if check("the robot's gripper is vertically aligned with the handle"):
        robot.move_gripper("near the handle")
# handle-press: push down the handle
# def handle_press(robot):
    # Steps:
    #  1. Put gripper above the handle
    #  2. Drop gripper around the handle
    #  3. Push down on the handle
    # First, put the gripper mostly above the handle.
    if check("the robot's gripper is not almost vertically aligned with handle"):
        robot.move_gripper("almost vertically aligned with the handle", close_gripper=True)
    # As long as the gripper is almost lined up, closing it should line it up
    # all the way.
    if check("the robot's gripper is vertically aligned with the handle"):
        robot.move_gripper("near the handle")
# handle-press: push down the handle
# def handle_press(robot):
    # Steps:
    #  1. Move gripper above the handle
    #  2. Drop gripper around the handle
    #  3. Press the handle down
    # Begin by moving the gripper above the handle.
    if check("the robot's gripper is not above the handle"):
        robot.move_gripper("above the handle")
    # If the gripper is not around the handle, position it so it can grasp the handle.
    if check("the robot's gripper is not around the handle and the robot's gripper is open"):
        robot.move_gripper("near the handle", close_gripper=True)
    # If the gripper is not pressing down on the handle, move it down to activate the handle.
    if check("the robot's gripper is around the handle and the handle is not pressed down"):
        robot.move_gripper("near the top of the handle")
