['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
```
# stick-pull: use the stick to pull the thermos to the target location
# def stick_pull(robot):
    if check("the robot's gripper is not holding the stick and the stick is not touching the thermos"):
        robot.grab("the stick")
    if check("the stick is touching the thermos and the robot's gripper is not holding the thermos"):
        robot.align("the stick with the thermos")
    if check("the stick is aligned with the thermos and the robot's gripper is not holding the thermos"):
        robot.pull("the thermos towards the goal with the stick")
    if check("the thermos is at the goal location"):
        robot.drop("the thermos")    
```
{'stick-pull': [("the robot's gripper is not holding the stick and the stick is not touching the thermos", 'grab the stick'), ("the stick is touching the thermos and the robot's gripper is not holding the thermos", 'align the stick with the thermos'), ("the stick is aligned with the thermos and the robot's gripper is not holding the thermos", 'pull the thermos towards the goal with the stick'), ('the thermos is at the goal location', 'drop the thermos')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the stick and the stick is not behind the thermos", 'grab peg'), ("the stick is behind the thermos and the robot's gripper is not behind the thermos", 'slide the puck to the goal'), ("the stick is forward aligned with the thermos and the robot's gripper is not behind the thermos", 'push the gripper into the puck'), ('the thermos is near the target location', 'drop gripper around puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the stick and the stick is not behind the thermos", 'grab peg'), ("the stick is behind the thermos and the robot's gripper is not behind the thermos", 'slide the puck to the goal'), ("the stick is forward aligned with the thermos and the robot's gripper is not behind the thermos", 'push the gripper into the puck'), ('the thermos is near the target location', 'drop gripper around puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the stick and the stick is not behind the thermos", 'grab peg'), ("the stick is behind the thermos and the robot's gripper is not behind the thermos", 'slide the puck to the goal'), ("the stick is forward aligned with the thermos and the robot's gripper is not behind the thermos", 'push the gripper into the puck'), ('the thermos is near the target location', 'drop gripper around puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0844705179944093
Success rates:
{
 "stick-pull": 0.0
}
