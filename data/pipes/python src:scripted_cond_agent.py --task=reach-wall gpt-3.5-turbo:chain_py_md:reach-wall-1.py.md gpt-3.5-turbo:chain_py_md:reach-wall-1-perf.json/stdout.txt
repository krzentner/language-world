['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# reach-wall: reach to the target location with a short wall in the way
# def reach_wall(robot):

# For this task, we need to check if there is a short wall between the robot and the target location.
# If there is a wall, we need to first move the robot to a position where it can grab the wall and move it out of the way.

# Step 1: Check if there is a short wall between the robot and the target location.
if check("there is a short wall between the robot and the target location"):
    
    # Step 2: Move the robot to a position where it can grab the wall.
    if check("the robot is not close to the wall"):
        robot.move("to wall")
    
    # Step 3: Grab the wall with the gripper.
    if check("the gripper is not around the wall"):
        robot.grab("wall")
    
    # Step 4: Lift the wall out of the way and move it to a nearby location.
    if check("the gripper is holding the wall"):
        robot.lift("the wall")
        robot.move("the wall to nearby location")
        robot.drop("the wall")
    
    # Step 5: Move the robot to the target location.
    if check("the robot is not at the target location"):
        robot.move("to target location")
    
    # Step 6: Reach towards the target location.
    if check("the robot's gripper is not near reach target"):
        robot.reach("to goal")
    
else:
    # If there is no wall in the way, simply move the robot to the target location and reach towards it.
    if check("the robot is not at the target location"):
        robot.move("to target location")
    if check("the robot's gripper is not near reach target"):
        robot.reach("to goal")
{'reach-wall': [('the robot is not close to the wall', 'move to wall'), ('the gripper is not around the wall', 'grab wall'), ('the gripper is holding the wall', 'lift the wall'), ('the robot is not at the target location', 'move to target location'), ("the robot's gripper is not near reach target", 'reach to goal'), ('the robot is not at the target location', 'move to target location'), ("the robot's gripper is not near reach target", 'reach to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of wall", 'reach to goal'), ("the robot's gripper is not around wall", 'grab peg'), ("the robot's gripper is behind wall", 'slide the puck to the goal'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle'), ("the robot's gripper is not near the target location", 'reach to goal'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle'), ("the robot's gripper is not near the target location", 'reach to goal')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of wall", 'reach to goal'), ("the robot's gripper is not around wall", 'grab peg'), ("the robot's gripper is behind wall", 'slide the puck to the goal'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle'), ("the robot's gripper is not near the target location", 'reach to goal'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle'), ("the robot's gripper is not near the target location", 'reach to goal')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of wall", 'reach to goal'), ("the robot's gripper is not around wall", 'grab peg'), ("the robot's gripper is behind wall", 'slide the puck to the goal'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle'), ("the robot's gripper is not near the target location", 'reach to goal'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle'), ("the robot's gripper is not near the target location", 'reach to goal')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.5758514368043834
Success rates:
{
 "reach-wall": 0.0
}
