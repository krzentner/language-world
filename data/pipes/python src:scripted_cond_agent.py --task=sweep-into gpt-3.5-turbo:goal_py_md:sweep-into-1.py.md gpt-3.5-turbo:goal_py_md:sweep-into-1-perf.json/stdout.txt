['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# sweep-into: grab the cube and move it to the target location
# def sweep_into(robot):
    # Steps:
    # 1. Put gripper above the cube
    # 2. Close gripper to grab the cube
    # 3. Move the cube to the target location by sliding it
    # First, put the gripper above the cube
    if check("the robot's gripper is not vertically aligned with the cube"):
        robot.move_gripper("vertically aligned with the cube")
    # If the gripper is near the cube, grab it by closing the gripper
    if check("the robot's gripper is above the cube and the robot's gripper is open"):
        robot.move_gripper("near the cube", close_gripper=True)
    # If the gripper is holding the cube, slide it towards the target location
    if check("the robot's gripper is holding the cube and the cube is below the robot's gripper"):
        robot.move_gripper("above the target location")
{'sweep-into': [("the robot's gripper is not vertically aligned with the cube", "the robot's gripper is vertically aligned with the cube"), ("the robot's gripper is above the cube and the robot's gripper is open", "the robot's gripper is near the cube and the robot's gripper is closed"), ("the robot's gripper is holding the cube and the cube is below the robot's gripper", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is above the cube and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is behind the cube and the cube is below the robot's gripper", 'put the gripper above the puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is above the cube and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is behind the cube and the cube is below the robot's gripper", 'put the gripper above the puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is above the cube and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is behind the cube and the cube is below the robot's gripper", 'put the gripper above the puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.7961195379771668
Success rates:
{
 "sweep-into": 0.0
}
