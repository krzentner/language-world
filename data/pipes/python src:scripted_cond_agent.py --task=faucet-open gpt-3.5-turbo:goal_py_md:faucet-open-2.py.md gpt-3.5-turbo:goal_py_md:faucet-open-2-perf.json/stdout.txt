['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# faucet-open: turn the faucet left
# def faucet_open(robot):
    # Steps:
    #  1. Put gripper right of the faucet handle
    #  2. Start pushing against the faucet handle to turn it left
    #  3. Turn the faucet left
    # If the robot's gripper is not vertically lined up with the faucet handle,
    # we should move the gripper near the faucet handle to start turning it.
    if check("the robot's gripper is not near the faucet handle"):
        robot.move_gripper("near the faucet handle")
    # If the robot's gripper is near the faucet handle we can probably turn the
    # faucet handle now by moving the gripper left.
    if check("the robot's gripper is in front of the faucet handle"):
        robot.move_gripper("almost vertically aligned with the faucet handle")
    # If the robot's gripper is starting to be behind the faucet handle,
    # turn the faucet handle left more.
    if check("the robot's gripper is in front of the faucet handle and the faucet is not fully open"):
        robot.move_gripper("behind the faucet handle")
{'faucet-open': [("the robot's gripper is not near the faucet handle", "the robot's gripper is near the faucet handle"), ("the robot's gripper is in front of the faucet handle", "the robot's gripper is almost vertically aligned with the faucet handle"), ("the robot's gripper is in front of the faucet handle and the faucet is not fully open", "the robot's gripper is behind the faucet handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the faucet", 'push the gripper into the puck'), ("the robot's gripper is in front of the faucet", 'put the gripper above the puck'), ("the robot's gripper is in front of the faucet and the faucet is not near the robot's gripper", 'put the gripper above the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the faucet", 'push the gripper into the puck'), ("the robot's gripper is in front of the faucet", 'put the gripper above the puck'), ("the robot's gripper is in front of the faucet and the faucet is not near the robot's gripper", 'put the gripper above the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.75
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the faucet", 'push the gripper into the puck'), ("the robot's gripper is in front of the faucet", 'put the gripper above the puck'), ("the robot's gripper is in front of the faucet and the faucet is not near the robot's gripper", 'put the gripper above the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 6.941536940830295
Success rates:
{
 "faucet-open": 0.75
}
