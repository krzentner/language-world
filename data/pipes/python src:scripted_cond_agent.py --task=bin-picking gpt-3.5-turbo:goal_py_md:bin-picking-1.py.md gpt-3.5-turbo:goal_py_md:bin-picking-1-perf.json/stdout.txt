['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# bin-picking: pick up the cube and place it in the target bin
# def bin_picking(robot):

# First, the robot needs to locate the cube in the bin. We can assume that the robot's camera
# can detect the cube and provide its location.
# If the cube is not in the gripper, the robot should move above the cube.
if check("the robot's gripper is not around cube"):
    robot.move_gripper("above the cube")

# Then, the robot should lower the gripper to grab the cube.
if check("the robot's gripper is above the cube"):
    robot.move_gripper("around the cube", close_gripper=True)

# The robot should then lift the cube off the bin.
if check("the robot's gripper is around cube"):
    robot.move_gripper("above the target bin")

# Finally, the robot should release the cube into the target bin.
if check("the robot's gripper is above the target bin"):
    robot.move_gripper("open") 

# End of task.
{'bin-picking': [("the robot's gripper is not around cube", "the robot's gripper is above the cube"), ("the robot's gripper is above the cube", "the robot's gripper is around the cube and the robot's gripper is closed"), ("the robot's gripper is around cube", "the robot's gripper is above the target bin"), ("the robot's gripper is above the target bin", "the robot's gripper is near open")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube", 'drop gripper around puck')], env_name='bin-picking', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube", 'drop gripper around puck')], env_name='bin-picking', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube", 'put the gripper above the puck'), ("the robot's gripper is above the cube", 'drop gripper around puck')], env_name='bin-picking', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.05909860756588409
Success rates:
{
 "bin-picking": 0.0
}
