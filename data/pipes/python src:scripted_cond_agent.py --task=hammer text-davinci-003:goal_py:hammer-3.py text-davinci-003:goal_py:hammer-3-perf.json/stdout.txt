['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above the head of the nail
    #  2. Push the hammer against the nail, grooving the nails head
    #  3. Hit the nail with the hammer
    # To hit the nail with the hammer, the robot needs to move its gripper fairly
    # accurately above the nail head.
    if check("the robot's gripper is not above the head of the nail"):
        robot.move_gripper("above the head of the nail")
    # Then the robot should be able to push the hammer against the nail,
    # grooving the nail head.
    if check("the robot's gripper is above the head of the nail"):
        robot.move_gripper("near the head of the nail")
    # Finally, we can hit the nail with the hammer.
    if check("the robot's gripper is near the head of the nail"):
        robot.move_gripper("above the head of the nail")
{'hammer': [("the robot's gripper is not above the head of the nail", "the robot's gripper is above the head of the nail"), ("the robot's gripper is above the head of the nail", "the robot's gripper is near the head of the nail"), ("the robot's gripper is near the head of the nail", "the robot's gripper is above the head of the nail")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put the gripper above the puck'), ("the robot's gripper is above the hammer", 'put the gripper in front of the drawer'), ("the robot's gripper is near the hammer", 'put the gripper above the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put the gripper above the puck'), ("the robot's gripper is above the hammer", 'put the gripper in front of the drawer'), ("the robot's gripper is near the hammer", 'put the gripper above the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put the gripper above the puck'), ("the robot's gripper is above the hammer", 'put the gripper in front of the drawer'), ("the robot's gripper is near the hammer", 'put the gripper above the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9257418926634472
Success rates:
{
 "hammer": 0.0
}
