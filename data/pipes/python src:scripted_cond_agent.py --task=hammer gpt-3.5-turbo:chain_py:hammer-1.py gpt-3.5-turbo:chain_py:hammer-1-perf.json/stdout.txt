['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
#  1. Grab the hammer
#  2. Line up the hammer with the nail
#  3. Swing the hammer down to hit the nail
# First, put the gripper around the hammer.
if check("the robot's gripper is not around the hammer"):
    robot.grab("hammer")
# Line up the hammer with the nail.
if check("the robot's gripper is around the hammer and the hammer is not aligned with the nail"):
    robot.align("hammer with nail")
# Swing the hammer down to hit the nail.
if check("the robot's gripper is around the hammer and the hammer is aligned with the nail"):
    robot.swing("hammer to hit the nail")
{'hammer': [("the robot's gripper is not around the hammer", 'grab hammer'), ("the robot's gripper is around the hammer and the hammer is not aligned with the nail", 'align hammer with nail'), ("the robot's gripper is around the hammer and the hammer is aligned with the nail", 'swing hammer to hit the nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer", 'grab peg'), ("the robot's gripper is around the hammer and the hammer is not forward aligned with the robot's gripper", 'align peg to hole'), ("the robot's gripper is around the hammer and the hammer is forward aligned with the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer", 'grab peg'), ("the robot's gripper is around the hammer and the hammer is not forward aligned with the robot's gripper", 'align peg to hole'), ("the robot's gripper is around the hammer and the hammer is forward aligned with the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer", 'grab peg'), ("the robot's gripper is around the hammer and the hammer is not forward aligned with the robot's gripper", 'align peg to hole'), ("the robot's gripper is around the hammer and the hammer is forward aligned with the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9242426854318133
Success rates:
{
 "hammer": 0.0
}
