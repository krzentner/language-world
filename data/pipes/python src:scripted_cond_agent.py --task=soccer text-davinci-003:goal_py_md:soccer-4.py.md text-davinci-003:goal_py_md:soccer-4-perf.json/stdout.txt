['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then use the steps from the other tasks to fill in the procedure.

# soccer: push the soccer ball into the target location
# def soccer(robot):
    # Steps:
    #  1. Put gripper above soccer ball
    #  2. Push gripper into top of soccer ball
    #  3. Slide soccer ball to goal
    # First, put the gripper roughly above the soccer ball, so that we don't bump it while
    # trying to grab it.
    if check("the robot's gripper is not above the soccer ball"):
        robot.move_gripper("above the soccer ball")
    # If the gripper isn't around the soccer ball, put it around the soccer ball.
    if check("the robot's gripper is not around soccer ball and the robot's gripper is open"):
        robot.move_gripper("near the soccer ball", close_gripper=True)
    # If the gripper is near the soccer ball and open, maybe we can grab it by closing
    # the gripper.
    if check("the robot's gripper is above soccer ball and the robot's gripper is closed"):
        robot.move_gripper("above the target location")
{'soccer': [("the robot's gripper is not above the soccer ball", "the robot's gripper is above the soccer ball"), ("the robot's gripper is not around soccer ball and the robot's gripper is open", "the robot's gripper is near the soccer ball and the robot's gripper is closed"), ("the robot's gripper is above soccer ball and the robot's gripper is closed", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the ball and the robot's gripper is closed", 'put the gripper above the puck')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the ball and the robot's gripper is closed", 'put the gripper above the puck')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is above the ball and the robot's gripper is closed", 'put the gripper above the puck')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.3132878961248273
Success rates:
{
 "soccer": 0.0
}
