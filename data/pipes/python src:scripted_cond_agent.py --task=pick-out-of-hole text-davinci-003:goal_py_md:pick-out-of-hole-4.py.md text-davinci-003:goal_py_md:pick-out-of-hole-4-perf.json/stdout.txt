['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put gripper directly above the peg 
2. Drop gripper around the peg 
3. Close gripper around peg 
4. Move peg out of the hole 
5. Move peg to target location 

```
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):
    # Steps:
    #  1. Put gripper directly above the peg
    if check("the robot's gripper is not above the peg"):
        robot.move_gripper("directly above the peg")
    #  2. Drop gripper around the peg
    if check("the robot's gripper is above the peg and the robot's gripper is not around peg"):
        robot.move_gripper("around the peg", close_gripper=True)
    #  3. Close gripper around peg
    if check("the robot's gripper is around the peg and the robot's gripper is open"):
        robot.move_gripper("near the peg", close_gripper=True)
    #  4. Move peg out of the hole
    # To move the peg out of the hole, the robot can move the peg sideways.
    # Because the peg is in a hole, look at it from the front.
    if check("the robot's gripper is not forward aligned with the peg"):
        robot.move_gripper("forward aligned with the peg")
    # Move the peg out of the hole by moving the gripper to the left.
    if check("the robot's gripper is forward aligned with the peg"):
        robot.move_gripper("left of the peg")
    #  5. Move peg to target location
    if check("the peg is left of the robot's gripper"):
        robot.move_gripper("above target location")
{'pick-out-of-hole': [("the robot's gripper is not above the peg", "the robot's gripper is directly above the peg"), ("the robot's gripper is above the peg and the robot's gripper is not around peg", "the robot's gripper is around the peg and the robot's gripper is closed"), ("the robot's gripper is around the peg and the robot's gripper is open", "the robot's gripper is near the peg and the robot's gripper is closed"), ("the robot's gripper is not forward aligned with the peg", "the robot's gripper is forward aligned with the peg"), ("the robot's gripper is forward aligned with the peg", "the robot's gripper is left of the peg"), ("the peg is left of the robot's gripper", "the robot's gripper is above target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is not forward aligned with the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the puck", 'put the gripper in front of the drawer'), ("the puck is left of the robot's gripper", 'put the gripper above the puck')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is not forward aligned with the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the puck", 'put the gripper in front of the drawer'), ("the puck is left of the robot's gripper", 'put the gripper above the puck')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is not forward aligned with the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the puck", 'put the gripper in front of the drawer'), ("the puck is left of the robot's gripper", 'put the gripper above the puck')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.003970279024612188
Success rates:
{
 "pick-out-of-hole": 0.0
}
