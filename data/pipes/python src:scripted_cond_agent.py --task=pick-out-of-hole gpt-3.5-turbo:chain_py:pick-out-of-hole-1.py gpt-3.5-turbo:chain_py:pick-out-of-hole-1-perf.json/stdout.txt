['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put gripper above peg
    #  2. Grab the peg with the gripper
    #  3. Lift the peg out of the hole
    #  4. Move the peg to the target location
    # First, put the gripper above the peg.
    if check("the robot's gripper is not vertically aligned with the peg"):
        robot.put("gripper above peg")
    # If the gripper is not around the peg, grab it.
    if check("the robot's gripper is not around peg and the robot's gripper is open"):
        robot.grab("peg")
    # Once the peg is grabbed, lift it out of the hole.
    if check("the robot's gripper is around peg and the peg is not lifted above the hole"):
        robot.lift("peg out of hole")
    # Finally, move the peg to the target location.
    if check("the peg is above the robot's gripper"):
        robot.move("peg to goal")
{'pick-out-of-hole': [("the robot's gripper is not vertically aligned with the peg", 'put gripper above peg'), ("the robot's gripper is not around peg and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around peg and the peg is not lifted above the hole", 'lift peg out of hole'), ("the peg is above the robot's gripper", 'move peg to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the puck and the puck is not above the robot's gripper", 'align peg to hole'), ("the puck is above the robot's gripper", 'reach to goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the puck and the puck is not above the robot's gripper", 'align peg to hole'), ("the puck is above the robot's gripper", 'reach to goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'grab peg'), ("the robot's gripper is around the puck and the puck is not above the robot's gripper", 'align peg to hole'), ("the puck is above the robot's gripper", 'reach to goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.03554849943097052
Success rates:
{
 "pick-out-of-hole": 0.0
}
