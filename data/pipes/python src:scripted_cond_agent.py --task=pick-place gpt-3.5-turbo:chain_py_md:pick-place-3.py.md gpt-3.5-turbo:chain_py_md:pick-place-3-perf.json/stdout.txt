['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-place: pick up the puck and hold it at the target location
# def pick_place(robot):
# Steps:
#  1. Put gripper above puck
#  2. Drop gripper around puck
#  3. Close gripper around puck
#  4. Move puck to goal
# First, put the gripper above the puck to avoid bumping it while trying to grab it.
if check("the robot's gripper is not above the puck"):
    robot.place("gripper above puck")
# If the gripper isn't around the puck, put it around the puck.
if check("the robot's gripper is not around puck and the robot's gripper is open"):
    robot.drop("gripper around puck")
# If the gripper is near the puck and open, close it to grab the puck.
if check("the robot's gripper is near puck and the robot's gripper is open"):
    robot.close("gripper around puck")
# If we have the puck in the gripper, move it to the goal.
if check("the robot's gripper is above puck and the robot's gripper is closed"):
    robot.reach("to goal")
{'pick-place': [("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is not around puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above puck and the robot's gripper is closed", 'reach to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'reach to goal')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'reach to goal')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'reach to goal')], env_name='pick-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.21371231241118352
Success rates:
{
 "pick-place": 0.0
}
