Using model: gpt-3.5-turbo
# door-unlock: turn the dial on the door
# def door_unlock(robot):
    # Steps:
    #  1. Put gripper around the dial
    #  2. Turn the dial clockwise
    #  3. Turn the dial counterclockwise
    #  4. Turn the dial clockwise
    #  5. Stop turning the dial
    # First, put the gripper around the dial.
    if check("the robot's gripper is not around the dial and the robot's gripper is open"):
        robot.move_gripper("around the dial", close_gripper=True)
    # If the gripper is around the dial, turn it clockwise.
    if check("the robot's gripper is around the dial and the robot's gripper is not turned clockwise"):
        robot.move_gripper("turned clockwise")
    # Then turn it counterclockwise.
    if check("the robot's gripper is turned clockwise and the robot's gripper is not turned counterclockwise"):
        robot.move_gripper("turned counterclockwise")
    # Finally, turn it clockwise again.
    if check("the robot's gripper is turned counterclockwise and the robot's gripper is not turned clockwise a second time"):
        robot.move_gripper("turned clockwise")
# door-unlock: turn the dial on the door
# def door_unlock(robot):
    # Steps:
    #  1. Put gripper on dial
    #  2. Turn dial to the unlocked position
    # The robot needs to turn the dial to the right position to unlock the door.
    # If the gripper is not above the dial, move it there.
    if check("the robot's gripper is not above the door dial"):
        robot.move_gripper("above the door dial")
    # If the gripper is above the dial but not around it, move it around the dial.
    if check("the robot's gripper is above the door dial and the robot's gripper is open"):
        robot.move_gripper("around the door dial", close_gripper=True)
    # Move the dial to the unlocked position (one full turn to the right).
    if check("the robot's gripper is around the door dial and not in the unlocked position"):
        robot.move_gripper("one full turn to the right")
# door-unlock: turn the dial on the door
# def door_unlock(robot):
    # Steps:
    #  1. Put gripper around the dial
    #  2. Turn the dial until the lock opens
    # First, put the gripper around the dial.
    if check("the robot's gripper is not around the door dial and the robot's gripper is open"):
        robot.move_gripper("around the door dial", close_gripper=True)
    # Now that the gripper is around the dial, turn the dial until the lock opens.
    # We can turn the dial by rotating the gripper clockwise.
    if check("the robot's gripper is around the door dial"):
        robot.rotate_gripper(clockwise=True, speed=1)
        if check("the lock has opened"):
            robot.stop_gripper_rotation()
# door-unlock: turn the dial on the door
# def door_unlock(robot):

# Steps:
#  1. Move the gripper above the knob
#  2. Turn the knob to the right
#  3. Turn the knob to the left
#  4. Turn the knob to the right again to unlock the door


# Move the gripper above the knob
if check("the robot's gripper is not above the doorknob"):
    robot.move_gripper("above the doorknob")


# Turn the knob to the right
if check("the door is still locked"):
    robot.move_gripper("around the knob", close_gripper=True)
    robot.rotate_wrist("right", degrees=180)

# Turn the knob to the left
if check("the door is still locked"):
    robot.rotate_wrist("left", degrees=180)

# Turn the knob to the right again to unlock the door
if check("the door is still locked"):
    robot.rotate_wrist("right", degrees=180)
# door-unlock: turn the dial on the door
# def door_unlock(robot):
    # Steps:
    #  1. Put gripper around dial handle
    #  2. Turn the handle clockwise to unlock the door
    # First, put the gripper roughly around the dial handle.
    if check("the robot's gripper is not around the dial handle"):
        robot.move_gripper("near the dial handle", close_gripper=True)
    # If the gripper is around the dial handle, turn it clockwise to unlock the
    # door.
    if check("the robot's gripper is around the dial handle"):
        robot.turn_gripper("clockwise", revolutions=1.5) # The number of revolutions may need to be adjusted to match the specific lock.
