['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


# faucet-open: turn the faucet left
# def faucet_open(robot):
    # Steps:
    #  1. Put gripper above the faucet handle
    #  2. Drop gripper to the faucet handle
    #  3. Turn the faucet to the left
    # First, put the gripper above the faucet handle.
    if check("the robot's gripper is not above the faucet handle"):
        robot.put("gripper above faucet handle")
    # As long as the gripper is not wrapped around the handle, close the gripper
    # around the handle.
    if check("the robot's gripper is not around faucet handle and the robot's gripper is open"):
        robot.drop("gripper around faucet handle")
    # As long as the gripper is still around the faucet handle, turn it to the
    # left.
    if check("the robot's gripper is around faucet handle"):
        robot.turn("faucet left")
{'faucet-open': [("the robot's gripper is not above the faucet handle", 'put gripper above faucet handle'), ("the robot's gripper is not around faucet handle and the robot's gripper is open", 'drop gripper around faucet handle'), ("the robot's gripper is around faucet handle", 'turn faucet left')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the faucet", 'put gripper above button'), ("the robot's gripper is not around the faucet and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the faucet", 'align peg to hole')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the faucet", 'put gripper above button'), ("the robot's gripper is not around the faucet and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the faucet", 'align peg to hole')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the faucet", 'put gripper above button'), ("the robot's gripper is not around the faucet and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the faucet", 'align peg to hole')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.022262974244989
Success rates:
{
 "faucet-open": 0.0
}
