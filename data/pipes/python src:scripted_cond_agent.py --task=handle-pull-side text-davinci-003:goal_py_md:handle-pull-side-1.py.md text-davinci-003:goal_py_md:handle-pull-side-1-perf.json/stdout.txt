['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then complete the task:

```
# handle-pull-side: pull up the handle from the side
# def handle_pull_side(robot):
    # Step:
    #  1. Put gripper below handle
    #  2. Grab handle with gripper
    #  3. Pull up handle
    # Put the gripper below the handle so that we don't have to line up the gripper precisely.
    if check("the robot's gripper is not below the handle"):
        robot.move_gripper("below the handle", close_gripper=True)
    # If the gripper is below the handle and the gripper is open,
    # we can grab the handle by closing the gripper.
    if check("the robot's gripper is below the handle and the robot's gripper is not closed"):
        robot.move_gripper("near the handle")
    # If the handle is trapped, we can pull it up.
    if check("the robot's gripper is near the handle and the robot's gripper is closed"):
        robot.move_gripper("above the handle")
```
{'handle-pull-side': [("the robot's gripper is not below the handle", "the robot's gripper is below the handle and the robot's gripper is closed"), ("the robot's gripper is below the handle and the robot's gripper is not closed", "the robot's gripper is near the handle"), ("the robot's gripper is near the handle and the robot's gripper is closed", "the robot's gripper is above the handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not below the handle", 'put the gripper above the puck'), ("the robot's gripper is below the handle and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is near the handle and the robot's gripper is closed", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not below the handle", 'put the gripper above the puck'), ("the robot's gripper is below the handle and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is near the handle and the robot's gripper is closed", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not below the handle", 'put the gripper above the puck'), ("the robot's gripper is below the handle and the robot's gripper is closed", 'push the gripper into the puck'), ("the robot's gripper is near the handle and the robot's gripper is closed", 'put the gripper above the puck')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.06202158939230551
Success rates:
{
 "handle-pull-side": 0.0
}
