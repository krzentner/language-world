['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The steps are as follows:

1. Put the gripper in front of the faucet handle
2. Grip the handle and turn it counter-clockwise 

```
# faucet-open: turn the faucet left
# def faucet_open(robot):
    # Steps:
    #  1. Put gripper in front of the faucet handle
    #  2. Grip the handle and turn it counter-clockwise
    if check("the robot's gripper is not in front of the faucet handle"):
        robot.move_gripper("in front of the faucet handle", close_gripper=True)
    # If the gripper is in front of the faucet handle and the gripper is open, 
    # grab the handle to start turning the faucet.
    if check("the robot's gripper is in front of the faucet handle and the robot's gripper is open"):
        robot.move_gripper("above the faucet handle")
    # If the gripper is around the handle and closed, turn the handle 
    # counter-clockwise to start the flow of water.
    if check("the robot's gripper is around the faucet handle and the robot's gripper is closed"):
        robot.move_gripper("turned counter-clockwise")
```
{'faucet-open': [("the robot's gripper is not in front of the faucet handle", "the robot's gripper is in front of the faucet handle and the robot's gripper is closed"), ("the robot's gripper is in front of the faucet handle and the robot's gripper is open", "the robot's gripper is above the faucet handle"), ("the robot's gripper is around the faucet handle and the robot's gripper is closed", "the robot's gripper is near turned counter-clockwise")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the faucet", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the faucet and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is around the faucet and the robot's gripper is closed", 'put the gripper above the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the faucet", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the faucet and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is around the faucet and the robot's gripper is closed", 'put the gripper above the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the faucet", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the faucet and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is around the faucet and the robot's gripper is closed", 'put the gripper above the puck')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.994914214503554
Success rates:
{
 "faucet-open": 0.0
}
