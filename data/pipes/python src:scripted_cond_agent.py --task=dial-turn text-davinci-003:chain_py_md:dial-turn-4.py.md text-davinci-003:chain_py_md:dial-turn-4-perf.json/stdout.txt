['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps: 
  1. Put gripper above dial
  2. Drop gripper around dial
  3. Rotate dial 

# dial-turn: turn the dial
# def dial_turn(robot):
    # Steps:
    #  1. Put gripper above dial
    #  2. Drop gripper around dial
    #  3. Rotate dial 
    # First, put the gripper roughly above dial, so that we don't bump it while
    # trying to grab it.
    if check("the robot's gripper is not above dial"):
        robot.place("gripper above dial")
    # If the gripper isn't around the dial, put it around the dial.
    if check("the robot's gripper is not around dial and the robot's gripper is open"):
        robot.drop("gripper around dial")
    # If the gripper is near the dial and open, maybe we can grab it by closing
    # the gripper.
    if check("the robot's gripper is near dial and the robot's gripper is open"):
        robot.close("gripper around dial")
    # We closed the gripper, and the dial is still near the gripper, so maybe we
    # grabbed it.
    # Try to rotate the dial.
    # If we didn't grab it, we'll just go back to an earlier step.
    if check("the robot's gripper is forward aligned with dial and the robot's gripper is closed"):
        robot.turn("dial")
{'dial-turn': [("the robot's gripper is not above dial", 'place gripper above dial'), ("the robot's gripper is not around dial and the robot's gripper is open", 'drop gripper around dial'), ("the robot's gripper is near dial and the robot's gripper is open", 'close gripper around dial'), ("the robot's gripper is forward aligned with dial and the robot's gripper is closed", 'turn dial')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'place gripper above puck'), ("the robot's gripper is not around the dial and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the dial and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is forward aligned with the dial and the robot's gripper is closed", 'grab peg')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'place gripper above puck'), ("the robot's gripper is not around the dial and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the dial and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is forward aligned with the dial and the robot's gripper is closed", 'grab peg')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.57
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'place gripper above puck'), ("the robot's gripper is not around the dial and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the dial and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is forward aligned with the dial and the robot's gripper is closed", 'grab peg')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9952156557898071
Success rates:
{
 "dial-turn": 0.57
}
