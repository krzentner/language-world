['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    # 1. Move the gripper behind the lever
    # 2. Grip the lever handle
    # 3. Rotate the gripper upwards to pull the lever
    # First, move the gripper behind the lever.
    if check("the robot's gripper is not behind the lever"):
        robot.move("gripper behind lever")
    # Once the gripper is behind the lever, grab the handle.
    if check("the robot's gripper is behind the lever and the robot's gripper is not gripping lever handle"):
        robot.grip("lever handle")
    # Rotate the gripper up to pull the lever.
    if check("the robot's gripper is gripping the handle"):
        robot.rotate("gripper upwards to pull the lever")
{'lever-pull': [("the robot's gripper is not behind the lever", 'move gripper behind lever'), ("the robot's gripper is behind the lever and the robot's gripper is not gripping lever handle", 'grip lever handle'), ("the robot's gripper is gripping the handle", 'rotate gripper upwards to pull the lever')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the lever", 'close gripper around puck'), ("the robot's gripper is behind the lever and the robot's gripper is not right of the lever", 'align peg to hole'), ("the robot's gripper is right of the lever", 'put the gripper above the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the lever", 'close gripper around puck'), ("the robot's gripper is behind the lever and the robot's gripper is not right of the lever", 'align peg to hole'), ("the robot's gripper is right of the lever", 'put the gripper above the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the lever", 'close gripper around puck'), ("the robot's gripper is behind the lever and the robot's gripper is not right of the lever", 'align peg to hole'), ("the robot's gripper is right of the lever", 'put the gripper above the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.6633812575170382
Success rates:
{
 "lever-pull": 0.0
}
