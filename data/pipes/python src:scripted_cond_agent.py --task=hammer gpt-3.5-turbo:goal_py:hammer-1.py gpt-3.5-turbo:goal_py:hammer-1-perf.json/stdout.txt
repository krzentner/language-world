['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put the hammer head above the nail
    #  2. Move the hammer down to hit the nail
    # First, we need to position the hammer head above the nail.
    if check("the hammer head is not above the nail"):
        robot.move_hammer("above the nail")
    # Once the hammer head is positioned above the nail, we can move the
    # hammer down to hit it.
    if check("the hammer head is above the nail"):
        robot.move_hammer("onto the nail")
{'hammer': [('the hammer head is not above the nail', 'move_hammer above the nail'), ('the hammer head is above the nail', 'move_hammer onto the nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not above the robot's gripper", 'slide the puck to the goal'), ("the hammer is above the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not above the robot's gripper", 'slide the puck to the goal'), ("the hammer is above the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not above the robot's gripper", 'slide the puck to the goal'), ("the hammer is above the robot's gripper", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9300043804440485
Success rates:
{
 "hammer": 1.0
}
