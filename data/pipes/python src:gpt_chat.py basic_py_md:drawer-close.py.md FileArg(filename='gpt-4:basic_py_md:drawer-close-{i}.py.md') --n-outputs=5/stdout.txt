Using model: gpt-3.5-turbo
# drawer-close: push the drawer close
def drawer_close(robot):
    if check("the robot's gripper is not near the drawer handle"):
        robot.move("gripper to drawer handle")
    if check("the robot's gripper is near the drawer handle and the robot's gripper is open"):
        robot.close("the gripper around the drawer handle")
    if check("the robot's gripper is around the drawer handle"):
        robot.push("the drawer closed")
# drawer-close: push the drawer close
def drawer_close(robot):
    if check("the robot's gripper is not near the drawer handle"):
        robot.move("gripper to drawer handle")
    if check("the robot's gripper is near the drawer handle and the drawer is not already closed"):
        robot.push("drawer to close position")
    if check("the drawer is now closed"):
        print("Drawer closed successfully!")
# drawer-close: push the drawer close
# def drawer_close(robot):
    if check("the robot's gripper is not near the drawer handle"):
        robot.grab("drawer handle")
    if check("the robot's gripper is forward aligned with drawer handle"):
        robot.push("drawer closed")
# drawer-close: push the drawer close
def drawer_close(robot):
    if check("the robot's gripper is not near the drawer handle"):
        robot.move("gripper to drawer handle")
    if check("the robot's gripper is near the drawer handle and the drawer is open"):
        robot.push("drawer closed")
# drawer-close: push the drawer close
def drawer_close(robot):
    if check("the robot's gripper is not near the drawer handle"):
        robot.move("gripper to the drawer handle")
    if check("the robot's gripper is near the drawer handle and the robot's gripper is not around the handle"):
        robot.grab("the drawer handle")
    if check("the robot's gripper is around the drawer handle"):
        robot.push("the drawer closed")
