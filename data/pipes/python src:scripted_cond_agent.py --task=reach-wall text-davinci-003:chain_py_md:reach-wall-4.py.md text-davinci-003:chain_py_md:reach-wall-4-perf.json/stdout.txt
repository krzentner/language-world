['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The program would look like this:

```
# reach-wall: reach to the target location with a short wall in the way
# def reach_wall(robot):
    # Steps:
    #  1. Reach near wall in line with the target
    #  2. Move arm up so the gripper is above the wall
    #  3. Reach towards the target
    # Move the gripper near the wall, in line with the target.
    if check("the robot's gripper is not near the wall in line with the target"):
        robot.reach("near wall in line with the target")
    # Move the arm up so the gripper is above the wall.
    if check("the robot's gripper is not above the wall"):
        robot.move("arm up above the wall")
    # Finally, reach to the target.
    if check("the robot's gripper is above the wall"):
        robot.reach("to goal")
```
{'reach-wall': [("the robot's gripper is not near the wall in line with the target", 'reach near wall in line with the target'), ("the robot's gripper is not above the wall", 'move arm up above the wall'), ("the robot's gripper is above the wall", 'reach to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the target location", 'slide window right'), ("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall", 'reach to goal')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the target location", 'slide window right'), ("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall", 'reach to goal')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the target location", 'slide window right'), ("the robot's gripper is not above wall", 'put the gripper above the puck'), ("the robot's gripper is above wall", 'reach to goal')], env_name='reach-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.4880432536977026
Success rates:
{
 "reach-wall": 0.0
}
