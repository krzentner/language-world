['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper left of plate
    #  2. Slide plate to the right
    #  3. Put plate into target location
    # If the gripper is not near the plate, it should move towards the plate.
    if check("the robot's gripper is not near the plate"):
        robot.put("gripper left of the plate")
    # If the robot's gripper is lined up with the plate, it should push it
    # back.
    if check("the robot's gripper is horizontally aligned with the plate"):
        robot.slide("plate to the right")
    # When the gripper has moved the plate to the target location, it should
    # hold it there.
    if check("the robot's gripper is at the target location and the plate is left of the robot's gripper"):
        robot.place("plate in target location")
{'plate-slide-back-side': [("the robot's gripper is not near the plate", 'put gripper left of the plate'), ("the robot's gripper is horizontally aligned with the plate", 'slide plate to the right'), ("the robot's gripper is at the target location and the plate is left of the robot's gripper", 'place plate in target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the plate", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the plate", 'slide the puck to the goal'), ("the robot's gripper is near the plate and the plate is left of the robot's gripper", 'place puck at goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the plate", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the plate", 'slide the puck to the goal'), ("the robot's gripper is near the plate and the plate is left of the robot's gripper", 'place puck at goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the plate", 'push the gripper into the puck'), ("the robot's gripper is horizontally aligned with the plate", 'slide the puck to the goal'), ("the robot's gripper is near the plate and the plate is left of the robot's gripper", 'place puck at goal')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.1643442810329905
Success rates:
{
 "plate-slide-back-side": 1.0
}
