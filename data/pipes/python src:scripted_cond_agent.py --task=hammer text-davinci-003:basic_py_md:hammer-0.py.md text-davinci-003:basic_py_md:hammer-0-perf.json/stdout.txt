['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Solution:
```
# hammer: hit the nail with the hammer
# def hammer(robot):
    if check("the robot's gripper is not close to the hammer"):
        robot.grab("hammer")
    if check("the robot's gripper is close to the hammer and the robot's gripper is not near the nail"):
        robot.position("gripper near nail")
    if check("the robot's gripper is near the nail"):
        robot.swing("hammer at nail")
{'hammer': [("the robot's gripper is not close to the hammer", 'grab hammer'), ("the robot's gripper is close to the hammer and the robot's gripper is not near the nail", 'position gripper near nail'), ("the robot's gripper is near the nail", 'swing hammer at nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the hammer", 'grab peg'), ("the robot's gripper is left of the hammer and the robot's gripper is not near the hammer", 'put gripper around door handle'), ("the robot's gripper is near the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the hammer", 'grab peg'), ("the robot's gripper is left of the hammer and the robot's gripper is not near the hammer", 'put gripper around door handle'), ("the robot's gripper is near the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the hammer", 'grab peg'), ("the robot's gripper is left of the hammer and the robot's gripper is not near the hammer", 'put gripper around door handle'), ("the robot's gripper is near the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.4002463372149172
Success rates:
{
 "hammer": 0.0
}
