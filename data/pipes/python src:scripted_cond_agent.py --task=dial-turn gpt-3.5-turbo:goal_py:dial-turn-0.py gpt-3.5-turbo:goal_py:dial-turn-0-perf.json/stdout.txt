['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put gripper around the dial
    #  2. Turn the dial to the desired position
    #  3. Release the dial
    # First, put the gripper roughly around the dial.
    if check("the robot's gripper is not roughly around the dial and the gripper is open"):
        robot.move_gripper("around the dial", close_gripper=True)
    # Once the gripper is around the dial, turn the dial to the desired position.
    # We can do this by simply moving the gripper in a circular motion.
    if check("the robot's gripper is around the dial"):
        robot.move_gripper("around the dial in a circular motion")
    # Once the dial is turned to the desired position, release it by opening
    # the gripper again.
    if check("the dial is in the desired position"):
        robot.move_gripper("around the dial", close_gripper=False)
{'dial-turn': [("the robot's gripper is not roughly around the dial and the gripper is open", "the robot's gripper is around the dial and the robot's gripper is closed"), ("the robot's gripper is around the dial", "the robot's gripper is around the dial in a circular motion")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the dial and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the dial", 'put the gripper in front of the drawer')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the dial and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the dial", 'put the gripper in front of the drawer')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the dial and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the dial", 'put the gripper in front of the drawer')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.015749341452448412
Success rates:
{
 "dial-turn": 0.0
}
