['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Solution:

# peg-unplug-side: pull the peg out from the side
# def peg_unplug_side(robot):
    # Steps:
    #  1. Put gripper right of the peg
    #  2. Grab peg with gripper
    #  3. Pull peg out sideways
    # 
    # First, put the gripper near the peg.
    if check("the robot's gripper is not near the peg"):
        robot.move_gripper("near the peg")
    # If the peg is left of the gripper, grab the peg with the gripper.
    if check("the peg is left of the robot's gripper and the robot's gripper is open"):
        robot.move_gripper("around the peg", close_gripper=True)
    # If the peg is right of the gripper, bring the gripper down so that it's
    # almost touching the peg.
    if check("the robot's gripper is almost touching the peg"):
        robot.move_gripper("above the peg")
    # As long as the gripper is still mostly around the peg, pull the peg sideways
    # to slide it out of the hole.
    if check("the robot's gripper is around the peg"):
        robot.move_gripper("horizontally aligned with the hole")
{'peg-unplug-side': [("the robot's gripper is not near the peg", "the robot's gripper is near the peg"), ("the peg is left of the robot's gripper and the robot's gripper is open", "the robot's gripper is around the peg and the robot's gripper is closed"), ("the robot's gripper is almost touching the peg", "the robot's gripper is above the peg"), ("the robot's gripper is around the peg", "the robot's gripper is horizontally aligned with the hole")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the peg", 'push the gripper into the puck'), ("the peg is left of the robot's gripper and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the peg", 'put the gripper above the puck'), ("the robot's gripper is around the peg", 'put the gripper in front of the drawer')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the peg", 'push the gripper into the puck'), ("the peg is left of the robot's gripper and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the peg", 'put the gripper above the puck'), ("the robot's gripper is around the peg", 'put the gripper in front of the drawer')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the peg", 'push the gripper into the puck'), ("the peg is left of the robot's gripper and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the peg", 'put the gripper above the puck'), ("the robot's gripper is around the peg", 'put the gripper in front of the drawer')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.3347162433650317
Success rates:
{
 "peg-unplug-side": 0.0
}
