['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put gripper above the dial
2. Drop gripper around the dial
3. Turn the dial to the correct position

# dial-turn: turn the dial
# def dial_turn(robot):
    # Steps:
    #  1. Put gripper above the dial
    #  2. Drop gripper around the dial
    #  3. Turn the dial to the correct position
    # If the robot's gripper is not near the dial, move the gripper above the dial.
    if check("the robot's gripper is not above the dial"):
        robot.put("gripper above dial")
    # Once the gripper is near the dial, drop down around it to grab it.
    if check("the robot's gripper is above the dial and the robot's gripper is open"):
        robot.drop("gripper around dial")
    # Once the gripper is around the dial, turn the dial in the correct direction.
    if check("the robot's gripper is around the dial"):
        robot.turn("dial to correct position")
{'dial-turn': [("the robot's gripper is not above the dial", 'put gripper above dial'), ("the robot's gripper is above the dial and the robot's gripper is open", 'drop gripper around dial'), ("the robot's gripper is around the dial", 'turn dial to correct position')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'put gripper above button'), ("the robot's gripper is above the dial and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the dial", 'align peg to hole')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'put gripper above button'), ("the robot's gripper is above the dial and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the dial", 'align peg to hole')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.99
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial", 'put gripper above button'), ("the robot's gripper is above the dial and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the dial", 'align peg to hole')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.236938330392681
Success rates:
{
 "dial-turn": 0.99
}
