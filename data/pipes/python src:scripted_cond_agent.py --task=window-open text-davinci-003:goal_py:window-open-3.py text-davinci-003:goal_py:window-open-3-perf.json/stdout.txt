['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper right of the window handle
    #  2. Start pushing against the window handle to open the window
    #  3. Push the window open harder
    # If the robot's gripper is not right of the window handle, we should move
    # the gripper to the right of the window handle.
    if check("the window handle is right of the robot's gripper and the robot's gripper is not near the window handle"):
        robot.move_gripper("right of the window handle")
    # If the robot's gripper is near the window handle, start pushing to open it.
    if check("the robot's gripper is near the window handle"):
        robot.move_gripper("vertically aligned with the window handle")
    # If the window handle is starting to move, push harder.
    if check("the robot's gripper is in front of the window handle"):
        robot.move_gripper("left of the window handle")
{'window-open': [("the window handle is right of the robot's gripper and the robot's gripper is not near the window handle", "the robot's gripper is right of the window handle"), ("the robot's gripper is near the window handle", "the robot's gripper is vertically aligned with the window handle"), ("the robot's gripper is in front of the window handle", "the robot's gripper is left of the window handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the window handle is right of the robot's gripper and the robot's gripper is not near the window handle", 'move gripper to right of window handle'), ("the robot's gripper is near the window handle", 'push the gripper into the puck'), ("the robot's gripper is in front of the window handle", 'push the gripper into the puck')], env_name='window-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the window handle is right of the robot's gripper and the robot's gripper is not near the window handle", 'move gripper to right of window handle'), ("the robot's gripper is near the window handle", 'push the gripper into the puck'), ("the robot's gripper is in front of the window handle", 'push the gripper into the puck')], env_name='window-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the window handle is right of the robot's gripper and the robot's gripper is not near the window handle", 'move gripper to right of window handle'), ("the robot's gripper is near the window handle", 'push the gripper into the puck'), ("the robot's gripper is in front of the window handle", 'push the gripper into the puck')], env_name='window-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.636812734027323
Success rates:
{
 "window-open": 0.0
}
