['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    #  1. Put gripper near the lever knob
    #  2. Grab the lever knob with the gripper
    #  3. Rotate the gripper until the lever is pulled up
    # Move the gripper near the lever knob.
    if check("the robot's gripper is not near the lever knob"):
        robot.move_gripper("near the lever knob")
    # If the gripper is lined up with the lever knob, grab it.
    if check("the robot's gripper is close to the lever knob and the robot's gripper is open"):
        robot.move_gripper("around the lever knob", close_gripper=True)
    # Once the gripper is around the lever knob, rotate the gripper until the lever is pulled up.
    if check("the lever is not pulled up"):
        robot.rotate_gripper("lever_up")
{'lever-pull': [("the robot's gripper is not near the lever knob", "the robot's gripper is near the lever knob"), ("the robot's gripper is close to the lever knob and the robot's gripper is open", "the robot's gripper is around the lever knob and the robot's gripper is closed"), ('the lever is not pulled up', 'rotate_gripper lever_up')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'push the gripper into the puck'), ("the robot's gripper is left of the lever and the robot's gripper is open", 'drop gripper around puck'), ("the lever is not behind the robot's gripper", 'place gripper above puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'push the gripper into the puck'), ("the robot's gripper is left of the lever and the robot's gripper is open", 'drop gripper around puck'), ("the lever is not behind the robot's gripper", 'place gripper above puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the lever", 'push the gripper into the puck'), ("the robot's gripper is left of the lever and the robot's gripper is open", 'drop gripper around puck'), ("the lever is not behind the robot's gripper", 'place gripper above puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.511191495602996
Success rates:
{
 "lever-pull": 1.0
}
