['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


# basketball: put the ball into the hoop
# def basketball(robot):
    # Steps:
    #  1. Put gripper above ball
    #  2. Grab the ball with gripper
    #  3. Reach above the hoop
    #  4. Drop the ball into the hoop
    # First, move the gripper above the ball.
    if check("the robot's gripper is not above ball"):
        robot.put("gripper above ball")
    # If the gripper is near the ball and open, try to grab the ball by closing
    # the gripper.
    if check("the robot's gripper is near ball and the robot's gripper is open"):
        robot.close("gripper around ball")
    # We closed the gripper, and the ball is still near the gripper, so maybe we
    # grabbed it.
    # Try to move the ball to above the hoop.
    if check("the robot's gripper is above ball and the robot's gripper is closed"):
        robot.reach("above hoop")
    # If the ball is above the hoop, drop the the ball into the hoop.
    if check("the ball is above the hoop"):
        robot.drop("ball into hoop")
{'basketball': [("the robot's gripper is not above ball", 'put gripper above ball'), ("the robot's gripper is near ball and the robot's gripper is open", 'close gripper around ball'), ("the robot's gripper is above ball and the robot's gripper is closed", 'reach above hoop'), ('the ball is above the hoop', 'drop ball into hoop')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put gripper above button'), ("the robot's gripper is near the ball and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the ball and the robot's gripper is closed", 'reach to goal'), ('the ball is above the hoop', 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put gripper above button'), ("the robot's gripper is near the ball and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the ball and the robot's gripper is closed", 'reach to goal'), ('the ball is above the hoop', 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put gripper above button'), ("the robot's gripper is near the ball and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the ball and the robot's gripper is closed", 'reach to goal'), ('the ball is above the hoop', 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.03285778091495878
Success rates:
{
 "basketball": 0.0
}
