['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# plate-slide-back-side: slide the plate back sideways into the target location
# def plate_slide_back_side(robot):
    # Steps:
    #  1. Put gripper above the plate
    #  2. Grab the plate with the gripper
    #  3. Move the plate back towards the target in a sideways motion
    # First, put the gripper above the plate.
    if check("the robot's gripper is not vertically aligned with the plate"):
        robot.move_gripper("vertically aligned with the plate")
    # If the plate is not in the gripper, get the gripper around the plate.
    if check("the plate is not in the gripper and the robot's gripper is open"):
        robot.move_gripper("near the plate", close_gripper=True)
    # If the gripper has the plate, slide the plate back to the target in a sideways motion.
    if check("the plate is in the gripper and the robot's gripper is not above the target location"):
        robot.move_gripper("above the target location in a sideways motion")
{'plate-slide-back-side': [("the robot's gripper is not vertically aligned with the plate", "the robot's gripper is vertically aligned with the plate"), ("the plate is not in the gripper and the robot's gripper is open", "the robot's gripper is near the plate and the robot's gripper is closed"), ("the plate is in the gripper and the robot's gripper is not above the target location", "the robot's gripper is above the target location in a sideways motion")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate", 'push the gripper into the puck'), ("the plate is not behind the robot's gripper and the robot's gripper is open", 'push the gripper into the puck'), ("the plate is behind the robot's gripper and the robot's gripper is not above the plate", 'put the gripper above the puck')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate", 'push the gripper into the puck'), ("the plate is not behind the robot's gripper and the robot's gripper is open", 'push the gripper into the puck'), ("the plate is behind the robot's gripper and the robot's gripper is not above the plate", 'put the gripper above the puck')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate", 'push the gripper into the puck'), ("the plate is not behind the robot's gripper and the robot's gripper is open", 'push the gripper into the puck'), ("the plate is behind the robot's gripper and the robot's gripper is not above the plate", 'put the gripper above the puck')], env_name='plate-slide-back-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.1643442810329905
Success rates:
{
 "plate-slide-back-side": 1.0
}
