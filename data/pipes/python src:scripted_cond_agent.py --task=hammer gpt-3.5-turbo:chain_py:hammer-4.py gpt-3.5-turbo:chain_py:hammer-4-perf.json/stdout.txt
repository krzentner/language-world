['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Grab the hammer with the gripper
    #  2. Move the gripper above the nail
    #  3. Swing the hammer to hit the nail
    # First, grab the hammer with the gripper.
    if check("the robot's gripper is not around the hammer"):
        robot.grab("hammer")
    # Move the gripper above the nail.
    if check("the robot's gripper is not vertically aligned with the nail and the gripper is holding the hammer"):
        robot.move("gripper above nail")
    # Swing the hammer to hit the nail.
    if check("the robot's gripper is vertically aligned with the nail and the gripper is holding the hammer"):
        robot.swing("hammer to hit nail")
{'hammer': [("the robot's gripper is not around the hammer", 'grab hammer'), ("the robot's gripper is not vertically aligned with the nail and the gripper is holding the hammer", 'move gripper above nail'), ("the robot's gripper is vertically aligned with the nail and the gripper is holding the hammer", 'swing hammer to hit nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer", 'grab peg'), ("the robot's gripper is not vertically aligned with the hammer and the robot's gripper is behind the hammer", 'place gripper above puck'), ("the robot's gripper is vertically aligned with the hammer and the robot's gripper is behind the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer", 'grab peg'), ("the robot's gripper is not vertically aligned with the hammer and the robot's gripper is behind the hammer", 'place gripper above puck'), ("the robot's gripper is vertically aligned with the hammer and the robot's gripper is behind the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not around the hammer", 'grab peg'), ("the robot's gripper is not vertically aligned with the hammer and the robot's gripper is behind the hammer", 'place gripper above puck'), ("the robot's gripper is vertically aligned with the hammer and the robot's gripper is behind the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9242426854318133
Success rates:
{
 "hammer": 0.0
}
