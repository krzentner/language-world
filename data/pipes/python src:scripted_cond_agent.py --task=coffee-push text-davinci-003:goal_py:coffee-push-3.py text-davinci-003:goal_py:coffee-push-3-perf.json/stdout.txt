['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above mug handle
    #  2. Drop gripper around mug handle
    #  3. Move mug to target location
    # First, put the gripper above the mug handle.
    if check("the robot's gripper is not vertically aligned with mug handle"):
        robot.move_gripper("vertically aligned with the mug handle")
    # If the gripper isn't around the mug handle, move it around the mug handle.
    if check("the robot's gripper is not around mug handle"):
        robot.move_gripper("around the mug handle", close_gripper=True)
    # Once the gripper is around the mug handle, move the mug to the target
    # location.
    if check("the robot's gripper is around mug handle"):
        robot.move_gripper("near the target location")
{'coffee-push': [("the robot's gripper is not vertically aligned with mug handle", "the robot's gripper is vertically aligned with the mug handle"), ("the robot's gripper is not around mug handle", "the robot's gripper is around the mug handle and the robot's gripper is closed"), ("the robot's gripper is around mug handle", "the robot's gripper is near the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the mug", 'push the gripper into the puck'), ("the robot's gripper is not around the mug", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug", 'push the gripper into the puck')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the mug", 'push the gripper into the puck'), ("the robot's gripper is not around the mug", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug", 'push the gripper into the puck')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the mug", 'push the gripper into the puck'), ("the robot's gripper is not around the mug", 'put the gripper in front of the drawer'), ("the robot's gripper is around the mug", 'push the gripper into the puck')], env_name='coffee-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.014220520413093409
Success rates:
{
 "coffee-push": 0.0
}
