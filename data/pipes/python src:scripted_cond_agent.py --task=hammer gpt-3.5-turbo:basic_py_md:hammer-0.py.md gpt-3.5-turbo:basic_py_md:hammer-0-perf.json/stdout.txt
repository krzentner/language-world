['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# hammer: hit the nail with the hammer
# def hammer(robot):
    if check("the hammer is not in the robot's gripper"):
        robot.grab("hammer")
    if check("the robot's gripper is not above the nail"):
        robot.put("gripper above nail")
    if check("the robot's gripper is above the nail and the robot's gripper is not vertically aligned with the nail"):
        robot.rotate("gripper to align with nail")
    if check("the robot's gripper is vertically aligned with the nail"):
        robot.hit("the nail with the hammer")
{'hammer': [("the hammer is not in the robot's gripper", 'grab hammer'), ("the robot's gripper is not above the nail", 'put gripper above nail'), ("the robot's gripper is above the nail and the robot's gripper is not vertically aligned with the nail", 'rotate gripper to align with nail'), ("the robot's gripper is vertically aligned with the nail", 'hit the nail with the hammer')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not behind the robot's gripper", 'grab peg'), ("the robot's gripper is not above the hammer", 'put gripper above button'), ("the robot's gripper is above the hammer and the robot's gripper is not vertically aligned with the hammer", 'move gripper to right of window handle'), ("the robot's gripper is vertically aligned with the hammer", 'push the gripper into the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not behind the robot's gripper", 'grab peg'), ("the robot's gripper is not above the hammer", 'put gripper above button'), ("the robot's gripper is above the hammer and the robot's gripper is not vertically aligned with the hammer", 'move gripper to right of window handle'), ("the robot's gripper is vertically aligned with the hammer", 'push the gripper into the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the hammer is not behind the robot's gripper", 'grab peg'), ("the robot's gripper is not above the hammer", 'put gripper above button'), ("the robot's gripper is above the hammer and the robot's gripper is not vertically aligned with the hammer", 'move gripper to right of window handle'), ("the robot's gripper is vertically aligned with the hammer", 'push the gripper into the puck')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.003538917275482
Success rates:
{
 "hammer": 0.0
}
