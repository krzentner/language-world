['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Place the robot's gripper above the dial handle
    #  2. Grab the dial handle with a gripping motion
    #  3. Turn the dial handle as requested
    # If the dial handle is not left of the robot's gripper, move the gripper
    # near the dial handle.
    if check("the robot's gripper is left of the dial handle and the robot's gripper is not near the dial handle"):
        robot.move_gripper("near the dial handle", close_gripper=True)
    # If the robot's gripper is near the dial handle, start turning the dial
    # handle as requested.
    if check("the robot's gripper is near the dial handle"):
        robot.move_gripper("around the dial handle")
{'dial-turn': [("the robot's gripper is left of the dial handle and the robot's gripper is not near the dial handle", "the robot's gripper is near the dial handle and the robot's gripper is closed"), ("the robot's gripper is near the dial handle", "the robot's gripper is around the dial handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is left of the dial and the robot's gripper is not near the dial", 'push the gripper into the puck'), ("the robot's gripper is near the dial", 'drop gripper around puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is left of the dial and the robot's gripper is not near the dial", 'push the gripper into the puck'), ("the robot's gripper is near the dial", 'drop gripper around puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is left of the dial and the robot's gripper is not near the dial", 'push the gripper into the puck'), ("the robot's gripper is near the dial", 'drop gripper around puck')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Success rates:
{
 "dial-turn": 1.0
}
