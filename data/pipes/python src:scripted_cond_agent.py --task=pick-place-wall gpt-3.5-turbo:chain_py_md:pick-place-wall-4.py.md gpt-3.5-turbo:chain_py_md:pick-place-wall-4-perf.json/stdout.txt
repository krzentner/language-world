['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way
# def pick_place_wall(robot):
    # Steps:
    #  1. Move above puck
    #  2. Check if wall is present
    #  3. Move gripper around the wall if present and lift the puck
    #  4. Move gripper above target
    #  5. Drop the puck
    
    # Move the robot above the puck before we do anything else.
    if check("the robot's gripper is not above the puck"):
        robot.place("gripper above puck")
        
    # If there is a wall present, move the gripper around the wall to pick up the puck.
    if check("there is a wall in the way"):
        robot.put("gripper around the wall")
        robot.lift("puck")
    
    # If the wall isn't in the way or we've moved around it, move the gripper above the target.
    if check("the robot's gripper is not above the target"):
        robot.place("gripper above target")
    
    # Finally, drop the puck at the target location.
    if check("the robot's gripper is holding the puck"):
        robot.drop("puck at target location")
{'pick-place-wall': [("the robot's gripper is not above the puck", 'place gripper above puck'), ('there is a wall in the way', 'put gripper around the wall'), ("the robot's gripper is not above the target", 'place gripper above target'), ("the robot's gripper is holding the puck", 'drop puck at target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ('the puck is near wall and the puck is near wall', 'put gripper around door handle'), ("the robot's gripper is not above the target location", 'place gripper above puck'), ("the robot's gripper is behind the puck", 'place puck at goal')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ('the puck is near wall and the puck is near wall', 'put gripper around door handle'), ("the robot's gripper is not above the target location", 'place gripper above puck'), ("the robot's gripper is behind the puck", 'place puck at goal')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ('the puck is near wall and the puck is near wall', 'put gripper around door handle'), ("the robot's gripper is not above the target location", 'place gripper above puck'), ("the robot's gripper is behind the puck", 'place puck at goal')], env_name='pick-place-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Success rates:
{
 "pick-place-wall": 0.0
}
