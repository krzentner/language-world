['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The robot should turn the dial on the door in order to lock it.

# door-lock: turn the dial on the door
# def door_lock(robot):
    # Steps: 
    #  1. Put gripper above the dial
    #  2. Drop gripper around the dial
    #  3. Turn the dial to the left
    # First, put the gripper roughly above the dial. 
    if check("the robot's gripper is not above the dial"):
        robot.put("gripper above dial")
    # Move the gripper around the dial so that it can properly grip the dial.
    if check("the robot's gripper is not around dial"):
        robot.drop("gripper around dial")
    # Finally, turn the dial to the left to lock it in place.    
    if check("the robot's gripper is around dial"):
         robot.turn("dial left")
{'door-lock': [("the robot's gripper is not above the dial", 'put gripper above dial'), ("the robot's gripper is not around dial", 'drop gripper around dial'), ("the robot's gripper is around dial", 'turn dial left')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put gripper above button'), ("the robot's gripper is not around the door's lock", 'drop gripper around puck'), ("the robot's gripper is open", 'push window left harder')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put gripper above button'), ("the robot's gripper is not around the door's lock", 'drop gripper around puck'), ("the robot's gripper is open", 'push window left harder')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.85
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the door's lock", 'put gripper above button'), ("the robot's gripper is not around the door's lock", 'drop gripper around puck'), ("the robot's gripper is open", 'push window left harder')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.363214308461641
Success rates:
{
 "door-lock": 0.85
}
