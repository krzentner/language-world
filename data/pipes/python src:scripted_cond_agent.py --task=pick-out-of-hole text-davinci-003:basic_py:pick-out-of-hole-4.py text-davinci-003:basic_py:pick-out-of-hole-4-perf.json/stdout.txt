['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    if check("the robot's gripper is not inclined at the peg"):
        robot.put("gripper above the peg")
    if check("gripper is inclined at the peg and the robot's gripper is open"):
        robot.drop("gripper around peg")
    if check("gripper is almost closed and the peg is stuck in the hole"):
        robot.rotate("gripper in a circular motion")
    if check("gripper is closed and the peg is no longer stuck in the hole"):
        robot.pick("peg out of hole")
    if check("peg is in the robot's grip and the robot's gripper is above the goal"):
        robot.place("peg at goal")
{'pick-out-of-hole': [("the robot's gripper is not inclined at the peg", 'put gripper above the peg'), ("gripper is inclined at the peg and the robot's gripper is open", 'drop gripper around peg'), ('gripper is almost closed and the peg is stuck in the hole', 'rotate gripper in a circular motion'), ('gripper is closed and the peg is no longer stuck in the hole', 'pick peg out of hole'), ("peg is in the robot's grip and the robot's gripper is above the goal", 'place peg at goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is closed and the puck is near the robot's gripper", 'drop gripper around puck'), ("the robot's gripper is closed and puck is not touching the table", 'align peg to hole'), ("the puck is behind the robot's gripper and the robot's gripper is above the puck", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is closed and the puck is near the robot's gripper", 'drop gripper around puck'), ("the robot's gripper is closed and puck is not touching the table", 'align peg to hole'), ("the puck is behind the robot's gripper and the robot's gripper is above the puck", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is closed and the puck is near the robot's gripper", 'drop gripper around puck'), ("the robot's gripper is closed and puck is not touching the table", 'align peg to hole'), ("the puck is behind the robot's gripper and the robot's gripper is above the puck", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.01354011072115046
Success rates:
{
 "pick-out-of-hole": 0.0
}
