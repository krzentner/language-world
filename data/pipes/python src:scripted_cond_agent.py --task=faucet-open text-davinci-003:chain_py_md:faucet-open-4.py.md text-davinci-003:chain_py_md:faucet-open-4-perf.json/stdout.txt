['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The code for this program would be:

```
# faucet-open: turn the faucet left
# def faucet_open(robot):
    # Steps:
    #  1. Put gripper above faucet handle
    #  2. Grab faucet handle
    #  3. Push the faucet to the left
    # Put the gripper above the faucet handle.
    if check("the robot's gripper is not above faucet handle"):
        robot.put("gripper above faucet handle")
    # If the gripper is close to the faucet handle, grab the handle.
    if check("the robot's gripper is near faucet handle and the robot's gripper is not around faucet handle"):
        robot.grab("faucet handle")
    # If the gripper is around the faucet handle, try pushing the faucet to the
    # left.
    if check("the robot's gripper is around faucet handle"):
        robot.push("faucet left")
```
{'faucet-open': [("the robot's gripper is not above faucet handle", 'put gripper above faucet handle'), ("the robot's gripper is near faucet handle and the robot's gripper is not around faucet handle", 'grab faucet handle'), ("the robot's gripper is around faucet handle", 'push faucet left')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the faucet", 'put gripper above button'), ("the robot's gripper is near the faucet and the robot's gripper is not around the faucet", 'grab peg'), ("the robot's gripper is around the faucet", 'push down on button')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the faucet", 'put gripper above button'), ("the robot's gripper is near the faucet and the robot's gripper is not around the faucet", 'grab peg'), ("the robot's gripper is around the faucet", 'push down on button')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.99
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the faucet", 'put gripper above button'), ("the robot's gripper is near the faucet and the robot's gripper is not around the faucet", 'grab peg'), ("the robot's gripper is around the faucet", 'push down on button')], env_name='faucet-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.581244794045747
Success rates:
{
 "faucet-open": 0.99
}
