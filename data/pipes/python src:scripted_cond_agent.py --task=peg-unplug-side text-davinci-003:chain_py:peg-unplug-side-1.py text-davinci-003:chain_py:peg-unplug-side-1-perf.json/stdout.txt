['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above the peg
    #  2. Grab the peg with the gripper
    #  3. Move the peg sideways
    #  4. Pull the peg out
    # First, put the gripper above the peg.
    if check("the robot's gripper is not vertically aligned with the peg"):
        robot.put("gripper above peg")
    # If the gripper isn't around the peg, grab it.
    if check("the robot's gripper is vertically aligned with the peg and the robot's gripper is not around peg"):
        robot.grab("peg")
    # As long as the peg is still near the gripper, try to move the peg
    # horizontally.
    if check("the robot's gripper is around the peg and the peg is not clear of the hole"):
        robot.slide("peg sideways")
    # If the peg is clear of the hole, pull it out.
    if check("the peg is clear of the hole"):
        robot.pull("peg out")
{'peg-unplug-side': [("the robot's gripper is not vertically aligned with the peg", 'put gripper above peg'), ("the robot's gripper is vertically aligned with the peg and the robot's gripper is not around peg", 'grab peg'), ("the robot's gripper is around the peg and the peg is not clear of the hole", 'slide peg sideways'), ('the peg is clear of the hole', 'pull peg out')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'put gripper above button'), ("the robot's gripper is vertically aligned with the peg and the robot's gripper is not around the peg", 'grab peg'), ("the robot's gripper is around the peg and the peg is not left of the robot's gripper", 'slide the puck to the goal'), ("the peg is left of the robot's gripper", 'place puck at goal')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'put gripper above button'), ("the robot's gripper is vertically aligned with the peg and the robot's gripper is not around the peg", 'grab peg'), ("the robot's gripper is around the peg and the peg is not left of the robot's gripper", 'slide the puck to the goal'), ("the peg is left of the robot's gripper", 'place puck at goal')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'put gripper above button'), ("the robot's gripper is vertically aligned with the peg and the robot's gripper is not around the peg", 'grab peg'), ("the robot's gripper is around the peg and the peg is not left of the robot's gripper", 'slide the puck to the goal'), ("the peg is left of the robot's gripper", 'place puck at goal')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.130457564745974
Success rates:
{
 "peg-unplug-side": 0.0
}
