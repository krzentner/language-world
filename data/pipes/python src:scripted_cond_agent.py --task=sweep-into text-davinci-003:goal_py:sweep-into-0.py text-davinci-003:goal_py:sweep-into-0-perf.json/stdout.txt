['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper left of the cube
    #  2. Grab hold of the cube
    #  3. Start sweeping the cube towards the target
    #  4. Keep sweeping the cube until it reaches the target
    # First, move the gripper next to the cube.
    if check("the robot's gripper is not left of the cube"):
        robot.move_gripper("left of the cube")
    # If the gripper is next to the cube, start sweeping the cube towards the
    # target.
    if check("the robot's gripper is left of the cube"):
        robot.move_gripper("in front of the cube")
    # Once the gripper is in front of the cube, grab it.
    if check("the robot's gripper is in front of cube and the robot's gripper is open"):
        robot.move_gripper("right of the cube", close_gripper=True)
    # Keep sweeping the cube towards the target until it reaches it.

{'sweep-into': [("the robot's gripper is not left of the cube", "the robot's gripper is left of the cube"), ("the robot's gripper is left of the cube", "the robot's gripper is in front of the cube"), ("the robot's gripper is in front of cube and the robot's gripper is open", "the robot's gripper is right of the cube and the robot's gripper is closed")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the cube", 'push the gripper into the puck'), ("the robot's gripper is left of the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the cube and the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the cube", 'push the gripper into the puck'), ("the robot's gripper is left of the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the cube and the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the cube", 'push the gripper into the puck'), ("the robot's gripper is left of the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is in front of the cube and the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.016124355816234556
Success rates:
{
 "sweep-into": 0.0
}
