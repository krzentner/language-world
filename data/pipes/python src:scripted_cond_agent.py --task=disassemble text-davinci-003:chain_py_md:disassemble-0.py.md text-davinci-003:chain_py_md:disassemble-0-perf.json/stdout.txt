['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The program should be as follows:

```
# disassemble: pull the wrench off the peg
# def disassemble(robot):
    # Steps:
    #  1. Put gripper above peg
    #  2. Drop gripper around wrench
    #  3. Pull wrench off peg
    # First, put the gripper above the peg so that the wrench is below the
    # gripper.
    if check("the robot's gripper is not above the peg"):
        robot.put("gripper above peg")
    # If the wrench isn't around the gripper as seen from below, move the
    # gripper below the wrench.
    if check("the robot's gripper is not around wrench and the robot's gripper is open"):
        robot.drop("gripper around wrench")
    # If the gripper is near the wrench and open, maybe we can grab it by
    # closing the gripper. 
    if check("the robot's gripper is near wrench and the robot's gripper is open"):
        robot.close("gripper around wrench")
    # We closed the gripper, and the wrench is still near the gripper, so maybe
    # we grabbed it. Try to pull the wrench off the peg. If we didn't grab it,
    # we'll just go back to an earlier step.
    if check("the robot's gripper is above peg and the robot's gripper is closed"):
        robot.pull("wrench off peg")
```
{'disassemble': [("the robot's gripper is not above the peg", 'put gripper above peg'), ("the robot's gripper is not around wrench and the robot's gripper is open", 'drop gripper around wrench'), ("the robot's gripper is near wrench and the robot's gripper is open", 'close gripper around wrench'), ("the robot's gripper is above peg and the robot's gripper is closed", 'pull wrench off peg')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the peg", 'put gripper above button'), ("the robot's gripper is not around the wrench and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the wrench and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the peg and the robot's gripper is closed", 'align peg to hole')], env_name='disassemble', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the peg", 'put gripper above button'), ("the robot's gripper is not around the wrench and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the wrench and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the peg and the robot's gripper is closed", 'align peg to hole')], env_name='disassemble', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the peg", 'put gripper above button'), ("the robot's gripper is not around the wrench and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the wrench and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the peg and the robot's gripper is closed", 'align peg to hole')], env_name='disassemble', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5704212793110165
Success rates:
{
 "disassemble": 0.0
}
