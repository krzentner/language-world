['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The code should look like this:

```
# coffee-pull: grab the mug and pull it to the target location
# def coffee_pull(robot):
    # Steps:
    #  1. Put gripper above the mug
    #  2. Drop gripper around the mug
    #  3. Close the gripper around the mug
    #  4. Pull the mug towards the goal
    # First, put the gripper above the mug.
    if check("the robot's gripper is not above the mug"):
        robot.put("gripper above mug")
    # Then, drop the gripper around the mug.
    if check("the robot's gripper is not around the mug and the robot's gripper is open"):
        robot.drop("gripper around mug")
    # If the gripper is near the mug and open, close the gripper around it.
    if check("the robot's gripper is near mug and the robot's gripper is open"):
        robot.close("gripper around mug")
    # Now that the mug is in the gripper, the robot can pull it towards the
    # goal.
    if check("the robot's gripper is around the mug and the robot's gripper is closed"):
        robot.pull("mug towards goal")
```
{'coffee-pull': [("the robot's gripper is not above the mug", 'put gripper above mug'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around mug'), ("the robot's gripper is near mug and the robot's gripper is open", 'close gripper around mug'), ("the robot's gripper is around the mug and the robot's gripper is closed", 'pull mug towards goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put gripper above button'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the mug and the robot's gripper is closed", 'place puck at goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put gripper above button'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the mug and the robot's gripper is closed", 'place puck at goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.09
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put gripper above button'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the mug and the robot's gripper is closed", 'place puck at goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.6196769963945432
Success rates:
{
 "coffee-pull": 0.09
}
