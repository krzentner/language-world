['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above basketball
    #  2. Drop gripper behind basketball
    #  3. Slide basketball forward into hoop
    # First, put the gripper above the basketball.
    if check("the robot's gripper is not above basketball"):
        robot.put("gripper above basketball")
    # Next, drop the gripper behind the basketball.
    if check("the robot's gripper is not behind basketball and the robot's gripper is open"):
        robot.drop("gripper behind basketball")
    # After the gripper is behind the basketball, and the basketball is in front
    # of the gripper, we can slide the basketball forward into the hoop.
    if check("the robot's gripper is behind basketball and the basketball is in front of the gripper"):
        robot.slide("basketball forward into hoop")
{'basketball': [("the robot's gripper is not above basketball", 'put gripper above basketball'), ("the robot's gripper is not behind basketball and the robot's gripper is open", 'drop gripper behind basketball'), ("the robot's gripper is behind basketball and the basketball is in front of the gripper", 'slide basketball forward into hoop')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put gripper above button'), ("the robot's gripper is not behind the ball and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is behind the ball and the ball is in front of the robot's gripper", 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put gripper above button'), ("the robot's gripper is not behind the ball and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is behind the ball and the ball is in front of the robot's gripper", 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put gripper above button'), ("the robot's gripper is not behind the ball and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is behind the ball and the ball is in front of the robot's gripper", 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.038346388227618496
Success rates:
{
 "basketball": 0.0
}
