['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put gripper above the cube
    #  2. Grab the cube with the gripper
    #  3. Line the gripper up with the target location
    #  4. Move the gripper to the target location, sliding the cube along
    # First, put the gripper above the cube.
    if check("the robot's gripper is not vertically aligned with the cube"):
        robot.move_gripper("vertically aligned with the cube")
    # If the gripper isn't around the cube, move it down to grab the cube.
    if check("the robot's gripper is above the cube and the robot's gripper is not around the cube"):
        robot.move_gripper("around the cube", close_gripper=True)
    # Once the gripper is around the cube, align it with the target location.
    if check("the robot's gripper is around the cube"):
        robot.move_gripper("above the target location")
    # Move the gripper to the target location, sliding the cube along.
    if check("the robot's gripper is aligned with the target location"):
        robot.move_gripper("vertically aligned with the target location")
{'sweep': [("the robot's gripper is not vertically aligned with the cube", "the robot's gripper is vertically aligned with the cube"), ("the robot's gripper is above the cube and the robot's gripper is not around the cube", "the robot's gripper is around the cube and the robot's gripper is closed"), ("the robot's gripper is around the cube", "the robot's gripper is above the target location"), ("the robot's gripper is aligned with the target location", "the robot's gripper is vertically aligned with the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is above the cube and the robot's gripper is not around the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube", 'put the gripper above the puck'), ("the robot's gripper is forward aligned with the target location", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is above the cube and the robot's gripper is not around the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube", 'put the gripper above the puck'), ("the robot's gripper is forward aligned with the target location", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is above the cube and the robot's gripper is not around the cube", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube", 'put the gripper above the puck'), ("the robot's gripper is forward aligned with the target location", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.06800075188334519
Success rates:
{
 "sweep": 0.0
}
