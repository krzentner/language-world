['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# push-back: slide the puck backwards to the target location
# def push_back(robot):
   if check("the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck"):
        robot.put("the gripper above the puck")
   if check("the robot's gripper is vertically aligned with the puck"):
        robot.pull("the gripper away from the puck")
   if check("the robot's gripper is not near the target location"):
        robot.move("the gripper back to the goal")
   if check("the robot's gripper is near the target location and the puck is below the robot's gripper"):
        robot.slide("the puck back to the goal")
{'push-back': [("the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck", 'pull the gripper away from the puck'), ("the robot's gripper is not near the target location", 'move the gripper back to the goal'), ("the robot's gripper is near the target location and the puck is below the robot's gripper", 'slide the puck back to the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck and the robot's gripper is not vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is not near the target location", 'slide the puck to the goal'), ("the robot's gripper is near the target location and the puck is below the robot's gripper", 'slide the puck to the goal')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck and the robot's gripper is not vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is not near the target location", 'slide the puck to the goal'), ("the robot's gripper is near the target location and the puck is below the robot's gripper", 'slide the puck to the goal')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck and the robot's gripper is not vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is vertically aligned with the puck", 'put the gripper above the puck'), ("the robot's gripper is not near the target location", 'slide the puck to the goal'), ("the robot's gripper is near the target location and the puck is below the robot's gripper", 'slide the puck to the goal')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.00974943580265995
Success rates:
{
 "push-back": 0.0
}
