['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above block
    #  2. Place gripper around block
    #  3. Lift and move block to target
    #  4. Drop block in target
    # First, put the gripper above the block.
    if check("the robot's gripper is not above the block"):
        robot.move_gripper("above the block")
    # If the block moves out of the way, move the gripper above the block again.
    if check("the robot's gripper is not around the block and the robot's gripper is empty"):
        robot.move_gripper("around the block", close_gripper=True)
    # Once the gripper is around the block, we can lift it and carry it to the
    # target.
    if check("the robot's gripper is around the block"):
        robot.move_gripper("near the target")
    # Once we're near the target location, we can drop the block by opening the
    # gripper.
    if check("the robot's gripper is near the target location"):
        robot.move_gripper("near the target location", close_gripper=False)
{'shelf-place': [("the robot's gripper is not above the block", "the robot's gripper is above the block"), ("the robot's gripper is not around the block and the robot's gripper is empty", "the robot's gripper is around the block and the robot's gripper is closed"), ("the robot's gripper is around the block", "the robot's gripper is near the target")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the block", 'put the gripper in front of the drawer')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the block", 'put the gripper in front of the drawer')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the block", 'put the gripper above the puck'), ("the robot's gripper is not around the block and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the block", 'put the gripper in front of the drawer')], env_name='shelf-place', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Success rates:
{
 "shelf-place": 0.0
}
