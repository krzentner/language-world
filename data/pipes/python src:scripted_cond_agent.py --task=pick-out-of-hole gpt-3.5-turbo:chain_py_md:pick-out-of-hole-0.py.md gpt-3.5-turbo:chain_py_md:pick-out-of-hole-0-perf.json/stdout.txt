['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):
    # Steps:
    #  1. Put gripper above the hole
    #  2. Move the gripper down to grab the peg
    #  3. Close gripper around peg
    #  4. Move peg to goal
    # First, put the gripper above the hole, so that we don't bump into anything
    # while trying to grab the peg.
    if check("the robot's gripper is not above the hole"):
        robot.place("gripper above hole")
    # If the gripper isn't around the peg and the gripper is above the hole, move
    # the gripper down around the peg.
    if check("the robot's gripper is above the hole and the robot's gripper is not around peg" ):
        robot.drop("gripper around peg")
    # If the gripper is near the peg and the gripper is open, maybe we can grab it
    # by closing the gripper.
    if check("the robot's gripper is near peg and the robot's gripper is open"):
        robot.close("gripper around peg")
    # We closed the gripper, and the peg is still near the gripper, so maybe we
    # grabbed it.
    # Try to move the peg to the goal.
    # If we didn't grab it, we'll just go back to an earlier step.
    if check("the robot's gripper is above peg and the robot's gripper is closed"):
        robot.place("peg at goal")
{'pick-out-of-hole': [("the robot's gripper is not above the hole", 'place gripper above hole'), ("the robot's gripper is near peg and the robot's gripper is open", 'close gripper around peg'), ("the robot's gripper is above peg and the robot's gripper is closed", 'place peg at goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is open and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is open and the robot's gripper is closed", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is open and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is open and the robot's gripper is closed", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is open and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is open and the robot's gripper is closed", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.029124969590067985
Success rates:
{
 "pick-out-of-hole": 0.0
}
