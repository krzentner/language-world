['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


If check("the robot's gripper is not vertically aligned with the button"):
    robot.put("gripper in front of button")
if check("the robot's gripper is not near the button"):
    robot.move("gripper to left of button")
if check("the robot's gripper is to left of button"):
    robot.move("gripper to right of button")
if check("the robot's gripper is aligned with the button's wall"):
    robot.push("gripper against wall")
if check("the robot's gripper is in front of the button"):
    robot.push("button")
{'button-press-wall': [("the robot's gripper is not near the button", 'move gripper to left of button'), ("the robot's gripper is to left of button", 'move gripper to right of button'), ("the robot's gripper is aligned with the button's wall", 'push gripper against wall'), ("the robot's gripper is in front of the button", 'push button')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the button", 'move gripper to left of window handle'), ("the robot's gripper is not left of the button", 'move gripper to right of window handle'), ("the robot's gripper is forward aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is in front of the button", 'push down on button')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the button", 'move gripper to left of window handle'), ("the robot's gripper is not left of the button", 'move gripper to right of window handle'), ("the robot's gripper is forward aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is in front of the button", 'push down on button')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the button", 'move gripper to left of window handle'), ("the robot's gripper is not left of the button", 'move gripper to right of window handle'), ("the robot's gripper is forward aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is in front of the button", 'push down on button')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.40844234822089687
Success rates:
{
 "button-press-wall": 0.0
}
