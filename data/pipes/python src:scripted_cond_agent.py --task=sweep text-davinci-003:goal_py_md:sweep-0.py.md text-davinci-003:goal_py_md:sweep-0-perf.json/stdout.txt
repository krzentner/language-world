['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put gripper above cube
2. Drop gripper around cube
3. Close gripper around cube
4. Move sideways to the target location

#sweep: grab the cube and move sideways it to the target location
#def sweep(robot):
    # Steps:
    #  1. Put gripper above cube
    if check("the robot's gripper is not above cube"):
        robot.move_gripper("above the cube")
    #  2. Drop gripper around cube
    if check("the robot's gripper is not around cube and the robot's gripper is open"):
        robot.move_gripper("around the cube", close_gripper=True)
    #  3. Close gripper around cube
    if check("the robot's gripper is around cube and the robot's gripper is open"):
        robot.move_gripper("above the cube", close_gripper=True)
    #  4. Move sideways to the target location
    if check("the robot's gripper is above cube and the robot's gripper is closed"):
        robot.move_gripper("sideways aligned with the target location")
{'sweep': [("the robot's gripper is not above cube", "the robot's gripper is above the cube"), ("the robot's gripper is not around cube and the robot's gripper is open", "the robot's gripper is around the cube and the robot's gripper is closed"), ("the robot's gripper is around cube and the robot's gripper is open", "the robot's gripper is above the cube and the robot's gripper is closed"), ("the robot's gripper is above cube and the robot's gripper is closed", "the robot's gripper is near sideways aligned with the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is around the cube and the robot's gripper is open", 'put the gripper above the puck'), ("the robot's gripper is above the cube and the robot's gripper is closed", 'put the gripper in front of the drawer')], env_name='sweep', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.05753249770400173
Success rates:
{
 "sweep": 0.0
}
