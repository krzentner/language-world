['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above the lock
    #  2. Grab the lock with the gripper
    #  3. Turn the dial on the lock
    # We need to make sure the robot is near the lock.
    if check("the robot's gripper is not near the lock"):
        robot.put("gripper above lock")
    # Once the robot is closer to the lock, it can grab the lock with its
    # gripper.
    if check("the robot's gripper is near the lock and the robot's gripper is not grabbing the lock"):
        robot.grab("lock")
    # Once the robot has grabbed the lock, it can start turning the dial.
    if check("the robot's gripper is grabbing the lock"):
        robot.turn("dial on lock")
{'door-lock': [("the robot's gripper is not near the lock", 'put gripper above lock'), ("the robot's gripper is near the lock and the robot's gripper is not grabbing the lock", 'grab lock'), ("the robot's gripper is grabbing the lock", 'turn dial on lock')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'put gripper above button'), ("the robot's gripper is near the door's lock and the robot's gripper is not behind the door's lock", 'grab peg'), ("the robot's gripper is behind the door's lock", 'grab peg')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'put gripper above button'), ("the robot's gripper is near the door's lock and the robot's gripper is not behind the door's lock", 'grab peg'), ("the robot's gripper is behind the door's lock", 'grab peg')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the door's lock", 'put gripper above button'), ("the robot's gripper is near the door's lock and the robot's gripper is not behind the door's lock", 'grab peg'), ("the robot's gripper is behind the door's lock", 'grab peg')], env_name='door-lock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9491783433516114
Success rates:
{
 "door-lock": 0.0
}
