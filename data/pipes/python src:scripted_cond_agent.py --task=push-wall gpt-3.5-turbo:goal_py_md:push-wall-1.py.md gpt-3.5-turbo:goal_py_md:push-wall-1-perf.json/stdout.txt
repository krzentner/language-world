['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# push-wall: slide the puck to the target location with a small wall in the way
# def push_wall(robot):
    # Steps:
    #  1. Put gripper above puck
    #  2. Push gripper into top of puck
    #  3. Slide puck to goal, even with the small wall in the way
    # The approach is similar to `push`, but now we have to make sure the gripper
    # doesn't collide with the small wall in between the puck and the target.
    # If the puck isn't below the gripper as seen from above, move the gripper
    # above the puck.
    if check("the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck"):
        robot.move_gripper("vertically aligned with the puck")
    # If the gripper is aligned with the puck but not near it, move the gripper
    # down to the puck to slide it.
    if check("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck"):
        robot.move_gripper("above the puck", close_gripper=True)
    # Check if the gripper and the puck are on the left, right or center of the
    # small wall.
    # If the gripper and puck are on the left side, push the puck towards the
    # right.
    if check("the robot's gripper and the puck are both left of the small wall"):
        robot.move_gripper("right of the puck")
    # If the gripper and puck are on the right side, push the puck towards the
    # left.
    elif check("the robot's gripper and the puck are both right of the small wall"):
        robot.move_gripper("left of the puck")
    # If the gripper and puck are on either side of the small wall, move the
    # gripper to the same side as the puck.
    else:
        if check("the robot's gripper is not aligned with the puck"):
            robot.move_gripper("left of the puck" if robot.gripper_x < robot.puck_x else "right of the puck")
    # Now that the gripper is aligned with the puck and the small wall, we can
    # slide the puck to the target location.
    # Close the gripper to make sure we keep control of the puck.
    if check("the robot's gripper is aligned with the puck and the small wall"):
        robot.move_gripper("above the target location")
{'push-wall': [("the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck", "the robot's gripper is vertically aligned with the puck"), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck", "the robot's gripper is above the puck and the robot's gripper is closed"), ("the robot's gripper and the puck are both left of the small wall", "the robot's gripper is right of the puck"), ("the robot's gripper and the puck are both right of the small wall", "the robot's gripper is left of the puck"), ("the robot's gripper is aligned with the puck and the small wall", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck and the robot's gripper is not vertically aligned with the puck", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is open and the puck is not left of wall", 'move gripper to right of window handle'), ("the robot's gripper is open and the puck is not right of wall", 'push the gripper into the puck'), ("the robot's gripper is forward aligned with the puck and the puck is near wall", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck and the robot's gripper is not vertically aligned with the puck", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is open and the puck is not left of wall", 'move gripper to right of window handle'), ("the robot's gripper is open and the puck is not right of wall", 'push the gripper into the puck'), ("the robot's gripper is forward aligned with the puck and the puck is near wall", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck and the robot's gripper is not vertically aligned with the puck", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the puck and the robot's gripper is not near the puck", 'put the gripper above the puck'), ("the robot's gripper is open and the puck is not left of wall", 'move gripper to right of window handle'), ("the robot's gripper is open and the puck is not right of wall", 'push the gripper into the puck'), ("the robot's gripper is forward aligned with the puck and the puck is near wall", 'put the gripper above the puck')], env_name='push-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.07801160871962785
Success rates:
{
 "push-wall": 0.0
}
