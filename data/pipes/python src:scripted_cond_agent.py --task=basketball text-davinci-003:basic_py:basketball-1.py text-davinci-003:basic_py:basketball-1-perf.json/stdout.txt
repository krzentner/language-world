['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    if check("the robot's gripper is not above the basketball"):
        robot.place("gripper above the basketball")
    if check("the robot's gripper is above the basketball and the robot's gripper is not around the basketball"):
        robot.drop("gripper around basketball")
    if check("the robot's gripper is around basketball and the robot's gripper is open"):
        robot.close("gripper around basketball")
    if check("the robot's gripper is closed and the basketball is not below the hoop"):
        robot.place("basketball below hoop")
    if check("the basketball is below the hoop"):
        robot.release("basketball into hoop")
{'basketball': [("the robot's gripper is not above the basketball", 'place gripper above the basketball'), ("the robot's gripper is above the basketball and the robot's gripper is not around the basketball", 'drop gripper around basketball'), ("the robot's gripper is around basketball and the robot's gripper is open", 'close gripper around basketball'), ("the robot's gripper is closed and the basketball is not below the hoop", 'place basketball below hoop'), ('the basketball is below the hoop', 'release basketball into hoop')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'place gripper above puck'), ("the robot's gripper is above the ball and the robot's gripper is not around the ball", 'drop gripper around puck'), ("the robot's gripper is around the ball and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is closed and the ball is not below the hoop", 'place puck at goal'), ('the ball is below the hoop', 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'place gripper above puck'), ("the robot's gripper is above the ball and the robot's gripper is not around the ball", 'drop gripper around puck'), ("the robot's gripper is around the ball and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is closed and the ball is not below the hoop", 'place puck at goal'), ('the ball is below the hoop', 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'place gripper above puck'), ("the robot's gripper is above the ball and the robot's gripper is not around the ball", 'drop gripper around puck'), ("the robot's gripper is around the ball and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is closed and the ball is not below the hoop", 'place puck at goal'), ('the ball is below the hoop', 'insert peg into hole')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.10555257309418983
Success rates:
{
 "basketball": 0.0
}
