['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    # 1. Put gripper above puck
    # 2. Push gripper into back of puck
    # 3. Slide puck to goal
    # Similar to "push", but we're pushing the puck backwards instead of forwards
    # If the puck isn't below the gripper as seen from above, move the gripper
    # above the puck.
    if check("the robot's gripper is not above the puck"):
        robot.move_gripper("above the puck")
    # If the gripper is aligned with the puck but not near it, move the gripper
    # down to the puck to slide it.
    if check("the robot's gripper is above the puck and the robot's gripper is not near the back of the puck"):
        robot.move_gripper("almost vertically aligned with the back of the puck", close_gripper=True)
    # If the gripper is near the puck, we've probably trapped the puck and can
    # slide it to the target location.
    if check("the robot's gripper is almost vertically aligned with the back of the puck and the puck is below the robot's gripper"):
        robot.move_gripper("above the target location")
{'push-back': [("the robot's gripper is not above the puck", "the robot's gripper is above the puck"), ("the robot's gripper is above the puck and the robot's gripper is not near the back of the puck", "the robot's gripper is almost vertically aligned with the back of the puck and the robot's gripper is closed"), ("the robot's gripper is almost vertically aligned with the back of the puck and the puck is below the robot's gripper", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is not near the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is almost vertically aligned with the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is not near the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is almost vertically aligned with the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is above the puck and the robot's gripper is not near the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is almost vertically aligned with the puck and the puck is below the robot's gripper", 'put the gripper above the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.016774026629338874
Success rates:
{
 "push-back": 0.0
}
