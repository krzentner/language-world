['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put the robot's gripper above the hammer
    #  2. Drop robot's gripper around the hammer
    #  3. Raise the hammer above the nail
    #  4. Strike the nail with the hammer
    # First, put the robot's gripper roughly above the hammer.
    if check("the robot's gripper is not vertically aligned with the hammer"):
        robot.put("gripper above hammer")
    # Once the gripper is properly lined up, grab the hammer.
    if check("the robot's gripper is vertically aligned with the hammer and the robot's gripper is not around the hammer"):
        robot.drop("gripper around hammer")
    # Now that the robot has the hammer, raise it above the nail.
    if check("the robot's gripper is around the hammer and the hammer is not above the nail"):
        robot.raise("hammer above nail")
    # Finally, hit the nail with the hammer.
    if check("the hammer is above the nail"):
        robot.strike("nail with hammer")
{'hammer': [("the robot's gripper is not vertically aligned with the hammer", 'put gripper above hammer'), ("the robot's gripper is vertically aligned with the hammer and the robot's gripper is not around the hammer", 'drop gripper around hammer'), ("the robot's gripper is around the hammer and the hammer is not above the nail", 'raise hammer above nail'), ('the hammer is above the nail', 'strike nail with hammer')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'put gripper above button'), ("the robot's gripper is vertically aligned with the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the hammer is not above the robot's gripper", 'place puck at goal'), ("the hammer is above the robot's gripper", 'put gripper above button')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'put gripper above button'), ("the robot's gripper is vertically aligned with the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the hammer is not above the robot's gripper", 'place puck at goal'), ("the hammer is above the robot's gripper", 'put gripper above button')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the hammer", 'put gripper above button'), ("the robot's gripper is vertically aligned with the hammer and the robot's gripper is not around the hammer", 'drop gripper around puck'), ("the robot's gripper is around the hammer and the hammer is not above the robot's gripper", 'place puck at goal'), ("the hammer is above the robot's gripper", 'put gripper above button')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9872329268745402
Success rates:
{
 "hammer": 0.0
}
