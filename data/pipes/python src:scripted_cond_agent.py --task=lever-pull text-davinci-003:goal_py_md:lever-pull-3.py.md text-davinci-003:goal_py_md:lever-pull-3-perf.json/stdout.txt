['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Next, we want to go about performing the task. The robot has to pull the lever up, so we need to make sure the gripper is in a good position.
First, we need to put the gripper above the lever.

```
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    #  1. Put gripper above lever 
    if check("the robot's gripper is not vertically aligned with the lever"):
        robot.move_gripper("vertically aligned with the lever")
```

Next, we want to make sure the gripper is actually around the lever before we begin pulling.

```
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    #  1. Put gripper above lever 
    #  2. Drop gripper around lever
    if check("the robot's gripper is not around the lever"):
        robot.move_gripper("around the lever")
```

Finally, we want to pull the lever. We can do this by moving the robot's gripper to the left of the lever.

```
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    #  1. Put gripper above lever 
    #  2. Drop gripper around lever
    #  3. Pull the lever up
    if check("the robot's gripper is not left of the lever"):
        robot.move_gripper("left of the lever")
```

And that's it! Now the robot should be able to pull the lever up.
{'lever-pull': [("the robot's gripper is not left of the lever", "the robot's gripper is left of the lever")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the lever", 'push the gripper into the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the lever", 'push the gripper into the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the lever", 'push the gripper into the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5133330870028869
Success rates:
{
 "lever-pull": 1.0
}
