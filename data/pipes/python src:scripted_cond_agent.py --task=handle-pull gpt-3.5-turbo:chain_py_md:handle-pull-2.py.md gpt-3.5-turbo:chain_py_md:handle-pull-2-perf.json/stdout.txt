['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# handle-pull: pull up the handle
# def handle_pull(robot):
    # Steps:
    #  1. Align the gripper with the handle
    #  2. Close the gripper around the handle
    #  3. Pull up the handle
    
    # First, align the gripper with the handle by moving it to a position above it
    if check("the robot's gripper is not above the handle"):
        robot.place("gripper above handle")
    # If the gripper isn't around the handle, put it around the handle.
    if check("the robot's gripper is not around handle and the robot's gripper is open"):
        robot.drop("gripper around handle")
    # If the gripper is near the handle and open, grab it by closing the gripper.
    if check("the robot's gripper is near handle and the robot's gripper is open"):
        robot.close("gripper around handle")
    # Now that the gripper is around the handle, pull the handle up.
    if check("the robot's gripper is around handle"):
        robot.pull("handle up")
{'handle-pull': [("the robot's gripper is not above the handle", 'place gripper above handle'), ("the robot's gripper is not around handle and the robot's gripper is open", 'drop gripper around handle'), ("the robot's gripper is near handle and the robot's gripper is open", 'close gripper around handle'), ("the robot's gripper is around handle", 'pull handle up')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'place gripper above puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'place gripper above puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'place gripper above puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the handle and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is around the handle", 'place puck at goal')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.1879706803189252
Success rates:
{
 "handle-pull": 0.0
}
