['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    # 1. Put the hammer head over the top of the nail
    # 2. Swing the hammer towards the nail
    # 3. Pull the hammer back towards your body
    # First, the robot needs to put the hammer head above the head of the nail.
    if check("the robot's hammer head is not above the nail head"):
        robot.put("hammer head above the nail head")
    # Now that the robot has the hammer head just above the nail head, it can
    # swing the hammer towards the nail.
    if check("the robot's hammer head is above the nail head"):
        robot.swing("hammer back and forth")
    # Once the nail has been hit, we can pull the hammer back towards our body.
    if check("the hammer has hit the nail"):
        robot.pull("hammer back")
{'hammer': [("the robot's hammer head is not above the nail head", 'put hammer head above the nail head'), ("the robot's hammer head is above the nail head", 'swing hammer back and forth'), ('the hammer has hit the nail', 'pull hammer back')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put the gripper above the puck'), ("the robot's gripper is above the hammer", 'insert peg into hole'), ('hammer is touching the table', 'place puck at goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put the gripper above the puck'), ("the robot's gripper is above the hammer", 'insert peg into hole'), ('hammer is touching the table', 'place puck at goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the hammer", 'put the gripper above the puck'), ("the robot's gripper is above the hammer", 'insert peg into hole'), ('hammer is touching the table', 'place puck at goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9600069848012949
Success rates:
{
 "hammer": 0.0
}
