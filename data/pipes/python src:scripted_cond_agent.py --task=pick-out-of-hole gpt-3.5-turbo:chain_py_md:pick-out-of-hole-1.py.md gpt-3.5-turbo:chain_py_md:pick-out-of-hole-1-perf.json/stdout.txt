['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):
    # Steps:
    #  1. Put gripper above the peg
    #  2. Grab the peg with the gripper
    #  3. Move the gripper up out of the hole
    #  4. Move the gripper to the target location
    # First, put the gripper above the peg using the same process as in peg_insert_side.
    if check("the robot's gripper is not vertically aligned with the peg"):
        robot.put("gripper above peg")
    # If the gripper is not around the peg, grab the peg.
    if check("the peg is not in the robot's gripper"):
        robot.grab("the peg")
    # Move the gripper up out of the hole now that we have the peg.
    if check("the robot's gripper is still in the hole"):
        robot.lift("gripper out of hole")
    # Move the gripper to the target location.
    if check("the robot's gripper is not at the target location"):
        robot.move("gripper to goal")
{'pick-out-of-hole': [("the robot's gripper is not vertically aligned with the peg", 'put gripper above peg'), ("the peg is not in the robot's gripper", 'grab the peg'), ("the robot's gripper is still in the hole", 'lift gripper out of hole'), ("the robot's gripper is not at the target location", 'move gripper to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the puck is not behind the robot's gripper", 'grab peg'), ("the robot's gripper is not behind the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the puck is not behind the robot's gripper", 'grab peg'), ("the robot's gripper is not behind the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the puck", 'put gripper above button'), ("the puck is not behind the robot's gripper", 'grab peg'), ("the robot's gripper is not behind the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is not near the target location", 'move gripper to right of window handle')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.015159806210568609
Success rates:
{
 "pick-out-of-hole": 0.0
}
