['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper in front of the puck
    #  2. Push gripper into puck
    #  3. Slide the puck backwards to the target
    # The robot can try to slide the puck backwards by trapping it with the
    # gripper and moving the gripper back.
    # First, we need to get the gripper in front of the puck.
    if check("the robot's gripper is not in front of the puck and the robot's gripper is not vertically aligned with the puck"):
        robot.put("gripper in front of puck")
    # Once the gripper is in front of the puck, the gripper should be close
    # enough that the gripper can grab it.
    # The gripper needs to be open, otherwise we won't be able to move it.
    if check("the robot's gripper is in front of pudding and the robot's gripper is open"):
        robot.push("gripper into the puck")
    # Once we've trapped the puck, we can slide it back to the target location.
    if check("the robot's gripper and the puck are in front of the target location"):
        robot.slide("the puck to the goal")
{'push-back': [("the robot's gripper is not in front of the puck and the robot's gripper is not vertically aligned with the puck", 'put gripper in front of puck'), ("the robot's gripper is in front of pudding and the robot's gripper is open", 'push gripper into the puck'), ("the robot's gripper and the puck are in front of the target location", 'slide the puck to the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the puck and the robot's gripper is not vertically aligned with the puck", 'put gripper around door handle'), ("the robot's gripper is in front of the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is open and the puck is in front of the target location", 'slide the puck to the goal')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the puck and the robot's gripper is not vertically aligned with the puck", 'put gripper around door handle'), ("the robot's gripper is in front of the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is open and the puck is in front of the target location", 'slide the puck to the goal')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the puck and the robot's gripper is not vertically aligned with the puck", 'put gripper around door handle'), ("the robot's gripper is in front of the puck and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is open and the puck is in front of the target location", 'slide the puck to the goal')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0070431324902135006
Success rates:
{
 "push-back": 0.0
}
