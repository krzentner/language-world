['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# basketball: put the ball into the hoop
# def basketball(robot):
    # Steps:
    #  1. Put gripper above ball
    #  2. Grab ball with gripper
    #  3. Line up gripper with hoop
    #  4. Toss ball into the hoop
    # First, put the gripper above the ball.
    if check("the robot's gripper is not above the ball"):
        robot.move_gripper("above the ball")
    # If the gripper isn't grabbing the ball, put it around the ball.
    if check("the robot's gripper is not around the ball and the robot's gripper is open"):
        robot.move_gripper("near the ball", close_gripper=True)
    # If the gripper is grabbing the ball, we need to line it up with the hoop.
    if check("the robot's gripper is around the ball"):
        robot.move_gripper("aligned with the hoop")
    # Finally, toss the ball into the hoop.
    if check("the robot's gripper is aligned with the hoop"):
        robot.move_gripper("above the hoop", close_gripper=False)
{'basketball': [("the robot's gripper is not above the ball", "the robot's gripper is above the ball"), ("the robot's gripper is not around the ball and the robot's gripper is open", "the robot's gripper is near the ball and the robot's gripper is closed"), ("the robot's gripper is around the ball", "the robot's gripper is near aligned with the hoop")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the ball", 'push the gripper into the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the ball", 'push the gripper into the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the ball", 'push the gripper into the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.10502388126764856
Success rates:
{
 "basketball": 0.0
}
