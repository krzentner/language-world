['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
if check("the robot's gripper is not near the ball"):
        robot.grab("the ball")
    if check("the robot's gripper is not aligned with the hoop"):
        robot.move("the gripper to be in front of the hoop")
    if check("the robot's gripper is aligned with the hoop and the robot's gripper is not high enough"):
        robot.move("the gripper up to the height of the hoop")
    if check("the robot's gripper is at the height of the hoop and the robot's gripper is not above the hoop"):
        robot.move("the gripper above the hoop")
    if check("the robot's gripper is above the hoop and the ball is not inside the hoop"):
        robot.drop("the ball into the hoop")
{'basketball': [("the robot's gripper is not near the ball", 'grab the ball'), ("the robot's gripper is not aligned with the hoop", 'move the gripper to be in front of the hoop'), ("the robot's gripper is aligned with the hoop and the robot's gripper is not high enough", 'move the gripper up to the height of the hoop'), ("the robot's gripper is at the height of the hoop and the robot's gripper is not above the hoop", 'move the gripper above the hoop'), ("the robot's gripper is above the hoop and the ball is not inside the hoop", 'drop the ball into the hoop')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the ball", 'grab peg'), ("the robot's gripper is not forward aligned with the hoop", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the hoop and the robot's gripper is open", 'move gripper to right of window handle'), ("the robot's gripper is not right of the hoop and the robot's gripper is not above the hoop", 'put the gripper above the puck'), ("the robot's gripper is above the hoop and the ball is not behind the hoop", 'slide the puck to the goal')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the ball", 'grab peg'), ("the robot's gripper is not forward aligned with the hoop", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the hoop and the robot's gripper is open", 'move gripper to right of window handle'), ("the robot's gripper is not right of the hoop and the robot's gripper is not above the hoop", 'put the gripper above the puck'), ("the robot's gripper is above the hoop and the ball is not behind the hoop", 'slide the puck to the goal')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the ball", 'grab peg'), ("the robot's gripper is not forward aligned with the hoop", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the hoop and the robot's gripper is open", 'move gripper to right of window handle'), ("the robot's gripper is not right of the hoop and the robot's gripper is not above the hoop", 'put the gripper above the puck'), ("the robot's gripper is above the hoop and the ball is not behind the hoop", 'slide the puck to the goal')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.03542035996182278
Success rates:
{
 "basketball": 0.0
}
