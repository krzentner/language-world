['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
#   1. Grab the hammer
#   2. Position the hammer above the nail
#   3. Swing the hammer down to hit the nail
# To begin, the robot needs to grab the hammer.
if check("the robot's gripper is not holding the hammer"):
    robot.grab("the hammer")
# Next, the robot needs to position the hammer above the nail.
if check("the robot's gripper is not vertically aligned with the nail and holding the hammer"):
    robot.put("the hammer directly above the nail")
# Finally, the robot can swing the hammer down to hit the nail.
if check("the robot's gripper is vertically aligned with the nail and holding the hammer"):
    robot.swing("the hammer down to hit the nail")
{'hammer': [("the robot's gripper is not holding the hammer", 'grab the hammer'), ("the robot's gripper is not vertically aligned with the nail and holding the hammer", 'put the hammer directly above the nail'), ("the robot's gripper is vertically aligned with the nail and holding the hammer", 'swing the hammer down to hit the nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the robot's gripper is not vertically aligned with the hammer", 'slide the puck to the goal'), ("the robot's gripper is vertically aligned with the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the robot's gripper is not vertically aligned with the hammer", 'slide the puck to the goal'), ("the robot's gripper is vertically aligned with the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not behind the hammer", 'grab peg'), ("the robot's gripper is not vertically aligned with the hammer", 'slide the puck to the goal'), ("the robot's gripper is vertically aligned with the hammer", 'slide the puck to the goal')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.758831990815099
Success rates:
{
 "hammer": 0.0
}
