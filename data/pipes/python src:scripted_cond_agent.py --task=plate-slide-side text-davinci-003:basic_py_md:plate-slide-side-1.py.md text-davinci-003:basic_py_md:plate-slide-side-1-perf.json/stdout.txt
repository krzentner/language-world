['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


if check("the robot's gripper is not vertically aligned with the plate and the robot's gripper is not above the plate"):
    robot.put("gripper above plate")
if check("the robot's gripper is above the plate and the robot's gripper is not horizontally aligned with plate"):
    robot.align("gripper to plate")
if check("the robot's gripper is horizontally aligned with plate and the robot's gripper is not near plate"):
    robot.grab("plate")
if check("the robot's gripper is near plate and the plate is not near target"):
    robot.slide("plate to target")
{'plate-slide-side': [("the robot's gripper is not vertically aligned with the plate and the robot's gripper is not above the plate", 'put gripper above plate'), ("the robot's gripper is above the plate and the robot's gripper is not horizontally aligned with plate", 'align gripper to plate'), ("the robot's gripper is horizontally aligned with plate and the robot's gripper is not near plate", 'grab plate'), ("the robot's gripper is near plate and the plate is not near target", 'slide plate to target')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate and the robot's gripper is not above the plate", 'put gripper above button'), ("the robot's gripper is above the plate and the robot's gripper is not horizontally aligned with the plate", 'place gripper above puck'), ("the robot's gripper is horizontally aligned with the plate and the robot's gripper is not near the plate", 'grab peg'), ("the robot's gripper is near the plate and the plate is not near the robot's gripper", 'slide the puck to the goal')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate and the robot's gripper is not above the plate", 'put gripper above button'), ("the robot's gripper is above the plate and the robot's gripper is not horizontally aligned with the plate", 'place gripper above puck'), ("the robot's gripper is horizontally aligned with the plate and the robot's gripper is not near the plate", 'grab peg'), ("the robot's gripper is near the plate and the plate is not near the robot's gripper", 'slide the puck to the goal')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the plate and the robot's gripper is not above the plate", 'put gripper above button'), ("the robot's gripper is above the plate and the robot's gripper is not horizontally aligned with the plate", 'place gripper above puck'), ("the robot's gripper is horizontally aligned with the plate and the robot's gripper is not near the plate", 'grab peg'), ("the robot's gripper is near the plate and the plate is not near the robot's gripper", 'slide the puck to the goal')], env_name='plate-slide-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.433841130968738
Success rates:
{
 "plate-slide-side": 0.0
}
