['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #  1. Put gripper roughly above handle
    #  2. Move gripper to side of handle
    #  3. Grab handle with gripper
    #  4. Pull handle up
    # First, put the gripper roughly above the handle.
    if check("the robot's gripper is not above the handle"):
        robot.move("gripper above handle")
    # Next, move the gripper to the side of the handle.
    if check("the robot's gripper is not to the side of the handle"):
        robot.move("gripper to the side of handle")
    # If the gripper is correctly positioned, we can now grab the handle.
    if check("the robot's gripper is next to handle and the robot's gripper is open"):
        robot.grab("handle")
    # Once the gripper is holding the handle, we can pull it up.
    if check("the robot's gripper is holding the handle"):
        robot.pull("up on handle")
{'handle-pull-side': [("the robot's gripper is not above the handle", 'move gripper above handle'), ("the robot's gripper is not to the side of the handle", 'move gripper to the side of handle'), ("the robot's gripper is next to handle and the robot's gripper is open", 'grab handle'), ("the robot's gripper is holding the handle", 'pull up on handle')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'place gripper above puck'), ("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is near the handle and the robot's gripper is open", 'grab peg'), ("the robot's gripper is behind the handle", 'push down on button')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'place gripper above puck'), ("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is near the handle and the robot's gripper is open", 'grab peg'), ("the robot's gripper is behind the handle", 'push down on button')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'place gripper above puck'), ("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is near the handle and the robot's gripper is open", 'grab peg'), ("the robot's gripper is behind the handle", 'push down on button')], env_name='handle-pull-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.06677060125860917
Success rates:
{
 "handle-pull-side": 0.0
}
