['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# assembly: put the wrench around the peg
# def assembly(robot):
    # Steps:
    # 1. Put the gripper above the peg
    # 2. Grab the peg with the gripper
    # 3. Move the gripper above the wrench
    # 4. Place the gripper around the wrench's handle
    # 5. Move the gripper downward
    # 6. Release the wrench around the peg

    # First, put the gripper above the peg.
    if check("the robot's gripper is not vertically aligned with the peg"):
        robot.move_gripper("vertically aligned with the peg")
    # If the gripper isn't around the peg, put it around the peg.
    if check("the robot's gripper is not around peg and the robot's gripper is open"):
        robot.move_gripper("near the peg", close_gripper=True)
    # If the gripper is near the peg and closed, maybe we can grab it by moving
    # the gripper above the wrench.
    if check("the robot's gripper is above the peg and the robot's gripper is closed"):
        robot.move_gripper("above the wrench")
        robot.move_gripper("around the wrench handle")
        robot.move_gripper("vertically aligned with the peg", close_gripper=True)
        robot.move_gripper("around the peg")
{'assembly': [("the robot's gripper is not vertically aligned with the peg", "the robot's gripper is vertically aligned with the peg"), ("the robot's gripper is not around peg and the robot's gripper is open", "the robot's gripper is near the peg and the robot's gripper is closed"), ("the robot's gripper is above the peg and the robot's gripper is closed", "the robot's gripper is above the wrench")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the robot's gripper is not around the peg and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is above the peg and the robot's gripper is closed", 'put the gripper above the puck')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the robot's gripper is not around the peg and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is above the peg and the robot's gripper is closed", 'put the gripper above the puck')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the robot's gripper is not around the peg and the robot's gripper is open", 'put the gripper in front of the drawer'), ("the robot's gripper is above the peg and the robot's gripper is closed", 'put the gripper above the puck')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.383549756274101
Success rates:
{
 "assembly": 0.0
}
