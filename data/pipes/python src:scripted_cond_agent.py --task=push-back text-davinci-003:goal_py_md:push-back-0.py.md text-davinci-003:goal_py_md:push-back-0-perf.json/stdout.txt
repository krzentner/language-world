['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The robot's code should look like this:

```
# push-back: slide the puck backwards to the target location
# def push_back(robot):    
    # Steps:
    #  1. Put gripper above puck
    #  2. Push gripper into top of puck
    #  3. Slide puck to goal
    # We need to put the gripper roughly above the puck before we can start to
    # push it back.
    if check("the robot's gripper is not above the puck"):
        robot.move_gripper("above the puck")
    # Now that the gripper is roughly above the puck, we can try to push the
    # puck back by trapping it from above. We want the gripper to be roughly
    # around the puck.
    if check("the robot's gripper is not around the puck"):
        robot.move_gripper("around the puck", close_gripper=True)
    # If the gripper is around the puck, just move it above the target
    # location. This should slide the puck back to the target location.
    if check("the robot's gripper is around the puck"):
        robot.move_gripper("above the target location")
```
{'push-back': [("the robot's gripper is not above the puck", "the robot's gripper is above the puck"), ("the robot's gripper is not around the puck", "the robot's gripper is around the puck and the robot's gripper is closed"), ("the robot's gripper is around the puck", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck", 'put the gripper above the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck", 'put the gripper above the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put the gripper above the puck'), ("the robot's gripper is not around the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is around the puck", 'put the gripper above the puck')], env_name='push-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.00840472126409029
Success rates:
{
 "push-back": 0.0
}
