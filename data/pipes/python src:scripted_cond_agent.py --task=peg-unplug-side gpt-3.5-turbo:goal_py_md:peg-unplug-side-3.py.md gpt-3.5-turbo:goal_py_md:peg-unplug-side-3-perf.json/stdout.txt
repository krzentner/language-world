['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# peg-unplug-side: pull the peg out from the side
# def peg_unplug_side(robot):
    # Steps:
    #  1. Put gripper above the peg
    #  2. Grab the peg with the gripper
    #  3. Tilt the peg out from the hole
    #  4. Pull the peg to the side
    #  5. Examine the peg to confirm that it's removed
    # First, put the gripper above the peg.
    if check("the robot's gripper is not vertically aligned with the peg"):
        robot.move_gripper("vertically aligned with the peg")
    # If the peg becomes left of the gripper, go back to putting the gripper
    # above the peg.
    # Because the peg is a long object, check if the gripper is lined up with it
    # from the front instead of around it.
    if check("peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper"):
        robot.move_gripper("forward aligned with the peg", close_gripper=True)
    # If the gripper is mostly around the peg but the peg is still in the hole,
    # tilt the peg out of the hole by slightly opening the gripper and moving
    # the gripper to the side.
    if check("the robot's gripper is almost aligned with hole"):
        robot.move_gripper("left of the hole", close_gripper=False)
    # Once the gripper is to the side of the hole, pull the gripper away from
    # the hole to remove the peg.
    if check("the robot's gripper is left of the hole and the peg is not between the gripper claws"):
        robot.move_gripper("above the peg")
    # Finally, confirm that the peg has been removed by examining it.
    if check("the peg is still in the hole"):
        print("Peg removal failed, please retry")
    else:
        print("Peg successfully removed")
{'peg-unplug-side': [("the robot's gripper is not vertically aligned with the peg", "the robot's gripper is vertically aligned with the peg"), ("peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper", "the robot's gripper is forward aligned with the peg and the robot's gripper is closed"), ("the robot's gripper is left of the hole and the peg is not between the gripper claws", "the robot's gripper is above the peg")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is left of the peg and the peg is not below the robot's gripper", 'put the gripper above the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is left of the peg and the peg is not below the robot's gripper", 'put the gripper above the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the peg", 'push the gripper into the puck'), ("the peg is not left of the robot's gripper and the peg is not forward aligned with the robot's gripper", 'put the gripper in front of the drawer'), ("the robot's gripper is left of the peg and the peg is not below the robot's gripper", 'put the gripper above the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.029347093173195896
Success rates:
{
 "peg-unplug-side": 0.0
}
