['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Place the stick in front of the thermos
    #  2. Push the thermos with the stick
    #  3. Pull the stick toward the goal
    # If the robot does not have the stick, pick it up off the ground.
    if check("the robot does not have the stick"):
        robot.grab("stick")
    # If the stick is not lined up with the thermos, place the stick in front of
    # the thermos.
    if check("the stick is not lined up with the thermos"):
        robot.place("stick in front of the thermos")
    # If the robot has the stick and the thermos is now in front of the stick,
    # start pushing.
    if check("the stick is lined up with the thermos and the thermos is in front of the stick"):
        robot.push("the thermos with the stick")
    # If the thermos is still in front of the stick, pull the stick toward the
    # goal.
    if check("the thermos is still in front of the stick"):
        robot.pull("stick towards the goal")
{'stick-push': [('the robot does not have the stick', 'grab stick'), ('the stick is not lined up with the thermos', 'place stick in front of the thermos'), ('the stick is lined up with the thermos and the thermos is in front of the stick', 'push the thermos with the stick'), ('the thermos is still in front of the stick', 'pull stick towards the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'grab peg'), ('the stick is not forward aligned with the thermos', 'put the gripper in front of the drawer'), ('the stick is forward aligned with the thermos and the thermos is in front of the stick', 'push the gripper into the puck'), ('the thermos is not in front of the stick', 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'grab peg'), ('the stick is not forward aligned with the thermos', 'put the gripper in front of the drawer'), ('the stick is forward aligned with the thermos and the thermos is in front of the stick', 'push the gripper into the puck'), ('the thermos is not in front of the stick', 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'grab peg'), ('the stick is not forward aligned with the thermos', 'put the gripper in front of the drawer'), ('the stick is forward aligned with the thermos and the thermos is in front of the stick', 'push the gripper into the puck'), ('the thermos is not in front of the stick', 'slide the puck to the goal')], env_name='stick-push', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.029249407501580765
Success rates:
{
 "stick-push": 0.0
}
