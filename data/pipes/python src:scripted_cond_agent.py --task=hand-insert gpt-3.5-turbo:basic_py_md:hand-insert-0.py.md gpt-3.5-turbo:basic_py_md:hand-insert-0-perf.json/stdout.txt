['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
```
# hand-insert: pick up the small object and move it to the target location
# def hand_insert(robot):
    if check("the robot's gripper is not above the small object"):
        robot.place("gripper above small object")
    if check("the robot's gripper is not around the small object and the robot's gripper is open"):
        robot.drop("gripper around small object")
    if check("the robot's gripper is near the small object and the robot's gripper is open"):
        robot.close("gripper around small object")
    if check("the robot's gripper is above the small object and the robot's gripper is closed"):
        robot.move("the small object to the target location")

# Note: You may need to replace "small object" and "target location" with the specific object and location names in your task.
{'hand-insert': [("the robot's gripper is not above the small object", 'place gripper above small object'), ("the robot's gripper is not around the small object and the robot's gripper is open", 'drop gripper around small object'), ("the robot's gripper is near the small object and the robot's gripper is open", 'close gripper around small object'), ("the robot's gripper is above the small object and the robot's gripper is closed", 'move the small object to the target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'slide the puck to the goal')], env_name='hand-insert', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'slide the puck to the goal')], env_name='hand-insert', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'place gripper above puck'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the puck and the robot's gripper is closed", 'slide the puck to the goal')], env_name='hand-insert', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 6.6037790246780705
Success rates:
{
 "hand-insert": 1.0
}
