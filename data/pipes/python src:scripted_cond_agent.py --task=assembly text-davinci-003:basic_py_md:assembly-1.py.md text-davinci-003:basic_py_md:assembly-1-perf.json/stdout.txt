['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Your code here:
```
# assembly: put the wrench around the peg
# def assembly(robot):
    if check("the robot's gripper is not above the wrench"):
        robot.grab("wrench")
    if check("the progress nut is not left of the robot's gripper and the gripper is not forward aligned with the progress nut"):
        robot.align("gripper with progress nut")
    if check("the progress nut is forward aligned with the robot's gripper and the wrench is not around the peg"):
        robot.put("wrench around the peg")
    if check("the wrench is now around the peg and the progress nut is far from the progress nut"):
        robot.slide("wrench down the peg")
```
{'assembly': [("the robot's gripper is not above the wrench", 'grab wrench'), ("the progress nut is not left of the robot's gripper and the gripper is not forward aligned with the progress nut", 'align gripper with progress nut'), ("the progress nut is forward aligned with the robot's gripper and the wrench is not around the peg", 'put wrench around the peg'), ('the wrench is now around the peg and the progress nut is far from the progress nut', 'slide wrench down the peg')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the wrench", 'grab peg'), ("the peg is not left of the robot's gripper and the robot's gripper is not forward aligned with the peg", 'close gripper around puck'), ("the peg is forward aligned with the robot's gripper and the wrench is not near the peg", 'slide the puck to the goal'), ('the wrench is not near the peg and the wrench is near the peg', 'slide the puck to the goal')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the wrench", 'grab peg'), ("the peg is not left of the robot's gripper and the robot's gripper is not forward aligned with the peg", 'close gripper around puck'), ("the peg is forward aligned with the robot's gripper and the wrench is not near the peg", 'slide the puck to the goal'), ('the wrench is not near the peg and the wrench is near the peg', 'slide the puck to the goal')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the wrench", 'grab peg'), ("the peg is not left of the robot's gripper and the robot's gripper is not forward aligned with the peg", 'close gripper around puck'), ("the peg is forward aligned with the robot's gripper and the wrench is not near the peg", 'slide the puck to the goal'), ('the wrench is not near the peg and the wrench is near the peg', 'slide the puck to the goal')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.738393273970072
Success rates:
{
 "assembly": 0.0
}
