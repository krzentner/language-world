['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py
# Steps:
    #   1. Move robot to the side of the wall, aligned with the button
    #   2. Move gripper to the front of the button and line up vertically
    #   3. Push the button
    # We need to first move the robot to the side of the wall to get a clear
    # line of sight to the button.
    if check("the robot is not positioned to the side of the wall"):
        robot.move("to the side of the wall")
    # Once we're positioned to the side of the wall, we can move the gripper in
    # front of the button and line it up vertically.
    if check("the robot's gripper is not in front of the button"):
        robot.move_gripper("in front of the button")
    if check("the robot's gripper is not vertically aligned with the button"):
        robot.move_gripper("vertically aligned with the button", close_gripper=True)
    # Now that the gripper is lined up with the button, we can push it.
    if check("the robot's gripper is vertically aligned with the button"):
        robot.move_gripper("near the button")
{'button-press-wall': [('the robot is not positioned to the side of the wall', 'move to the side of the wall'), ("the robot's gripper is not in front of the button", "the robot's gripper is in front of the button"), ("the robot's gripper is not vertically aligned with the button", "the robot's gripper is vertically aligned with the button and the robot's gripper is closed"), ("the robot's gripper is vertically aligned with the button", "the robot's gripper is near the button")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not in front of the button", 'push the gripper into the puck'), ("the robot's gripper is not vertically aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the button", 'push the gripper into the puck')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not in front of the button", 'push the gripper into the puck'), ("the robot's gripper is not vertically aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the button", 'push the gripper into the puck')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.51
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of wall", 'put the gripper in front of the drawer'), ("the robot's gripper is not in front of the button", 'push the gripper into the puck'), ("the robot's gripper is not vertically aligned with the button", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the button", 'push the gripper into the puck')], env_name='button-press-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.362606245929026
Success rates:
{
 "button-press-wall": 0.51
}
