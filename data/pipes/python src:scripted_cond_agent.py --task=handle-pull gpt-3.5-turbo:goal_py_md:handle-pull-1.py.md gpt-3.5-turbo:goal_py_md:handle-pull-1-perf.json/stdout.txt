['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# handle-pull: pull up the handle
# def handle_pull(robot):
    # Steps:
    #  1. Put gripper above the handle
    #  2. Close gripper around the handle
    #  3. Pull up the handle
    # First, put the gripper roughly above the handle.
    if check("the robot's gripper is not above the handle"):
        robot.move_gripper("above the handle")
    # If the gripper isn't around the handle, put it around the handle.
    if check("the robot's gripper is not around handle and the robot's gripper is open"):
        robot.move_gripper("near the handle", close_gripper=True)
    # If the gripper is around the handle and the handle is not in up position, 
    # pull up the handle by moving the gripper up.
    if check("the robot's gripper is around the handle and the handle is not in up position"):
        robot.move_gripper("above the handle", close_gripper=True)
{'handle-pull': [("the robot's gripper is not above the handle", "the robot's gripper is above the handle"), ("the robot's gripper is not around handle and the robot's gripper is open", "the robot's gripper is near the handle and the robot's gripper is closed"), ("the robot's gripper is around the handle and the handle is not in up position", "the robot's gripper is above the handle and the robot's gripper is closed")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put the gripper above the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle and the handle is not behind the robot's gripper", 'put the gripper above the puck')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put the gripper above the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle and the handle is not behind the robot's gripper", 'put the gripper above the puck')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.01
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put the gripper above the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle and the handle is not behind the robot's gripper", 'put the gripper above the puck')], env_name='handle-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.881300841949781
Success rates:
{
 "handle-pull": 0.01
}
