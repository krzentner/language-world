['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# stick-pull: use the stick to pull the thermos to the target location
# def stick_pull(robot):
    # Steps:
    #  1. Place the gripper above the stick
    #  2. Pick the stick with the gripper
    #  3. Place the stick against the thermos
    #  4. Use the stick to hook onto the thermos handle
    #  5. Pull the thermos to the target location 
    # Place gripper above the stick
    if check("the robot's gripper is not above the stick"):
        robot.place("gripper above the stick")
    # Pick up the stick with the gripper
    if check("the stick is not held in the gripper"):
        robot.grab("the stick with the gripper")
    # Place the stick against the thermos
    if check("the stick is not against the thermos and the stick is held in the gripper"):
        robot.place("the stick against the thermos")
    # Use the stick to hook onto the thermos handle
    if check("the stick is against the thermos and the stick is held in the gripper"):
        robot.hook("onto the thermos handle using the stick")
    # Pull the thermos to the target location
    if check("the stick is hooked onto the thermos handle and the thermos is not at the target location"):
        robot.pull("the thermos to the target location using the stick")
{'stick-pull': [("the robot's gripper is not above the stick", 'place gripper above the stick'), ('the stick is not held in the gripper', 'grab the stick with the gripper'), ('the stick is not against the thermos and the stick is held in the gripper', 'place the stick against the thermos'), ('the stick is against the thermos and the stick is held in the gripper', 'hook onto the thermos handle using the stick'), ('the stick is hooked onto the thermos handle and the thermos is not at the target location', 'pull the thermos to the target location using the stick')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'place gripper above puck'), ("the stick is not behind the robot's gripper", 'slide the puck to the goal'), ("the stick is not behind the thermos and the stick is behind the robot's gripper", 'slide the puck to the goal'), ("the stick is behind the thermos and the stick is behind the robot's gripper", 'put the gripper above the puck'), ('the stick is in front of the thermos and the thermos is not near the target location', 'put the gripper above the puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'place gripper above puck'), ("the stick is not behind the robot's gripper", 'slide the puck to the goal'), ("the stick is not behind the thermos and the stick is behind the robot's gripper", 'slide the puck to the goal'), ("the stick is behind the thermos and the stick is behind the robot's gripper", 'put the gripper above the puck'), ('the stick is in front of the thermos and the thermos is not near the target location', 'put the gripper above the puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the stick", 'place gripper above puck'), ("the stick is not behind the robot's gripper", 'slide the puck to the goal'), ("the stick is not behind the thermos and the stick is behind the robot's gripper", 'slide the puck to the goal'), ("the stick is behind the thermos and the stick is behind the robot's gripper", 'put the gripper above the puck'), ('the stick is in front of the thermos and the thermos is not near the target location', 'put the gripper above the puck')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.011221798330619617
Success rates:
{
 "stick-pull": 0.0
}
