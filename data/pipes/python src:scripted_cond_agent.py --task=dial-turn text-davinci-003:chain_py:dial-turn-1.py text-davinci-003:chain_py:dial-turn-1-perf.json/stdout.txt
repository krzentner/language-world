['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Get the robot's gripper around the dial
    #  2. Turn the dial
    # If the robot's gripper is not over the dial, it needs to be moved up and
    # sideways so that it can grab the dial.
    if check("the robot's gripper is not above the dial and the robot's gripper is not horizontally aligned with the dial"):
        robot.put("gripper above dial")
    # After the gripper is over the dial, it's just a matter of trapping it and
    # turning it.
    # Move the gripper down around the dial and close it to trap the dial.
    if check("the robot's gripper is above the dial and the robot's gripper is not around the dial and the robot's gripper is open"):
        robot.grab("dial")
    # Now that the dial is trapped, just turn it.
    if check("the robot's gripper is around the dial and the robot's gripper is closed"):
        robot.turn("dial clockwise")
{'dial-turn': [("the robot's gripper is not above the dial and the robot's gripper is not horizontally aligned with the dial", 'put gripper above dial'), ("the robot's gripper is above the dial and the robot's gripper is not around the dial and the robot's gripper is open", 'grab dial'), ("the robot's gripper is around the dial and the robot's gripper is closed", 'turn dial clockwise')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial and the robot's gripper is not horizontally aligned with the dial", 'put gripper above button'), ("the robot's gripper is above the dial and the robot's gripper is not around the dial", 'grab peg'), ("the robot's gripper is around the dial and the robot's gripper is closed", 'push drawer closed')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial and the robot's gripper is not horizontally aligned with the dial", 'put gripper above button'), ("the robot's gripper is above the dial and the robot's gripper is not around the dial", 'grab peg'), ("the robot's gripper is around the dial and the robot's gripper is closed", 'push drawer closed')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the dial and the robot's gripper is not horizontally aligned with the dial", 'put gripper above button'), ("the robot's gripper is above the dial and the robot's gripper is not around the dial", 'grab peg'), ("the robot's gripper is around the dial and the robot's gripper is closed", 'push drawer closed')], env_name='dial-turn', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 4.465218210401005
Success rates:
{
 "dial-turn": 1.0
}
