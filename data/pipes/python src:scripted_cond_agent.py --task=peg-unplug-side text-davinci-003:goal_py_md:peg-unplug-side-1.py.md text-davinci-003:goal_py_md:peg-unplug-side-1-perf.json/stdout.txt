['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md

    # Steps:
    #  1. Put the gripper in front of the peg
    #  2. Grab the peg using the gripper
    #  3. Pull the peg out sideways
    # The first step is to put the gripper so that it's in front of the peg.
    if check("the robot's gripper is not forward aligned with the peg"):
        robot.move_gripper("forward aligned with the peg", close_gripper=True)
    # Grab the peg with the gripper by moving towards it.
    if check("the robot's gripper is not around the peg"):
        robot.move_gripper("around the peg")
    # With the peg in the gripper, pull it out sideways.
    if check("the robot's gripper is around the peg"):
        robot.move_gripper("left of the peg")
{'peg-unplug-side': [("the robot's gripper is not forward aligned with the peg", "the robot's gripper is forward aligned with the peg and the robot's gripper is closed"), ("the robot's gripper is not around the peg", "the robot's gripper is around the peg"), ("the robot's gripper is around the peg", "the robot's gripper is left of the peg")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the peg", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the peg", 'drop gripper around puck'), ("the robot's gripper is around the peg", 'push the gripper into the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the peg", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the peg", 'drop gripper around puck'), ("the robot's gripper is around the peg", 'push the gripper into the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.01
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not forward aligned with the peg", 'put the gripper in front of the drawer'), ("the robot's gripper is not around the peg", 'drop gripper around puck'), ("the robot's gripper is around the peg", 'push the gripper into the puck')], env_name='peg-unplug-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.126216974872928
Success rates:
{
 "peg-unplug-side": 0.01
}
