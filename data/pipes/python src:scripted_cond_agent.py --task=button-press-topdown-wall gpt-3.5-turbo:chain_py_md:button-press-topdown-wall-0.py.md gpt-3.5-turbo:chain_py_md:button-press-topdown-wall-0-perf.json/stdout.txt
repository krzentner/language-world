['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# button-press-topdown-wall: push the button down from above with a short wall in the way
# def button_press_topdown_wall(robot):
    # Steps:
    #  1. Move to the side of the wall opposite the button
    #  2. Put the gripper above the button
    #  3. Move the wall away
    #  4. Push down on the button
    # Move to the side of the wall opposite the button.
    if check("the robot is not on the opposite side of the wall from the button"):
        robot.move("to opposite side of wall from button")
    # Put the gripper above the button.
    if check("the robot's gripper is not vertically aligned with button"):
        robot.put("gripper above button")
    # Move the wall away.
    if check("the wall is not moved away"):
        robot.move("wall away")
    # Push down on the button.
    if check("the robot's gripper is vertically aligned with and above button"):
        robot.push("down on button")
{'button-press-topdown-wall': [('the robot is not on the opposite side of the wall from the button', 'move to opposite side of wall from button'), ("the robot's gripper is not vertically aligned with button", 'put gripper above button'), ('the wall is not moved away', 'move wall away'), ("the robot's gripper is vertically aligned with and above button", 'push down on button')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[('button is not touching the table and wall is left of the button', 'move gripper to right of window handle'), ("the robot's gripper is not vertically aligned with the button", 'put gripper above button'), ('the button is not above wall', 'pull away from drawer'), ("the robot's gripper is vertically aligned with the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[('button is not touching the table and wall is left of the button', 'move gripper to right of window handle'), ("the robot's gripper is not vertically aligned with the button", 'put gripper above button'), ('the button is not above wall', 'pull away from drawer'), ("the robot's gripper is vertically aligned with the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.99
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[('button is not touching the table and wall is left of the button', 'move gripper to right of window handle'), ("the robot's gripper is not vertically aligned with the button", 'put gripper above button'), ('the button is not above wall', 'pull away from drawer'), ("the robot's gripper is vertically aligned with the button", 'push down on button')], env_name='button-press-topdown-wall', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 3.8113286526266275
Success rates:
{
 "button-press-topdown-wall": 0.99
}
