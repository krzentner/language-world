['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Here's the program:

```
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):
    # Steps:
    #  1. Put gripper above hole 
    #  2. Drop gripper around peg
    #  3. Close gripper around peg
    #  4. Pull peg out of hole
    #  5. Place peg at goal
    # Start by positioning the gripper above the hole.
    if check("the robot's gripper is not above the hole"):
        robot.put("gripper above hole")
    # If the gripper is not around the peg, drop the gripper around the peg.
    if check("the robot's gripper is not around peg and the robot's gripper is open"):
        robot.drop("gripper around peg")
    # If the gripper is near the peg, close the gripper around it.
    if check("the robot's gripper is near the peg and the robot's gripper is open"):
        robot.close("gripper around peg")
    # If the gripper is closed and near the peg, try to pull the peg out of the hole.
    if check("the robot's gripper is closed around the peg and the robot's gripper is connected to the peg"):
        robot.pull("peg out of the hole")
    # If the peg is out of the hole, place it at the goal location.
    if check("the robot's gripper is holding the peg and the peg is out of the hole"):
        robot.place("peg at goal")
```
{'pick-out-of-hole': [("the robot's gripper is not above the hole", 'put gripper above hole'), ("the robot's gripper is not around peg and the robot's gripper is open", 'drop gripper around peg'), ("the robot's gripper is near the peg and the robot's gripper is open", 'close gripper around peg'), ("the robot's gripper is closed around the peg and the robot's gripper is connected to the peg", 'pull peg out of the hole'), ("the robot's gripper is holding the peg and the peg is out of the hole", 'place peg at goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is not around the puck and the robot's gripper is left of the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is behind the puck and the puck is left of the robot's gripper", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is not around the puck and the robot's gripper is left of the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is behind the puck and the puck is left of the robot's gripper", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the puck", 'put gripper above button'), ("the robot's gripper is not around the puck and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the puck and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is not around the puck and the robot's gripper is left of the puck", 'put the gripper in front of the drawer'), ("the robot's gripper is behind the puck and the puck is left of the robot's gripper", 'place puck at goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.041790117978344504
Success rates:
{
 "pick-out-of-hole": 0.0
}
