['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# hammer: hit the nail with the hammer
# def hammer(robot):
    # Steps:
    #  1. Put the hammer near the nail
    #  2. Grab the hammer
    #  3. Raise the hammer
    #  4. Swing the hammer down to hit the nail
    #  5. Release the hammer
    # First, move the gripper to put the hammer near the nail.
    if check("the robot's gripper is not near the nail"):
        robot.reach("the hammer to the nail")
    # Once the gripper is near the hammer, grab it.
    if check("the robot's gripper is near the hammer and the robot's gripper is open"):
        robot.close("gripper around hammer")
    # Once we have the hammer, lift it up to prepare for a swing.
    if check("the robot's gripper is holding the hammer and the hammer is not raised"):
        robot.lift("the hammer")
    # Now that the hammer is lifted, we can strike the nail with a swing.
    if check("the robot's gripper is holding the hammer and the hammer is raised"):
        robot.swing("the hammer down onto the nail")
    # Once the hammer has hit the nail, release it so we can move on to the
    # next task.
    if check("the robot's gripper is holding the hammer and the hammer is touching the nail"):
        robot.release("the hammer")
{'hammer': [("the robot's gripper is not near the nail", 'reach the hammer to the nail'), ("the robot's gripper is near the hammer and the robot's gripper is open", 'close gripper around hammer'), ("the robot's gripper is holding the hammer and the hammer is not raised", 'lift the hammer'), ("the robot's gripper is holding the hammer and the hammer is raised", 'swing the hammer down onto the nail'), ("the robot's gripper is holding the hammer and the hammer is touching the nail", 'release the hammer')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the hammer", 'slide the puck to the goal'), ("the robot's gripper is near the hammer and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is behind the hammer and the hammer is near the robot's gripper", 'slide the puck to the goal'), ("the robot's gripper is behind the hammer and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is behind the hammer and hammer is touching the table", 'grab peg')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the hammer", 'slide the puck to the goal'), ("the robot's gripper is near the hammer and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is behind the hammer and the hammer is near the robot's gripper", 'slide the puck to the goal'), ("the robot's gripper is behind the hammer and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is behind the hammer and hammer is touching the table", 'grab peg')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the hammer", 'slide the puck to the goal'), ("the robot's gripper is near the hammer and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is behind the hammer and the hammer is near the robot's gripper", 'slide the puck to the goal'), ("the robot's gripper is behind the hammer and the robot's gripper is closed", 'slide the puck to the goal'), ("the robot's gripper is behind the hammer and hammer is touching the table", 'grab peg')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9300043804440485
Success rates:
{
 "hammer": 1.0
}
