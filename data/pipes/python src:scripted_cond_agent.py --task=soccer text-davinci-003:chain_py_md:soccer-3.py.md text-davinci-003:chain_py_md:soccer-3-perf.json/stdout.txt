['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The program should perform the following steps:
1. Put the gripper above the soccer ball
2. Grab the soccer ball with the gripper
3. Push the soccer ball to the target location

Solution:
```
# soccer: push the soccer ball into the target location
#def soccer(robot):
    # Steps:
    #  1. Put the gripper above the soccer ball
    #  2. Grab the soccer ball with the gripper
    #  3. Push the soccer ball to the target location

    # Put the gripper above the soccer ball
    if check("the robot's gripper is not vertically aligned with soccer ball"):
        robot.put("gripper above soccer ball")

    # Grab the soccer ball with the gripper
    if check("the robot's gripper is vertically aligned with soccer ball and the robot's gripper is not around soccer ball"):
        robot.grab("soccer ball")

    # Push the soccer ball to the target location
    if check("the robot's gripper is around soccer ball"):
        robot.push("soccer ball to the target location")
{'soccer': [("the robot's gripper is not vertically aligned with soccer ball", 'put gripper above soccer ball'), ("the robot's gripper is vertically aligned with soccer ball and the robot's gripper is not around soccer ball", 'grab soccer ball'), ("the robot's gripper is around soccer ball", 'push soccer ball to the target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the ball", 'put gripper above button'), ("the robot's gripper is vertically aligned with the ball and the robot's gripper is not around the ball", 'grab peg'), ("the robot's gripper is around the ball", 'slide the puck to the goal')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the ball", 'put gripper above button'), ("the robot's gripper is vertically aligned with the ball and the robot's gripper is not around the ball", 'grab peg'), ("the robot's gripper is around the ball", 'slide the puck to the goal')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the ball", 'put gripper above button'), ("the robot's gripper is vertically aligned with the ball and the robot's gripper is not around the ball", 'grab peg'), ("the robot's gripper is around the ball", 'slide the puck to the goal')], env_name='soccer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.1651693517250628
Success rates:
{
 "soccer": 0.0
}
