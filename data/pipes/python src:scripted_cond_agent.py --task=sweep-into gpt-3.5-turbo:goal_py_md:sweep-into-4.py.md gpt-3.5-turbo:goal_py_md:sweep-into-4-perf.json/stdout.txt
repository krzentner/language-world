['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# sweep-into: grab the cube and move it to the target location
# def sweep_into(robot):
    # Steps:
    #  1. Put gripper above the cube
    #  2. Grab the cube with the gripper
    #  3. Move the gripper to the target location, keeping the cube in the gripper and sweeping any objects in the way out of the path
    # First, put the gripper above the cube.
    if check("the robot's gripper is not vertically aligned with the cube"):
        robot.move_gripper("vertically aligned with the cube")
    # If the gripper isn't around the cube, put it around the cube.
    if check("the robot's gripper is not around the cube and the robot's gripper is open"):
        robot.move_gripper("around the cube", close_gripper=True)
    # If the gripper is around the cube and the cube is in front of the gripper, we can
    # move the gripper to the target location while sweeping any objects in the way.
    target_location = "left of the table"
    if check(f"the robot's gripper is around the cube and the cube is in front of the robot's gripper and the robot's gripper is not at {target_location}"):
        sweep_path(robot, "near the cube", target_location)
        robot.move_gripper(target_location)
{'sweep-into': [("the robot's gripper is not vertically aligned with the cube", "the robot's gripper is vertically aligned with the cube"), ("the robot's gripper is not around the cube and the robot's gripper is open", "the robot's gripper is around the cube and the robot's gripper is closed")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the cube", 'push the gripper into the puck'), ("the robot's gripper is not around the cube and the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.31599419825193875
Success rates:
{
 "sweep-into": 0.0
}
