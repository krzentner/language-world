['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# plate-slide-back: slide the plate back into the target location
# def plate_slide_back(robot):
    # Steps:
    # 1. Put gripper above plate
    # 2. Grab the plate with the gripper
    # 3. Slide the plate back to target location 
    # First, put the gripper roughly above the plate.
    if check("the robot's gripper is not roughly above the plate"):
        robot.place("gripper above plate")
    # Now, grab the plate with the gripper.
    if check("the robot's gripper is not holding the plate and the gripper is above the plate"):
        robot.grab("plate")
    # Once the plate is held by the gripper, slide it back towards the target location.
    if check("the plate is held by the gripper and the gripper is near the target location"):
        robot.slide("the plate back to target location")
{'plate-slide-back': [("the robot's gripper is not roughly above the plate", 'place gripper above plate'), ("the robot's gripper is not holding the plate and the gripper is above the plate", 'grab plate'), ('the plate is held by the gripper and the gripper is near the target location', 'slide the plate back to target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is not behind the plate and the robot's gripper is above the plate", 'grab peg'), ("the plate is below the robot's gripper and the robot's gripper is near the plate", 'slide the puck to the goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is not behind the plate and the robot's gripper is above the plate", 'grab peg'), ("the plate is below the robot's gripper and the robot's gripper is near the plate", 'slide the puck to the goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'place gripper above puck'), ("the robot's gripper is not behind the plate and the robot's gripper is above the plate", 'grab peg'), ("the plate is below the robot's gripper and the robot's gripper is near the plate", 'slide the puck to the goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.9760407007444576
Success rates:
{
 "plate-slide-back": 0.0
}
