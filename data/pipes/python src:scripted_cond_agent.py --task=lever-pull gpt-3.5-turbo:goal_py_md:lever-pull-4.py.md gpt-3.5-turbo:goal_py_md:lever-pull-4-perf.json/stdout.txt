['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# lever-pull: rotate the lever up
# def lever_pull(robot):
    # Steps:
    # 1. Put gripper above the lever
    # 2. Grab the lever with the gripper
    # 3. Rotate the gripper to pull the lever up
    
    # Put the gripper above the lever
    if check("the robot's gripper is not above the lever"):
        robot.move_gripper("above the lever")
    # If the gripper is above the lever, grab the lever
    if check("the robot's gripper is above the lever and open"):
        robot.move_gripper("around the lever", close_gripper=True)
    # If the gripper is holding the lever, rotate the gripper up
    if check("the robot's gripper is holding the lever"):
        robot.move_gripper("lever pulled up")
{'lever-pull': [("the robot's gripper is not above the lever", "the robot's gripper is above the lever"), ("the robot's gripper is above the lever and open", "the robot's gripper is around the lever and the robot's gripper is closed"), ("the robot's gripper is holding the lever", "the robot's gripper is near lever pulled up")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the lever", 'put the gripper above the puck'), ("the robot's gripper is above the lever", 'drop gripper around puck'), ("the robot's gripper is behind the lever", 'push the gripper into the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the lever", 'put the gripper above the puck'), ("the robot's gripper is above the lever", 'drop gripper around puck'), ("the robot's gripper is behind the lever", 'push the gripper into the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the lever", 'put the gripper above the puck'), ("the robot's gripper is above the lever", 'drop gripper around puck'), ("the robot's gripper is behind the lever", 'push the gripper into the puck')], env_name='lever-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.09061670753729313
Success rates:
{
 "lever-pull": 0.0
}
