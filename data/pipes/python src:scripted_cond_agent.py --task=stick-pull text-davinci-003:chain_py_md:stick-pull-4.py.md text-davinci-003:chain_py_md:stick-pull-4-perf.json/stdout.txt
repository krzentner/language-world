['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Steps:
1. Put the gripper between the stick and the thermos.
2. Push the gripper against the stick.
3. Pull the gripper with the stick.
4. Move the stick and thermos to the target location.

if check("the robot's gripper is not between the stick and thermos"):
    robot.put("gripper between stick and thermos") 
if check("the robot's gripper is between the stick and thermos and the robot's gripper is not pushing against the stick"):
    robot.push("gripper against stick")
if check("the robot's gripper is pushing against the stick"):
    robot.pull("gripper with stick")
if check("the gripper is pulling the stick"):
    robot.move("stick and thermos to goal location")
{'stick-pull': [("the robot's gripper is not between the stick and thermos", 'put gripper between stick and thermos'), ("the robot's gripper is between the stick and thermos and the robot's gripper is not pushing against the stick", 'push gripper against stick'), ("the robot's gripper is pushing against the stick", 'pull gripper with stick'), ('the gripper is pulling the stick', 'move stick and thermos to goal location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not below the thermos", 'put gripper above button'), ("the robot's gripper is below the thermos and the robot's gripper is not behind the stick", 'push the gripper into the puck'), ("the robot's gripper is behind the stick", 'push the gripper into the puck'), ("the robot's gripper is around the stick", 'place puck at goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not below the thermos", 'put gripper above button'), ("the robot's gripper is below the thermos and the robot's gripper is not behind the stick", 'push the gripper into the puck'), ("the robot's gripper is behind the stick", 'push the gripper into the puck'), ("the robot's gripper is around the stick", 'place puck at goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not below the thermos", 'put gripper above button'), ("the robot's gripper is below the thermos and the robot's gripper is not behind the stick", 'push the gripper into the puck'), ("the robot's gripper is behind the stick", 'push the gripper into the puck'), ("the robot's gripper is around the stick", 'place puck at goal')], env_name='stick-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.05803266218771399
Success rates:
{
 "stick-pull": 0.0
}
