['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then add the code:

```
    if check("the robot's gripper is not near the cube"):
        robot.reach("to the cube")
    if check("the robot's gripper is not above the cube and the robot's gripper is not vertically aligned with the cube"):
        robot.put("gripper above cube")
    if check("the robot's gripper is not around the cube"):
        robot.drop("gripper around cube")
    if check("the robot's gripper is near the cube and the cube is not above the robot's gripper"):
        robot.raise("gripper with cube")
    if check("the robot's gripper is above the cube"):
        robot.slide("cube to goal")
```
{'sweep-into': [("the robot's gripper is not near the cube", 'reach to the cube'), ("the robot's gripper is not above the cube and the robot's gripper is not vertically aligned with the cube", 'put gripper above cube'), ("the robot's gripper is not around the cube", 'drop gripper around cube'), ("the robot's gripper is near the cube and the cube is not above the robot's gripper", 'raise gripper with cube'), ("the robot's gripper is above the cube", 'slide cube to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the cube", 'reach to goal'), ("the robot's gripper is not above the cube and the robot's gripper is not vertically aligned with the cube", 'put gripper above button'), ("the robot's gripper is not around the cube", 'drop gripper around puck'), ("the robot's gripper is near the cube and the cube is not above the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is above the cube", 'slide the puck to the goal')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the cube", 'reach to goal'), ("the robot's gripper is not above the cube and the robot's gripper is not vertically aligned with the cube", 'put gripper above button'), ("the robot's gripper is not around the cube", 'drop gripper around puck'), ("the robot's gripper is near the cube and the cube is not above the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is above the cube", 'slide the puck to the goal')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.28
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the cube", 'reach to goal'), ("the robot's gripper is not above the cube and the robot's gripper is not vertically aligned with the cube", 'put gripper above button'), ("the robot's gripper is not around the cube", 'drop gripper around puck'), ("the robot's gripper is near the cube and the cube is not above the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is above the cube", 'slide the puck to the goal')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.257493933649535
Success rates:
{
 "sweep-into": 0.28
}
