['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
Here's the program to perform the `pick-out-of-hole` task:

```
# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location
# def pick_out_of_hole(robot):
    if check("the robot's gripper is not near the hole"):
        robot.move("to the hole")
    if check("the robot's gripper is not around the peg"):
        robot.drop("gripper around peg")
    if check("the robot's gripper is not closed around the peg"):
        robot.close("gripper around peg")
    if check("the robot's gripper is above the hole and the peg is in the gripper"):
        robot.move("to the goal")
``` 

This code instructs the robot to move to the hole, grab the peg, and move to the goal while holding onto the peg.
{'pick-out-of-hole': [("the robot's gripper is not near the hole", 'move to the hole'), ("the robot's gripper is not around the peg", 'drop gripper around peg'), ("the robot's gripper is not closed around the peg", 'close gripper around peg'), ("the robot's gripper is above the hole and the peg is in the gripper", 'move to the goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the puck", 'slide the puck to the goal'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is not around the puck", 'close gripper around puck'), ("the robot's gripper is above the puck and the puck is behind the robot's gripper", 'reach to goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the puck", 'slide the puck to the goal'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is not around the puck", 'close gripper around puck'), ("the robot's gripper is above the puck and the puck is behind the robot's gripper", 'reach to goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the puck", 'slide the puck to the goal'), ("the robot's gripper is not around the puck", 'drop gripper around puck'), ("the robot's gripper is not around the puck", 'close gripper around puck'), ("the robot's gripper is above the puck and the puck is behind the robot's gripper", 'reach to goal')], env_name='pick-out-of-hole', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.022178313402983246
Success rates:
{
 "pick-out-of-hole": 0.0
}
