['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then write the program: 

```
# handle-press-side: push down the handle from the side
# def handle_press_side(robot):
    # Steps:
    #  1. Put gripper to the left of the handle
    #  2. Push down on the handle
    # First, put the gripper to the left of the handle.
    if check("the robot's gripper is not to the left of the handle"):
        robot.move_gripper("to the left of the handle")
    # If the gripper isn't aligned with the handle, line it up from the side.
    if check("the robot's gripper is not side-aligned with handle"):
        robot.move_gripper("side-aligned with handle", close_gripper=True)
    # Once the handle is lined up with the gripper, just push down on it.
    if check("the robot's gripper is side-aligned with handle"):
        robot.move_gripper("below the handle")
``
{'handle-press-side': [("the robot's gripper is not to the left of the handle", "the robot's gripper is to the left of the handle"), ("the robot's gripper is not side-aligned with handle", "the robot's gripper is near side-aligned with handle and the robot's gripper is closed"), ("the robot's gripper is side-aligned with handle", "the robot's gripper is below the handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is not behind the handle", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the handle", 'put the gripper above the puck')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is not behind the handle", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the handle", 'put the gripper above the puck')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not left of the handle", 'move gripper to left of window handle'), ("the robot's gripper is not behind the handle", 'put the gripper in front of the drawer'), ("the robot's gripper is forward aligned with the handle", 'put the gripper above the puck')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.26447952464688695
Success rates:
{
 "handle-press-side": 0.0
}
