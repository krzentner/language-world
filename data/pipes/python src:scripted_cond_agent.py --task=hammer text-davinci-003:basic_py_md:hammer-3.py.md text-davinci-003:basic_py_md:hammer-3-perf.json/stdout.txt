['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


If check("the robot's gripper is not above the hammer"):
    robot.put("gripper above hammer")
if check("the robot's gripper is above the hammer and the hammer is not above the nail"):
    robot.grab("hammer")
if check("the hammer is above the nail and the robot's gripper is not forward aligned with the nail"):
    robot.align("hammer to nail")
if check("the hammer is above the nail and the robot's gripper is forward aligned with the nail"):
    robot.hit("hammer on nail")
{'hammer': [("the robot's gripper is above the hammer and the hammer is not above the nail", 'grab hammer'), ("the hammer is above the nail and the robot's gripper is not forward aligned with the nail", 'align hammer to nail'), ("the hammer is above the nail and the robot's gripper is forward aligned with the nail", 'hit hammer on nail')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is above the hammer and the hammer is not above the robot's gripper", 'grab peg'), ("the hammer is above the robot's gripper and the robot's gripper is not forward aligned with the hammer", 'align peg to hole'), ("the hammer is above the robot's gripper and the robot's gripper is forward aligned with the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is above the hammer and the hammer is not above the robot's gripper", 'grab peg'), ("the hammer is above the robot's gripper and the robot's gripper is not forward aligned with the hammer", 'align peg to hole'), ("the hammer is above the robot's gripper and the robot's gripper is forward aligned with the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is above the hammer and the hammer is not above the robot's gripper", 'grab peg'), ("the hammer is above the robot's gripper and the robot's gripper is not forward aligned with the hammer", 'align peg to hole'), ("the hammer is above the robot's gripper and the robot's gripper is forward aligned with the hammer", 'align peg to hole')], env_name='hammer', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.9480627099127531
Success rates:
{
 "hammer": 0.0
}
