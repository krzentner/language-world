['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


## Solution

```
# door-unlock: turn the dial on the door
# def door_unlock(robot):
    # Steps:
    #  1. Put gripper above dial
    #  2. Drop gripper around dial
    #  3. Rotate the dial
    # First, put the gripper above the dial.
    if check("the robot's gripper is not vertically aligned with dial"):
        robot.move_gripper("vertically aligned with the dial", close_gripper=True)
    # As long as the gripper is aligned with the dial, moving the gripper
    # slightly to the right of it should allow us to grab the dial.
    if check("the robot's gripper is vertically aligned with dial"):
        robot.move_gripper("right of the dial")
    # Once we have a grip on the dial, rotate it to the desired point.
    if check("the robot's gripper is around dial"):
        robot.rotate_gripper("to the desired point")
```
{'door-unlock': [("the robot's gripper is not vertically aligned with dial", "the robot's gripper is vertically aligned with the dial and the robot's gripper is closed"), ("the robot's gripper is vertically aligned with dial", "the robot's gripper is right of the dial"), ("the robot's gripper is around dial", 'rotate_gripper to the desired point')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the door's lock", 'push the gripper into the puck'), ("the robot's gripper is vertically aligned with the door's lock", 'put the gripper in front of the drawer'), ("the robot's gripper is open", 'put the gripper in front of the drawer')], env_name='door-unlock', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.7848407628124393
Success rates:
{
 "door-unlock": 0.0
}
