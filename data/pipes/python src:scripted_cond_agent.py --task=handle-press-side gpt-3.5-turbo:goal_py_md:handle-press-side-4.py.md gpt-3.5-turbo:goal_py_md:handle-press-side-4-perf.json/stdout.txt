['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
```
# handle-press-side: push down the handle from the side
# def handle_press_side(robot):
    # Steps:
    # 1. Put the gripper near the handle
    # 2. Move the gripper to the side of the handle
    # 3. Push down on the handle
    # First, put the gripper near the handle.
    if check("the robot's gripper is not near the handle"):
        robot.move_gripper("near the handle")
    # Once the gripper is near the handle, move it to the side of the handle.
    if check("the robot's gripper is not to the side of the handle"):
        robot.move_gripper("to the side of the handle")
    # Now that the gripper is to the side of the handle, push down on it.
    if check("the robot's gripper is to the side of the handle"):
        robot.move_gripper("pressing down on the handle")
{'handle-press-side': [("the robot's gripper is not near the handle", "the robot's gripper is near the handle"), ("the robot's gripper is not to the side of the handle", "the robot's gripper is near to the side of the handle"), ("the robot's gripper is to the side of the handle", "the robot's gripper is near pressing down on the handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the handle", 'push the gripper into the puck'), ("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is not left of the handle", 'push the gripper into the puck')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the handle", 'push the gripper into the puck'), ("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is not left of the handle", 'push the gripper into the puck')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not near the handle", 'push the gripper into the puck'), ("the robot's gripper is not left of the handle", 'push the gripper into the puck'), ("the robot's gripper is not left of the handle", 'push the gripper into the puck')], env_name='handle-press-side', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.7701177925779428
Success rates:
{
 "handle-press-side": 1.0
}
