['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


The final code should look like this:

```
# plate-slide-back: slide the plate back into the target location
# def plate_slide_back(robot):
    # Steps:
    #  1. Put gripper above plate
    #  2. Push the plate back into the target location
    # First, put the gripper above the plate so we can try to grab it
    if check("the robot's gripper is not above the plate"):
        robot.put("gripper above plate")
    # Once the gripper is above the plate, we can grab it and slide it back.
    if check("the robot's gripper is above the plate and the robot's gripper is open"):
        robot.drop("gripper around plate")
    # Once the gripper is around the plate, we can slide it to the target
    # location.
    if check("the robot's gripper is around the plate and the robot's gripper is closed"):
        robot.slide("plate back to target location")
```
{'plate-slide-back': [("the robot's gripper is not above the plate", 'put gripper above plate'), ("the robot's gripper is above the plate and the robot's gripper is open", 'drop gripper around plate'), ("the robot's gripper is around the plate and the robot's gripper is closed", 'slide plate back to target location')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put gripper above button'), ("the robot's gripper is above the plate and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the plate and the robot's gripper is closed", 'slide the puck to the goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put gripper above button'), ("the robot's gripper is above the plate and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the plate and the robot's gripper is closed", 'slide the puck to the goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.5
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the plate", 'put gripper above button'), ("the robot's gripper is above the plate and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is around the plate and the robot's gripper is closed", 'slide the puck to the goal')], env_name='plate-slide-back', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 2.3445897458437015
Success rates:
{
 "plate-slide-back": 0.5
}
