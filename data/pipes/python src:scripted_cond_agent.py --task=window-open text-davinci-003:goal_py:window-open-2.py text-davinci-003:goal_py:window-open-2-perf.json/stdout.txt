['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper right of the window handle
    #  2. Start pushing against the window handle to open the window
    #  3. Push the window open harder
    # If the gripper is not vertically aligned with the window handle, move the
    # gripper to the side of the window handle.
    if check("the robot's gripper is not vertically aligned with the window handle"):
        robot.move_gripper("vertically aligned with the window handle")
    # If the window handle is right of the robot's gripper, we should move the
    # gripper right of the window handle to start pushing.
    if check("the window handle is right of the robot's gripper"):
        robot.move_gripper("left of the window handle")
    # Once the robot's gripper has progressed past the window handle, push
    # harder to slide the window open.
    if check("the robot's gripper is in front of the window handle"):
        robot.move_gripper("left of the window handle")
{'window-open': [("the robot's gripper is not vertically aligned with the window handle", "the robot's gripper is vertically aligned with the window handle"), ("the window handle is right of the robot's gripper", "the robot's gripper is left of the window handle"), ("the robot's gripper is in front of the window handle", "the robot's gripper is left of the window handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the window handle", 'push the gripper into the puck'), ("the window handle is right of the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is in front of the window handle", 'push the gripper into the puck')], env_name='window-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the window handle", 'push the gripper into the puck'), ("the window handle is right of the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is in front of the window handle", 'push the gripper into the puck')], env_name='window-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not vertically aligned with the window handle", 'push the gripper into the puck'), ("the window handle is right of the robot's gripper", 'push the gripper into the puck'), ("the robot's gripper is in front of the window handle", 'push the gripper into the puck')], env_name='window-open', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.6394189429569972
Success rates:
{
 "window-open": 0.0
}
