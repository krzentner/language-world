['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md
# handle-press: push down the handle
# def handle_press(robot):
    # Steps:
    #  1. Move gripper above the handle
    #  2. Drop gripper around the handle
    #  3. Press the handle down
    # Begin by moving the gripper above the handle.
    if check("the robot's gripper is not above the handle"):
        robot.move_gripper("above the handle")
    # If the gripper is not around the handle, position it so it can grasp the handle.
    if check("the robot's gripper is not around the handle and the robot's gripper is open"):
        robot.move_gripper("near the handle", close_gripper=True)
    # If the gripper is not pressing down on the handle, move it down to activate the handle.
    if check("the robot's gripper is around the handle and the handle is not pressed down"):
        robot.move_gripper("near the top of the handle")
{'handle-press': [("the robot's gripper is not above the handle", "the robot's gripper is above the handle"), ("the robot's gripper is not around the handle and the robot's gripper is open", "the robot's gripper is near the handle and the robot's gripper is closed"), ("the robot's gripper is around the handle and the handle is not pressed down", "the robot's gripper is near the top of the handle")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put the gripper above the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle and the handle is not behind the robot's gripper", 'push the gripper into the puck')], env_name='handle-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put the gripper above the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle and the handle is not behind the robot's gripper", 'push the gripper into the puck')], env_name='handle-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 1.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the handle", 'put the gripper above the puck'), ("the robot's gripper is not around the handle and the robot's gripper is open", 'push the gripper into the puck'), ("the robot's gripper is around the handle and the handle is not behind the robot's gripper", 'push the gripper into the puck')], env_name='handle-press', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 5.239493335297369
Success rates:
{
 "handle-press": 1.0
}
