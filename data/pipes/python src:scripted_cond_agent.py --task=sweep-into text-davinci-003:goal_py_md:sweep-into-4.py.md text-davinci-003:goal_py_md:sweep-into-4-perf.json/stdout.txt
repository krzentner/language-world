['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py.md


Then, complete the program:

```
# sweep-into: grab the cube and move it to the target location
# def sweep_into(robot):
    # Steps:
    #  1. Move the gripper in an arc, from above the cube to the target location
    #  2. Close the gripper around the cube
    #  3. Move to the target location with the cube in the gripper
    # First, move the gripper in a sweeping arc, starting above the cube and
    # ending above the target location.
    if check("the robot's gripper is not in an arc, from above the cube to the target location"):
        robot.move_gripper("in an arc, from above the cube to the target location")
    # Once the gripper is above the cube, close it around the cube.
    if check("the robot's gripper is near the cube"):
        robot.move_gripper("above the cube", close_gripper=True)
    # If the gripper is closed around the cube, we can move to the target location.
    if check("the robot's gripper is closed around the cube"):
        robot.move_gripper("above the target location")
```
{'sweep-into': [("the robot's gripper is not in an arc, from above the cube to the target location", "the robot's gripper is in an arc, from above the cube to the target location"), ("the robot's gripper is near the cube", "the robot's gripper is above the cube and the robot's gripper is closed"), ("the robot's gripper is closed around the cube", "the robot's gripper is above the target location")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the target location", 'put the gripper above the puck'), ("the robot's gripper is near the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube", 'put the gripper above the puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the target location", 'put the gripper above the puck'), ("the robot's gripper is near the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube", 'put the gripper above the puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not in front of the target location", 'put the gripper above the puck'), ("the robot's gripper is near the cube", 'put the gripper above the puck'), ("the robot's gripper is not around the cube", 'put the gripper above the puck')], env_name='sweep-into', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.2050052030979164
Success rates:
{
 "sweep-into": 0.0
}
