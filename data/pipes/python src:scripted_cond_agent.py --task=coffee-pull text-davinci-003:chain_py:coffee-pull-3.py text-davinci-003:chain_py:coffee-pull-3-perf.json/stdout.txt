['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above mug
    #  2. Drop gripper around mug
    #  3. Close gripper around mug
    #  4. Pull mug to goal
    # First, put the gripper above the mug, so that we don't bump it while
    # trying to grab it.
    if check("the robot's gripper is not above mug"):
        robot.put("gripper above mug")
    # If the gripper isn't around the mug, put it around the mug.
    if check("the robot's gripper is not around mug and the robot's gripper is open"):
        robot.drop("gripper around mug")
    # If the gripper is near the mug and open, maybe we can grab it by closing
    # the gripper.
    if check("the robot's gripper is near mug and the robot's gripper is open"):
        robot.close("gripper around mug")
    # We closed the gripper, and the mug is still near the gripper, so maybe we
    # grabbed it.
    # Try to pull the mug to the goal.
    # If we didn't grab it, we'll just go back to an earlier step.
    if check("the robot's gripper is above mug and the robot's gripper is closed"):
        robot.pull("mug to goal")
{'coffee-pull': [("the robot's gripper is not above mug", 'put gripper above mug'), ("the robot's gripper is not around mug and the robot's gripper is open", 'drop gripper around mug'), ("the robot's gripper is near mug and the robot's gripper is open", 'close gripper around mug'), ("the robot's gripper is above mug and the robot's gripper is closed", 'pull mug to goal')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put gripper above button'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'place puck at goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put gripper above button'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'place puck at goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the mug", 'put gripper above button'), ("the robot's gripper is not around the mug and the robot's gripper is open", 'drop gripper around puck'), ("the robot's gripper is near the mug and the robot's gripper is open", 'close gripper around puck'), ("the robot's gripper is above the mug and the robot's gripper is closed", 'place puck at goal')], env_name='coffee-pull', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.16658406450311028
Success rates:
{
 "coffee-pull": 0.0
}
