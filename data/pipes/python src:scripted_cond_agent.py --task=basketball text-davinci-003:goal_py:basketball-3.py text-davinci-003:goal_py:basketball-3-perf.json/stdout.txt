['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    # Steps:
    #  1. Put gripper above the basketball
    #  2. Drop gripper around basketball
    #  3. Throw the basketball into the hoop
    # First, put the gripper above the basketball, so that we don't bump it while
    # trying to grab it.
    if check("the robot's gripper is not above basketball"):
        robot.move_gripper("above the basketball")
    # If the gripper isn't around the basketball, put it around the basketball.
    if check("the robot's gripper is not around basketball"):
        robot.move_gripper("near the basketball", close_gripper=True)
    # Once the gripper is around the basketball, just throw it into the hoop.
    if check("the robot's gripper is around basketball"):
        robot.move_gripper("above the hoop")
{'basketball': [("the robot's gripper is not above basketball", "the robot's gripper is above the basketball"), ("the robot's gripper is not around basketball", "the robot's gripper is near the basketball and the robot's gripper is closed"), ("the robot's gripper is around basketball", "the robot's gripper is above the hoop")]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball", 'push the gripper into the puck'), ("the robot's gripper is around the ball", 'put the gripper above the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball", 'push the gripper into the puck'), ("the robot's gripper is around the ball", 'put the gripper above the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the ball", 'put the gripper above the puck'), ("the robot's gripper is not around the ball", 'push the gripper into the puck'), ("the robot's gripper is around the ball", 'put the gripper above the puck')], env_name='basketball', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.10515924335087401
Success rates:
{
 "basketball": 0.0
}
