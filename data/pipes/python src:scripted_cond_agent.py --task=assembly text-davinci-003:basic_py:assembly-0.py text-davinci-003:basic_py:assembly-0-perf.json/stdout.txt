['assembly', 'basketball', 'bin-picking', 'box-close', 'button-press-topdown', 'button-press-topdown-wall', 'button-press', 'button-press-wall', 'coffee-button', 'coffee-pull', 'coffee-push', 'dial-turn', 'disassemble', 'door-close', 'door-lock', 'door-open', 'door-unlock', 'hand-insert', 'drawer-close', 'drawer-open', 'faucet-open', 'faucet-close', 'hammer', 'handle-press-side', 'handle-press', 'handle-pull-side', 'handle-pull', 'lever-pull', 'peg-insert-side', 'pick-place-wall', 'pick-out-of-hole', 'reach', 'push-back', 'push', 'pick-place', 'plate-slide', 'plate-slide-side', 'plate-slide-back', 'plate-slide-back-side', 'peg-unplug-side', 'soccer', 'stick-push', 'stick-pull', 'push-wall', 'reach-wall', 'shelf-place', 'sweep-into', 'sweep', 'window-open', 'window-close']
['reach', 'push', 'pick-place', 'door-open', 'drawer-open', 'drawer-close', 'button-press-topdown', 'peg-insert-side', 'window-open', 'window-close']
py

    if check("the robot's gripper is not above the peg"):
        robot.place("gripper above peg")
    if check("the robot's gripper is above the peg and the gripper is not around the peg"):
        robot.drop("gripper around peg")
    if check("the robot's gripper is around the peg and the gripper is not tightened"):
        robot.tighten("gripper around peg")

# unscrew: unscrew the bolt
# def unscrew(robot):
    if check("the robot's gripper is not around the bolt head"):
        robot.put("gripper around the bolt head")
    if check("the robot's gripper is around the bolt head"):
        robot.unscrew("the bolt")
{'unscrew': [("the robot's gripper is not around the bolt head", 'put gripper around the bolt head'), ("the robot's gripper is around the bolt head", 'unscrew the bolt')], 'assembly': [("the robot's gripper is not above the peg", 'place gripper above peg'), ("the robot's gripper is above the peg and the gripper is not around the peg", 'drop gripper around peg'), ("the robot's gripper is around the peg and the gripper is not tightened", 'tighten gripper around peg')]}
Evaluating ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the peg", 'place gripper above puck'), ("the robot's gripper is above the peg and the robot's gripper is not around the peg", 'drop gripper around puck'), ("the robot's gripper is around the peg and the robot's gripper is not right of the peg", 'put gripper around door handle')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None)
Success rate for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the peg", 'place gripper above puck'), ("the robot's gripper is above the peg and the robot's gripper is not around the peg", 'drop gripper around puck'), ("the robot's gripper is around the peg and the robot's gripper is not right of the peg", 'put gripper around door handle')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.0
Avg timestep reward for ScriptedCondAgent(cond_to_scripted_skill=[("the robot's gripper is not above the peg", 'place gripper above puck'), ("the robot's gripper is above the peg and the robot's gripper is not around the peg", 'drop gripper around puck'), ("the robot's gripper is around the peg and the robot's gripper is not right of the peg", 'put gripper around door handle')], env_name='assembly', scripted_skill_choice_prob=1.0, skill_mix_base_weight=None) : 0.893655505231697
Success rates:
{
 "assembly": 0.0
}
