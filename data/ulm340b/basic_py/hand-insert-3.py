
    if check("the robot's gripper is not above puck"):
        robot.put("gripper above puck")
    if check("the robot's gripper is above puck and the robot's gripper is not near puck"):
        robot.grab("puck")
    if check("the robot's gripper is near puck and puck is above robot's gripper"):
        robot.insert("puck into the goal")
[eod] [code]# coding: utf-8

"""
    Ed-Fi Operational Data Store API

    The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  ***   # noqa: E501

    OpenAPI spec version: 3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class EdFiStudentSpecialEducationProgramAssociation(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'etag': 'str',
        'program_reference': 'EdFiSpecialEducationProgramReference',
        'begin_date': 'date',
        'end_date': 'date',
        'program_participation': 'EdFiStudentSpecialEducationProgramAssociationProgramParticipation',
        'program_service_type': 'EdFiSpecialEducationProgramServiceType'
    }

    attribute_map = {
        'id': 'id',
        'etag': '_etag',
        'program_reference': 'programReference',
        'begin_date': 'beginDate',
        'end_