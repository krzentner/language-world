{
 "data/basic_py/assembly.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# assembly: put the wrench around the peg\ndef assembly(robot):",
 "data/chain_py/assembly.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# assembly: put the wrench around the peg\ndef assembly(robot):",
 "data/goal_py/assembly.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# assembly: put the wrench around the peg\ndef assembly(robot):",
 "data/basic_py_md/assembly.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n```\n\nPlease write a program to perform the last task, `assembly`.\nBegin with the text:\n\n```\n# assembly: put the wrench around the peg\ndef assembly(robot):\n```",
 "data/chain_py_md/assembly.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `assembly`.\nBegin with the text:\n\n```\n# assembly: put the wrench around the peg\ndef assembly(robot):\n```",
 "data/goal_py_md/assembly.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `assembly`.\nBegin with the text:\n\n```\n# assembly: put the wrench around the peg\ndef assembly(robot):\n```",
 "data/basic_md/assembly.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `assembly` requires the robot to put the wrench around the peg.\nTo put the wrench around the peg reliably, what steps the robot should perform?",
 "data/chain_md/assembly.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `assembly` requires the robot to put the wrench around the peg.\nTo put the wrench around the peg reliably, what steps the robot should perform?",
 "data/goal_md/assembly.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `assembly` requires the robot to put the wrench around the peg.\nTo put the wrench around the peg reliably, what steps the robot should perform?",
 "data/basic_py/basketball.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# basketball: put the ball into into the hoop\ndef basketball(robot):",
 "data/chain_py/basketball.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# basketball: put the ball into into the hoop\ndef basketball(robot):",
 "data/goal_py/basketball.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# basketball: put the ball into into the hoop\ndef basketball(robot):",
 "data/basic_py_md/basketball.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n```\n\nPlease write a program to perform the last task, `basketball`.\nBegin with the text:\n\n```\n# basketball: put the ball into into the hoop\ndef basketball(robot):\n```",
 "data/chain_py_md/basketball.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `basketball`.\nBegin with the text:\n\n```\n# basketball: put the ball into into the hoop\ndef basketball(robot):\n```",
 "data/goal_py_md/basketball.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n```\n\nPlease write a program to perform the last task, `basketball`.\nBegin with the text:\n\n```\n# basketball: put the ball into into the hoop\ndef basketball(robot):\n```",
 "data/basic_md/basketball.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `basketball` requires the robot to put the ball into into the hoop.\nTo put the ball into into the hoop reliably, what steps the robot should perform?",
 "data/chain_md/basketball.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `basketball` requires the robot to put the ball into into the hoop.\nTo put the ball into into the hoop reliably, what steps the robot should perform?",
 "data/goal_md/basketball.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `basketball` requires the robot to put the ball into into the hoop.\nTo put the ball into into the hoop reliably, what steps the robot should perform?",
 "data/basic_py/bin-picking.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# bin-picking: pick up the cube and place it in the target bin\ndef bin_picking(robot):",
 "data/chain_py/bin-picking.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# bin-picking: pick up the cube and place it in the target bin\ndef bin_picking(robot):",
 "data/goal_py/bin-picking.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# bin-picking: pick up the cube and place it in the target bin\ndef bin_picking(robot):",
 "data/basic_py_md/bin-picking.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `bin-picking`.\nBegin with the text:\n\n```\n# bin-picking: pick up the cube and place it in the target bin\ndef bin_picking(robot):\n```",
 "data/chain_py_md/bin-picking.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `bin-picking`.\nBegin with the text:\n\n```\n# bin-picking: pick up the cube and place it in the target bin\ndef bin_picking(robot):\n```",
 "data/goal_py_md/bin-picking.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `bin-picking`.\nBegin with the text:\n\n```\n# bin-picking: pick up the cube and place it in the target bin\ndef bin_picking(robot):\n```",
 "data/basic_md/bin-picking.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `bin-picking` requires the robot to pick up the cube and place it in the target bin.\nTo pick up the cube and place it in the target bin reliably, what steps the robot should perform?",
 "data/chain_md/bin-picking.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `bin-picking` requires the robot to pick up the cube and place it in the target bin.\nTo pick up the cube and place it in the target bin reliably, what steps the robot should perform?",
 "data/goal_md/bin-picking.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `bin-picking` requires the robot to pick up the cube and place it in the target bin.\nTo pick up the cube and place it in the target bin reliably, what steps the robot should perform?",
 "data/basic_py/box-close.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# box-close: pick up the box lid and place it on the box\ndef box_close(robot):",
 "data/chain_py/box-close.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# box-close: pick up the box lid and place it on the box\ndef box_close(robot):",
 "data/goal_py/box-close.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# box-close: pick up the box lid and place it on the box\ndef box_close(robot):",
 "data/basic_py_md/box-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n```\n\nPlease write a program to perform the last task, `box-close`.\nBegin with the text:\n\n```\n# box-close: pick up the box lid and place it on the box\ndef box_close(robot):\n```",
 "data/chain_py_md/box-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `box-close`.\nBegin with the text:\n\n```\n# box-close: pick up the box lid and place it on the box\ndef box_close(robot):\n```",
 "data/goal_py_md/box-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n```\n\nPlease write a program to perform the last task, `box-close`.\nBegin with the text:\n\n```\n# box-close: pick up the box lid and place it on the box\ndef box_close(robot):\n```",
 "data/basic_md/box-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `box-close` requires the robot to pick up the box lid and place it on the box.\nTo pick up the box lid and place it on the box reliably, what steps the robot should perform?",
 "data/chain_md/box-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `box-close` requires the robot to pick up the box lid and place it on the box.\nTo pick up the box lid and place it on the box reliably, what steps the robot should perform?",
 "data/goal_md/box-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `box-close` requires the robot to pick up the box lid and place it on the box.\nTo pick up the box lid and place it on the box reliably, what steps the robot should perform?",
 "data/basic_py/button-press-topdown.py": "# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):",
 "data/chain_py/button-press-topdown.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):",
 "data/goal_py/button-press-topdown.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):",
 "data/basic_py_md/button-press-topdown.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n```\n\nPlease write a program to perform the last task, `button-press-topdown`.\nBegin with the text:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n```",
 "data/chain_py_md/button-press-topdown.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n```\n\nPlease write a program to perform the last task, `button-press-topdown`.\nBegin with the text:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n```",
 "data/goal_py_md/button-press-topdown.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n```\n\nPlease write a program to perform the last task, `button-press-topdown`.\nBegin with the text:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n```",
 "data/basic_md/button-press-topdown.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, what steps the robot should perform?",
 "data/chain_md/button-press-topdown.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, what steps the robot should perform?",
 "data/goal_md/button-press-topdown.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, what steps the robot should perform?",
 "data/basic_py/button-press-topdown-wall.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# button-press-topdown-wall: push the button down from above with a short wall in the way\ndef button_press_topdown_wall(robot):",
 "data/chain_py/button-press-topdown-wall.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown-wall: push the button down from above with a short wall in the way\ndef button_press_topdown_wall(robot):",
 "data/goal_py/button-press-topdown-wall.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown-wall: push the button down from above with a short wall in the way\ndef button_press_topdown_wall(robot):",
 "data/basic_py_md/button-press-topdown-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `button-press-topdown-wall`.\nBegin with the text:\n\n```\n# button-press-topdown-wall: push the button down from above with a short wall in the way\ndef button_press_topdown_wall(robot):\n```",
 "data/chain_py_md/button-press-topdown-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n```\n\nPlease write a program to perform the last task, `button-press-topdown-wall`.\nBegin with the text:\n\n```\n# button-press-topdown-wall: push the button down from above with a short wall in the way\ndef button_press_topdown_wall(robot):\n```",
 "data/goal_py_md/button-press-topdown-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `button-press-topdown-wall`.\nBegin with the text:\n\n```\n# button-press-topdown-wall: push the button down from above with a short wall in the way\ndef button_press_topdown_wall(robot):\n```",
 "data/basic_md/button-press-topdown-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `button-press-topdown-wall` requires the robot to push the button down from above with a short wall in the way.\nTo push the button down from above with a short wall in the way reliably, what steps the robot should perform?",
 "data/chain_md/button-press-topdown-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown-wall` requires the robot to push the button down from above with a short wall in the way.\nTo push the button down from above with a short wall in the way reliably, what steps the robot should perform?",
 "data/goal_md/button-press-topdown-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `button-press-topdown-wall` requires the robot to push the button down from above with a short wall in the way.\nTo push the button down from above with a short wall in the way reliably, what steps the robot should perform?",
 "data/basic_py/button-press.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press: push the button from the front\ndef button_press(robot):",
 "data/chain_py/button-press.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press: push the button from the front\ndef button_press(robot):",
 "data/goal_py/button-press.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press: push the button from the front\ndef button_press(robot):",
 "data/basic_py_md/button-press.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `button-press`.\nBegin with the text:\n\n```\n# button-press: push the button from the front\ndef button_press(robot):\n```",
 "data/chain_py_md/button-press.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `button-press`.\nBegin with the text:\n\n```\n# button-press: push the button from the front\ndef button_press(robot):\n```",
 "data/goal_py_md/button-press.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `button-press`.\nBegin with the text:\n\n```\n# button-press: push the button from the front\ndef button_press(robot):\n```",
 "data/basic_md/button-press.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press` requires the robot to push the button from the front.\nTo push the button from the front reliably, what steps the robot should perform?",
 "data/chain_md/button-press.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press` requires the robot to push the button from the front.\nTo push the button from the front reliably, what steps the robot should perform?",
 "data/goal_md/button-press.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `button-press` requires the robot to push the button from the front.\nTo push the button from the front reliably, what steps the robot should perform?",
 "data/basic_py/button-press-wall.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# button-press-wall: push the button from the front with a short wall in the way\ndef button_press_wall(robot):",
 "data/chain_py/button-press-wall.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-wall: push the button from the front with a short wall in the way\ndef button_press_wall(robot):",
 "data/goal_py/button-press-wall.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-wall: push the button from the front with a short wall in the way\ndef button_press_wall(robot):",
 "data/basic_py_md/button-press-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `button-press-wall`.\nBegin with the text:\n\n```\n# button-press-wall: push the button from the front with a short wall in the way\ndef button_press_wall(robot):\n```",
 "data/chain_py_md/button-press-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `button-press-wall`.\nBegin with the text:\n\n```\n# button-press-wall: push the button from the front with a short wall in the way\ndef button_press_wall(robot):\n```",
 "data/goal_py_md/button-press-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n```\n\nPlease write a program to perform the last task, `button-press-wall`.\nBegin with the text:\n\n```\n# button-press-wall: push the button from the front with a short wall in the way\ndef button_press_wall(robot):\n```",
 "data/basic_md/button-press-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `button-press-wall` requires the robot to push the button from the front with a short wall in the way.\nTo push the button from the front with a short wall in the way reliably, what steps the robot should perform?",
 "data/chain_md/button-press-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-wall` requires the robot to push the button from the front with a short wall in the way.\nTo push the button from the front with a short wall in the way reliably, what steps the robot should perform?",
 "data/goal_md/button-press-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `button-press-wall` requires the robot to push the button from the front with a short wall in the way.\nTo push the button from the front with a short wall in the way reliably, what steps the robot should perform?",
 "data/basic_py/coffee-button.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# coffee-button: push the button on the coffee machine\ndef coffee_button(robot):",
 "data/chain_py/coffee-button.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# coffee-button: push the button on the coffee machine\ndef coffee_button(robot):",
 "data/goal_py/coffee-button.py": "# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# coffee-button: push the button on the coffee machine\ndef coffee_button(robot):",
 "data/basic_py_md/coffee-button.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `coffee-button`.\nBegin with the text:\n\n```\n# coffee-button: push the button on the coffee machine\ndef coffee_button(robot):\n```",
 "data/chain_py_md/coffee-button.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `coffee-button`.\nBegin with the text:\n\n```\n# coffee-button: push the button on the coffee machine\ndef coffee_button(robot):\n```",
 "data/goal_py_md/coffee-button.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `coffee-button`.\nBegin with the text:\n\n```\n# coffee-button: push the button on the coffee machine\ndef coffee_button(robot):\n```",
 "data/basic_md/coffee-button.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `coffee-button` requires the robot to push the button on the coffee machine.\nTo push the button on the coffee machine reliably, what steps the robot should perform?",
 "data/chain_md/coffee-button.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `coffee-button` requires the robot to push the button on the coffee machine.\nTo push the button on the coffee machine reliably, what steps the robot should perform?",
 "data/goal_md/coffee-button.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `coffee-button` requires the robot to push the button on the coffee machine.\nTo push the button on the coffee machine reliably, what steps the robot should perform?",
 "data/basic_py/coffee-pull.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# coffee-pull: grab the mug and pull it to the target location\ndef coffee_pull(robot):",
 "data/chain_py/coffee-pull.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# coffee-pull: grab the mug and pull it to the target location\ndef coffee_pull(robot):",
 "data/goal_py/coffee-pull.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# coffee-pull: grab the mug and pull it to the target location\ndef coffee_pull(robot):",
 "data/basic_py_md/coffee-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `coffee-pull`.\nBegin with the text:\n\n```\n# coffee-pull: grab the mug and pull it to the target location\ndef coffee_pull(robot):\n```",
 "data/chain_py_md/coffee-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `coffee-pull`.\nBegin with the text:\n\n```\n# coffee-pull: grab the mug and pull it to the target location\ndef coffee_pull(robot):\n```",
 "data/goal_py_md/coffee-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `coffee-pull`.\nBegin with the text:\n\n```\n# coffee-pull: grab the mug and pull it to the target location\ndef coffee_pull(robot):\n```",
 "data/basic_md/coffee-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `coffee-pull` requires the robot to grab the mug and pull it to the target location.\nTo grab the mug and pull it to the target location reliably, what steps the robot should perform?",
 "data/chain_md/coffee-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `coffee-pull` requires the robot to grab the mug and pull it to the target location.\nTo grab the mug and pull it to the target location reliably, what steps the robot should perform?",
 "data/goal_md/coffee-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `coffee-pull` requires the robot to grab the mug and pull it to the target location.\nTo grab the mug and pull it to the target location reliably, what steps the robot should perform?",
 "data/basic_py/coffee-push.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# coffee-push: grab the mug and move it to the target location\ndef coffee_push(robot):",
 "data/chain_py/coffee-push.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# coffee-push: grab the mug and move it to the target location\ndef coffee_push(robot):",
 "data/goal_py/coffee-push.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# coffee-push: grab the mug and move it to the target location\ndef coffee_push(robot):",
 "data/basic_py_md/coffee-push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `coffee-push`.\nBegin with the text:\n\n```\n# coffee-push: grab the mug and move it to the target location\ndef coffee_push(robot):\n```",
 "data/chain_py_md/coffee-push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `coffee-push`.\nBegin with the text:\n\n```\n# coffee-push: grab the mug and move it to the target location\ndef coffee_push(robot):\n```",
 "data/goal_py_md/coffee-push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `coffee-push`.\nBegin with the text:\n\n```\n# coffee-push: grab the mug and move it to the target location\ndef coffee_push(robot):\n```",
 "data/basic_md/coffee-push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `coffee-push` requires the robot to grab the mug and move it to the target location.\nTo grab the mug and move it to the target location reliably, what steps the robot should perform?",
 "data/chain_md/coffee-push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `coffee-push` requires the robot to grab the mug and move it to the target location.\nTo grab the mug and move it to the target location reliably, what steps the robot should perform?",
 "data/goal_md/coffee-push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `coffee-push` requires the robot to grab the mug and move it to the target location.\nTo grab the mug and move it to the target location reliably, what steps the robot should perform?",
 "data/basic_py/dial-turn.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# dial-turn: turn the dial\ndef dial_turn(robot):",
 "data/chain_py/dial-turn.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# dial-turn: turn the dial\ndef dial_turn(robot):",
 "data/goal_py/dial-turn.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# dial-turn: turn the dial\ndef dial_turn(robot):",
 "data/basic_py_md/dial-turn.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n```\n\nPlease write a program to perform the last task, `dial-turn`.\nBegin with the text:\n\n```\n# dial-turn: turn the dial\ndef dial_turn(robot):\n```",
 "data/chain_py_md/dial-turn.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `dial-turn`.\nBegin with the text:\n\n```\n# dial-turn: turn the dial\ndef dial_turn(robot):\n```",
 "data/goal_py_md/dial-turn.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `dial-turn`.\nBegin with the text:\n\n```\n# dial-turn: turn the dial\ndef dial_turn(robot):\n```",
 "data/basic_md/dial-turn.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `dial-turn` requires the robot to turn the dial.\nTo turn the dial reliably, what steps the robot should perform?",
 "data/chain_md/dial-turn.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `dial-turn` requires the robot to turn the dial.\nTo turn the dial reliably, what steps the robot should perform?",
 "data/goal_md/dial-turn.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `dial-turn` requires the robot to turn the dial.\nTo turn the dial reliably, what steps the robot should perform?",
 "data/basic_py/disassemble.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# disassemble: pull the wrench off the peg\ndef disassemble(robot):",
 "data/chain_py/disassemble.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# disassemble: pull the wrench off the peg\ndef disassemble(robot):",
 "data/goal_py/disassemble.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# disassemble: pull the wrench off the peg\ndef disassemble(robot):",
 "data/basic_py_md/disassemble.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `disassemble`.\nBegin with the text:\n\n```\n# disassemble: pull the wrench off the peg\ndef disassemble(robot):\n```",
 "data/chain_py_md/disassemble.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `disassemble`.\nBegin with the text:\n\n```\n# disassemble: pull the wrench off the peg\ndef disassemble(robot):\n```",
 "data/goal_py_md/disassemble.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `disassemble`.\nBegin with the text:\n\n```\n# disassemble: pull the wrench off the peg\ndef disassemble(robot):\n```",
 "data/basic_md/disassemble.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `disassemble` requires the robot to pull the wrench off the peg.\nTo pull the wrench off the peg reliably, what steps the robot should perform?",
 "data/chain_md/disassemble.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `disassemble` requires the robot to pull the wrench off the peg.\nTo pull the wrench off the peg reliably, what steps the robot should perform?",
 "data/goal_md/disassemble.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `disassemble` requires the robot to pull the wrench off the peg.\nTo pull the wrench off the peg reliably, what steps the robot should perform?",
 "data/basic_py/door-close.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# door-close: push the door closed to the target location\ndef door_close(robot):",
 "data/chain_py/door-close.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-close: push the door closed to the target location\ndef door_close(robot):",
 "data/goal_py/door-close.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# door-close: push the door closed to the target location\ndef door_close(robot):",
 "data/basic_py_md/door-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `door-close`.\nBegin with the text:\n\n```\n# door-close: push the door closed to the target location\ndef door_close(robot):\n```",
 "data/chain_py_md/door-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `door-close`.\nBegin with the text:\n\n```\n# door-close: push the door closed to the target location\ndef door_close(robot):\n```",
 "data/goal_py_md/door-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `door-close`.\nBegin with the text:\n\n```\n# door-close: push the door closed to the target location\ndef door_close(robot):\n```",
 "data/basic_md/door-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-close` requires the robot to push the door closed to the target location.\nTo push the door closed to the target location reliably, what steps the robot should perform?",
 "data/chain_md/door-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-close` requires the robot to push the door closed to the target location.\nTo push the door closed to the target location reliably, what steps the robot should perform?",
 "data/goal_md/door-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `door-close` requires the robot to push the door closed to the target location.\nTo push the door closed to the target location reliably, what steps the robot should perform?",
 "data/basic_py/door-lock.py": "# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-lock: turn the dial on the door\ndef door_lock(robot):",
 "data/chain_py/door-lock.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# door-lock: turn the dial on the door\ndef door_lock(robot):",
 "data/goal_py/door-lock.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# door-lock: turn the dial on the door\ndef door_lock(robot):",
 "data/basic_py_md/door-lock.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `door-lock`.\nBegin with the text:\n\n```\n# door-lock: turn the dial on the door\ndef door_lock(robot):\n```",
 "data/chain_py_md/door-lock.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `door-lock`.\nBegin with the text:\n\n```\n# door-lock: turn the dial on the door\ndef door_lock(robot):\n```",
 "data/goal_py_md/door-lock.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `door-lock`.\nBegin with the text:\n\n```\n# door-lock: turn the dial on the door\ndef door_lock(robot):\n```",
 "data/basic_md/door-lock.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-lock` requires the robot to turn the dial on the door.\nTo turn the dial on the door reliably, what steps the robot should perform?",
 "data/chain_md/door-lock.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `door-lock` requires the robot to turn the dial on the door.\nTo turn the dial on the door reliably, what steps the robot should perform?",
 "data/goal_md/door-lock.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `door-lock` requires the robot to turn the dial on the door.\nTo turn the dial on the door reliably, what steps the robot should perform?",
 "data/basic_py/door-open.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# door-open: pull the door open\ndef door_open(robot):",
 "data/chain_py/door-open.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# door-open: pull the door open\ndef door_open(robot):",
 "data/goal_py/door-open.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# door-open: pull the door open\ndef door_open(robot):",
 "data/basic_py_md/door-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n```\n\nPlease write a program to perform the last task, `door-open`.\nBegin with the text:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n```",
 "data/chain_py_md/door-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `door-open`.\nBegin with the text:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n```",
 "data/goal_py_md/door-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `door-open`.\nBegin with the text:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n```",
 "data/basic_md/door-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, what steps the robot should perform?",
 "data/chain_md/door-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, what steps the robot should perform?",
 "data/goal_md/door-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, what steps the robot should perform?",
 "data/basic_py/door-unlock.py": "# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-unlock: turn the dial on the door\ndef door_unlock(robot):",
 "data/chain_py/door-unlock.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# door-unlock: turn the dial on the door\ndef door_unlock(robot):",
 "data/goal_py/door-unlock.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# door-unlock: turn the dial on the door\ndef door_unlock(robot):",
 "data/basic_py_md/door-unlock.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `door-unlock`.\nBegin with the text:\n\n```\n# door-unlock: turn the dial on the door\ndef door_unlock(robot):\n```",
 "data/chain_py_md/door-unlock.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `door-unlock`.\nBegin with the text:\n\n```\n# door-unlock: turn the dial on the door\ndef door_unlock(robot):\n```",
 "data/goal_py_md/door-unlock.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `door-unlock`.\nBegin with the text:\n\n```\n# door-unlock: turn the dial on the door\ndef door_unlock(robot):\n```",
 "data/basic_md/door-unlock.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-unlock` requires the robot to turn the dial on the door.\nTo turn the dial on the door reliably, what steps the robot should perform?",
 "data/chain_md/door-unlock.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `door-unlock` requires the robot to turn the dial on the door.\nTo turn the dial on the door reliably, what steps the robot should perform?",
 "data/goal_md/door-unlock.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `door-unlock` requires the robot to turn the dial on the door.\nTo turn the dial on the door reliably, what steps the robot should perform?",
 "data/basic_py/hand-insert.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# hand-insert: pick up the puck and move it to the target location\ndef hand_insert(robot):",
 "data/chain_py/hand-insert.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# hand-insert: pick up the puck and move it to the target location\ndef hand_insert(robot):",
 "data/goal_py/hand-insert.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# hand-insert: pick up the puck and move it to the target location\ndef hand_insert(robot):",
 "data/basic_py_md/hand-insert.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `hand-insert`.\nBegin with the text:\n\n```\n# hand-insert: pick up the puck and move it to the target location\ndef hand_insert(robot):\n```",
 "data/chain_py_md/hand-insert.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `hand-insert`.\nBegin with the text:\n\n```\n# hand-insert: pick up the puck and move it to the target location\ndef hand_insert(robot):\n```",
 "data/goal_py_md/hand-insert.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `hand-insert`.\nBegin with the text:\n\n```\n# hand-insert: pick up the puck and move it to the target location\ndef hand_insert(robot):\n```",
 "data/basic_md/hand-insert.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `hand-insert` requires the robot to pick up the puck and move it to the target location.\nTo pick up the puck and move it to the target location reliably, what steps the robot should perform?",
 "data/chain_md/hand-insert.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `hand-insert` requires the robot to pick up the puck and move it to the target location.\nTo pick up the puck and move it to the target location reliably, what steps the robot should perform?",
 "data/goal_md/hand-insert.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `hand-insert` requires the robot to pick up the puck and move it to the target location.\nTo pick up the puck and move it to the target location reliably, what steps the robot should perform?",
 "data/basic_py/drawer-close.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):",
 "data/chain_py/drawer-close.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):",
 "data/goal_py/drawer-close.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):",
 "data/basic_py_md/drawer-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n```\n\nPlease write a program to perform the last task, `drawer-close`.\nBegin with the text:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n```",
 "data/chain_py_md/drawer-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `drawer-close`.\nBegin with the text:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n```",
 "data/goal_py_md/drawer-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `drawer-close`.\nBegin with the text:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n```",
 "data/basic_md/drawer-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, what steps the robot should perform?",
 "data/chain_md/drawer-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, what steps the robot should perform?",
 "data/goal_md/drawer-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, what steps the robot should perform?",
 "data/basic_py/drawer-open.py": "# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):",
 "data/chain_py/drawer-open.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):",
 "data/goal_py/drawer-open.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):",
 "data/basic_py_md/drawer-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n```\n\nPlease write a program to perform the last task, `drawer-open`.\nBegin with the text:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n```",
 "data/chain_py_md/drawer-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n```\n\nPlease write a program to perform the last task, `drawer-open`.\nBegin with the text:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n```",
 "data/goal_py_md/drawer-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n```\n\nPlease write a program to perform the last task, `drawer-open`.\nBegin with the text:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n```",
 "data/basic_md/drawer-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, what steps the robot should perform?",
 "data/chain_md/drawer-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, what steps the robot should perform?",
 "data/goal_md/drawer-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, what steps the robot should perform?",
 "data/basic_py/faucet-open.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):",
 "data/chain_py/faucet-open.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):",
 "data/goal_py/faucet-open.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):",
 "data/basic_py_md/faucet-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `faucet-open`.\nBegin with the text:\n\n```\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n```",
 "data/chain_py_md/faucet-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `faucet-open`.\nBegin with the text:\n\n```\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n```",
 "data/goal_py_md/faucet-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n```\n\nPlease write a program to perform the last task, `faucet-open`.\nBegin with the text:\n\n```\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n```",
 "data/basic_md/faucet-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `faucet-open` requires the robot to turn the faucet left.\nTo turn the faucet left reliably, what steps the robot should perform?",
 "data/chain_md/faucet-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `faucet-open` requires the robot to turn the faucet left.\nTo turn the faucet left reliably, what steps the robot should perform?",
 "data/goal_md/faucet-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `faucet-open` requires the robot to turn the faucet left.\nTo turn the faucet left reliably, what steps the robot should perform?",
 "data/basic_py/faucet-close.py": "# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):",
 "data/chain_py/faucet-close.py": "# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):",
 "data/goal_py/faucet-close.py": "# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):",
 "data/basic_py_md/faucet-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `faucet-close`.\nBegin with the text:\n\n```\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n```",
 "data/chain_py_md/faucet-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `faucet-close`.\nBegin with the text:\n\n```\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n```",
 "data/goal_py_md/faucet-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n```\n\nPlease write a program to perform the last task, `faucet-close`.\nBegin with the text:\n\n```\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n```",
 "data/basic_md/faucet-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `faucet-close` requires the robot to turn the faucet right.\nTo turn the faucet right reliably, what steps the robot should perform?",
 "data/chain_md/faucet-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `faucet-close` requires the robot to turn the faucet right.\nTo turn the faucet right reliably, what steps the robot should perform?",
 "data/goal_md/faucet-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `faucet-close` requires the robot to turn the faucet right.\nTo turn the faucet right reliably, what steps the robot should perform?",
 "data/basic_py/hammer.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# hammer: hit the nail with the hammer\ndef hammer(robot):",
 "data/chain_py/hammer.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# hammer: hit the nail with the hammer\ndef hammer(robot):",
 "data/goal_py/hammer.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# hammer: hit the nail with the hammer\ndef hammer(robot):",
 "data/basic_py_md/hammer.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `hammer`.\nBegin with the text:\n\n```\n# hammer: hit the nail with the hammer\ndef hammer(robot):\n```",
 "data/chain_py_md/hammer.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `hammer`.\nBegin with the text:\n\n```\n# hammer: hit the nail with the hammer\ndef hammer(robot):\n```",
 "data/goal_py_md/hammer.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `hammer`.\nBegin with the text:\n\n```\n# hammer: hit the nail with the hammer\ndef hammer(robot):\n```",
 "data/basic_md/hammer.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `hammer` requires the robot to hit the nail with the hammer.\nTo hit the nail with the hammer reliably, what steps the robot should perform?",
 "data/chain_md/hammer.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `hammer` requires the robot to hit the nail with the hammer.\nTo hit the nail with the hammer reliably, what steps the robot should perform?",
 "data/goal_md/hammer.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `hammer` requires the robot to hit the nail with the hammer.\nTo hit the nail with the hammer reliably, what steps the robot should perform?",
 "data/basic_py/handle-press-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# handle-press-side: push down the handle from the side\ndef handle_press_side(robot):",
 "data/chain_py/handle-press-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# handle-press-side: push down the handle from the side\ndef handle_press_side(robot):",
 "data/goal_py/handle-press-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# handle-press-side: push down the handle from the side\ndef handle_press_side(robot):",
 "data/basic_py_md/handle-press-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `handle-press-side`.\nBegin with the text:\n\n```\n# handle-press-side: push down the handle from the side\ndef handle_press_side(robot):\n```",
 "data/chain_py_md/handle-press-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `handle-press-side`.\nBegin with the text:\n\n```\n# handle-press-side: push down the handle from the side\ndef handle_press_side(robot):\n```",
 "data/goal_py_md/handle-press-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `handle-press-side`.\nBegin with the text:\n\n```\n# handle-press-side: push down the handle from the side\ndef handle_press_side(robot):\n```",
 "data/basic_md/handle-press-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `handle-press-side` requires the robot to push down the handle from the side.\nTo push down the handle from the side reliably, what steps the robot should perform?",
 "data/chain_md/handle-press-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `handle-press-side` requires the robot to push down the handle from the side.\nTo push down the handle from the side reliably, what steps the robot should perform?",
 "data/goal_md/handle-press-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `handle-press-side` requires the robot to push down the handle from the side.\nTo push down the handle from the side reliably, what steps the robot should perform?",
 "data/basic_py/handle-press.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# handle-press: push down the handle\ndef handle_press(robot):",
 "data/chain_py/handle-press.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# handle-press: push down the handle\ndef handle_press(robot):",
 "data/goal_py/handle-press.py": "# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# handle-press: push down the handle\ndef handle_press(robot):",
 "data/basic_py_md/handle-press.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n```\n\nPlease write a program to perform the last task, `handle-press`.\nBegin with the text:\n\n```\n# handle-press: push down the handle\ndef handle_press(robot):\n```",
 "data/chain_py_md/handle-press.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `handle-press`.\nBegin with the text:\n\n```\n# handle-press: push down the handle\ndef handle_press(robot):\n```",
 "data/goal_py_md/handle-press.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `handle-press`.\nBegin with the text:\n\n```\n# handle-press: push down the handle\ndef handle_press(robot):\n```",
 "data/basic_md/handle-press.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `handle-press` requires the robot to push down the handle.\nTo push down the handle reliably, what steps the robot should perform?",
 "data/chain_md/handle-press.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `handle-press` requires the robot to push down the handle.\nTo push down the handle reliably, what steps the robot should perform?",
 "data/goal_md/handle-press.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `handle-press` requires the robot to push down the handle.\nTo push down the handle reliably, what steps the robot should perform?",
 "data/basic_py/handle-pull-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# handle-pull-side: pull up the handle from the side\ndef handle_pull_side(robot):",
 "data/chain_py/handle-pull-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# handle-pull-side: pull up the handle from the side\ndef handle_pull_side(robot):",
 "data/goal_py/handle-pull-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# handle-pull-side: pull up the handle from the side\ndef handle_pull_side(robot):",
 "data/basic_py_md/handle-pull-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `handle-pull-side`.\nBegin with the text:\n\n```\n# handle-pull-side: pull up the handle from the side\ndef handle_pull_side(robot):\n```",
 "data/chain_py_md/handle-pull-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `handle-pull-side`.\nBegin with the text:\n\n```\n# handle-pull-side: pull up the handle from the side\ndef handle_pull_side(robot):\n```",
 "data/goal_py_md/handle-pull-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `handle-pull-side`.\nBegin with the text:\n\n```\n# handle-pull-side: pull up the handle from the side\ndef handle_pull_side(robot):\n```",
 "data/basic_md/handle-pull-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `handle-pull-side` requires the robot to pull up the handle from the side.\nTo pull up the handle from the side reliably, what steps the robot should perform?",
 "data/chain_md/handle-pull-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `handle-pull-side` requires the robot to pull up the handle from the side.\nTo pull up the handle from the side reliably, what steps the robot should perform?",
 "data/goal_md/handle-pull-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `handle-pull-side` requires the robot to pull up the handle from the side.\nTo pull up the handle from the side reliably, what steps the robot should perform?",
 "data/basic_py/handle-pull.py": "# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):",
 "data/chain_py/handle-pull.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):",
 "data/goal_py/handle-pull.py": "# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):",
 "data/basic_py_md/handle-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n```\n\nPlease write a program to perform the last task, `handle-pull`.\nBegin with the text:\n\n```\n# handle-pull: pull up the handle\ndef handle_pull(robot):\n```",
 "data/chain_py_md/handle-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `handle-pull`.\nBegin with the text:\n\n```\n# handle-pull: pull up the handle\ndef handle_pull(robot):\n```",
 "data/goal_py_md/handle-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `handle-pull`.\nBegin with the text:\n\n```\n# handle-pull: pull up the handle\ndef handle_pull(robot):\n```",
 "data/basic_md/handle-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `handle-pull` requires the robot to pull up the handle.\nTo pull up the handle reliably, what steps the robot should perform?",
 "data/chain_md/handle-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `handle-pull` requires the robot to pull up the handle.\nTo pull up the handle reliably, what steps the robot should perform?",
 "data/goal_md/handle-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `handle-pull` requires the robot to pull up the handle.\nTo pull up the handle reliably, what steps the robot should perform?",
 "data/basic_py/lever-pull.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# lever-pull: rotate the lever up\ndef lever_pull(robot):",
 "data/chain_py/lever-pull.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# lever-pull: rotate the lever up\ndef lever_pull(robot):",
 "data/goal_py/lever-pull.py": "# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# lever-pull: rotate the lever up\ndef lever_pull(robot):",
 "data/basic_py_md/lever-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n```\n\nPlease write a program to perform the last task, `lever-pull`.\nBegin with the text:\n\n```\n# lever-pull: rotate the lever up\ndef lever_pull(robot):\n```",
 "data/chain_py_md/lever-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `lever-pull`.\nBegin with the text:\n\n```\n# lever-pull: rotate the lever up\ndef lever_pull(robot):\n```",
 "data/goal_py_md/lever-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n```\n\nPlease write a program to perform the last task, `lever-pull`.\nBegin with the text:\n\n```\n# lever-pull: rotate the lever up\ndef lever_pull(robot):\n```",
 "data/basic_md/lever-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `lever-pull` requires the robot to rotate the lever up.\nTo rotate the lever up reliably, what steps the robot should perform?",
 "data/chain_md/lever-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `lever-pull` requires the robot to rotate the lever up.\nTo rotate the lever up reliably, what steps the robot should perform?",
 "data/goal_md/lever-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `lever-pull` requires the robot to rotate the lever up.\nTo rotate the lever up reliably, what steps the robot should perform?",
 "data/basic_py/peg-insert-side.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):",
 "data/chain_py/peg-insert-side.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):",
 "data/goal_py/peg-insert-side.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):",
 "data/basic_py_md/peg-insert-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `peg-insert-side`.\nBegin with the text:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n```",
 "data/chain_py_md/peg-insert-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `peg-insert-side`.\nBegin with the text:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n```",
 "data/goal_py_md/peg-insert-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n```\n\nPlease write a program to perform the last task, `peg-insert-side`.\nBegin with the text:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n```",
 "data/basic_md/peg-insert-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, what steps the robot should perform?",
 "data/chain_md/peg-insert-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, what steps the robot should perform?",
 "data/goal_md/peg-insert-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, what steps the robot should perform?",
 "data/basic_py/pick-place-wall.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way\ndef pick_place_wall(robot):",
 "data/chain_py/pick-place-wall.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way\ndef pick_place_wall(robot):",
 "data/goal_py/pick-place-wall.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way\ndef pick_place_wall(robot):",
 "data/basic_py_md/pick-place-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `pick-place-wall`.\nBegin with the text:\n\n```\n# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way\ndef pick_place_wall(robot):\n```",
 "data/chain_py_md/pick-place-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n```\n\nPlease write a program to perform the last task, `pick-place-wall`.\nBegin with the text:\n\n```\n# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way\ndef pick_place_wall(robot):\n```",
 "data/goal_py_md/pick-place-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n```\n\nPlease write a program to perform the last task, `pick-place-wall`.\nBegin with the text:\n\n```\n# pick-place-wall: pick up the puck and hold it at the target location with a short wall in the way\ndef pick_place_wall(robot):\n```",
 "data/basic_md/pick-place-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `pick-place-wall` requires the robot to pick up the puck and hold it at the target location with a short wall in the way.\nTo pick up the puck and hold it at the target location with a short wall in the way reliably, what steps the robot should perform?",
 "data/chain_md/pick-place-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `pick-place-wall` requires the robot to pick up the puck and hold it at the target location with a short wall in the way.\nTo pick up the puck and hold it at the target location with a short wall in the way reliably, what steps the robot should perform?",
 "data/goal_md/pick-place-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `pick-place-wall` requires the robot to pick up the puck and hold it at the target location with a short wall in the way.\nTo pick up the puck and hold it at the target location with a short wall in the way reliably, what steps the robot should perform?",
 "data/basic_py/pick-out-of-hole.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location\ndef pick_out_of_hole(robot):",
 "data/chain_py/pick-out-of-hole.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location\ndef pick_out_of_hole(robot):",
 "data/goal_py/pick-out-of-hole.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location\ndef pick_out_of_hole(robot):",
 "data/basic_py_md/pick-out-of-hole.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `pick-out-of-hole`.\nBegin with the text:\n\n```\n# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location\ndef pick_out_of_hole(robot):\n```",
 "data/chain_py_md/pick-out-of-hole.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `pick-out-of-hole`.\nBegin with the text:\n\n```\n# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location\ndef pick_out_of_hole(robot):\n```",
 "data/goal_py_md/pick-out-of-hole.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `pick-out-of-hole`.\nBegin with the text:\n\n```\n# pick-out-of-hole: pick up the peg out of the hole and hold it at the target location\ndef pick_out_of_hole(robot):\n```",
 "data/basic_md/pick-out-of-hole.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `pick-out-of-hole` requires the robot to pick up the peg out of the hole and hold it at the target location.\nTo pick up the peg out of the hole and hold it at the target location reliably, what steps the robot should perform?",
 "data/chain_md/pick-out-of-hole.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `pick-out-of-hole` requires the robot to pick up the peg out of the hole and hold it at the target location.\nTo pick up the peg out of the hole and hold it at the target location reliably, what steps the robot should perform?",
 "data/goal_md/pick-out-of-hole.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `pick-out-of-hole` requires the robot to pick up the peg out of the hole and hold it at the target location.\nTo pick up the peg out of the hole and hold it at the target location reliably, what steps the robot should perform?",
 "data/basic_py/reach.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach: reach to the target location\ndef reach(robot):",
 "data/chain_py/reach.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# reach: reach to the target location\ndef reach(robot):",
 "data/goal_py/reach.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# reach: reach to the target location\ndef reach(robot):",
 "data/basic_py_md/reach.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n```\n\nPlease write a program to perform the last task, `reach`.\nBegin with the text:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n```",
 "data/chain_py_md/reach.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `reach`.\nBegin with the text:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n```",
 "data/goal_py_md/reach.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n```\n\nPlease write a program to perform the last task, `reach`.\nBegin with the text:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n```",
 "data/basic_md/reach.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, what steps the robot should perform?",
 "data/chain_md/reach.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, what steps the robot should perform?",
 "data/goal_md/reach.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, what steps the robot should perform?",
 "data/basic_py/push-back.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push-back: slide the puck backwards to the target location\ndef push_back(robot):",
 "data/chain_py/push-back.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push-back: slide the puck backwards to the target location\ndef push_back(robot):",
 "data/goal_py/push-back.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push-back: slide the puck backwards to the target location\ndef push_back(robot):",
 "data/basic_py_md/push-back.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `push-back`.\nBegin with the text:\n\n```\n# push-back: slide the puck backwards to the target location\ndef push_back(robot):\n```",
 "data/chain_py_md/push-back.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `push-back`.\nBegin with the text:\n\n```\n# push-back: slide the puck backwards to the target location\ndef push_back(robot):\n```",
 "data/goal_py_md/push-back.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `push-back`.\nBegin with the text:\n\n```\n# push-back: slide the puck backwards to the target location\ndef push_back(robot):\n```",
 "data/basic_md/push-back.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `push-back` requires the robot to slide the puck backwards to the target location.\nTo slide the puck backwards to the target location reliably, what steps the robot should perform?",
 "data/chain_md/push-back.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `push-back` requires the robot to slide the puck backwards to the target location.\nTo slide the puck backwards to the target location reliably, what steps the robot should perform?",
 "data/goal_md/push-back.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `push-back` requires the robot to slide the puck backwards to the target location.\nTo slide the puck backwards to the target location reliably, what steps the robot should perform?",
 "data/basic_py/push.py": "# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# push: slide the puck to the target location\ndef push(robot):",
 "data/chain_py/push.py": "# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push: slide the puck to the target location\ndef push(robot):",
 "data/goal_py/push.py": "# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# push: slide the puck to the target location\ndef push(robot):",
 "data/basic_py_md/push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `push`.\nBegin with the text:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n```",
 "data/chain_py_md/push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n```\n\nPlease write a program to perform the last task, `push`.\nBegin with the text:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n```",
 "data/goal_py_md/push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n```\n\nPlease write a program to perform the last task, `push`.\nBegin with the text:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n```",
 "data/basic_md/push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, what steps the robot should perform?",
 "data/chain_md/push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, what steps the robot should perform?",
 "data/goal_md/push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, what steps the robot should perform?",
 "data/basic_py/pick-place.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):",
 "data/chain_py/pick-place.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):",
 "data/goal_py/pick-place.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):",
 "data/basic_py_md/pick-place.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n```\n\nPlease write a program to perform the last task, `pick-place`.\nBegin with the text:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n```",
 "data/chain_py_md/pick-place.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `pick-place`.\nBegin with the text:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n```",
 "data/goal_py_md/pick-place.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n```\n\nPlease write a program to perform the last task, `pick-place`.\nBegin with the text:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n```",
 "data/basic_md/pick-place.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, what steps the robot should perform?",
 "data/chain_md/pick-place.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, what steps the robot should perform?",
 "data/goal_md/pick-place.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, what steps the robot should perform?",
 "data/basic_py/plate-slide.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# plate-slide: slide the plate into the target location\ndef plate_slide(robot):",
 "data/chain_py/plate-slide.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# plate-slide: slide the plate into the target location\ndef plate_slide(robot):",
 "data/goal_py/plate-slide.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# plate-slide: slide the plate into the target location\ndef plate_slide(robot):",
 "data/basic_py_md/plate-slide.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `plate-slide`.\nBegin with the text:\n\n```\n# plate-slide: slide the plate into the target location\ndef plate_slide(robot):\n```",
 "data/chain_py_md/plate-slide.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `plate-slide`.\nBegin with the text:\n\n```\n# plate-slide: slide the plate into the target location\ndef plate_slide(robot):\n```",
 "data/goal_py_md/plate-slide.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `plate-slide`.\nBegin with the text:\n\n```\n# plate-slide: slide the plate into the target location\ndef plate_slide(robot):\n```",
 "data/basic_md/plate-slide.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `plate-slide` requires the robot to slide the plate into the target location.\nTo slide the plate into the target location reliably, what steps the robot should perform?",
 "data/chain_md/plate-slide.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `plate-slide` requires the robot to slide the plate into the target location.\nTo slide the plate into the target location reliably, what steps the robot should perform?",
 "data/goal_md/plate-slide.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `plate-slide` requires the robot to slide the plate into the target location.\nTo slide the plate into the target location reliably, what steps the robot should perform?",
 "data/basic_py/plate-slide-side.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# plate-slide-side: slide the plate sideways into the target location\ndef plate_slide_side(robot):",
 "data/chain_py/plate-slide-side.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# plate-slide-side: slide the plate sideways into the target location\ndef plate_slide_side(robot):",
 "data/goal_py/plate-slide-side.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# plate-slide-side: slide the plate sideways into the target location\ndef plate_slide_side(robot):",
 "data/basic_py_md/plate-slide-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `plate-slide-side`.\nBegin with the text:\n\n```\n# plate-slide-side: slide the plate sideways into the target location\ndef plate_slide_side(robot):\n```",
 "data/chain_py_md/plate-slide-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `plate-slide-side`.\nBegin with the text:\n\n```\n# plate-slide-side: slide the plate sideways into the target location\ndef plate_slide_side(robot):\n```",
 "data/goal_py_md/plate-slide-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `plate-slide-side`.\nBegin with the text:\n\n```\n# plate-slide-side: slide the plate sideways into the target location\ndef plate_slide_side(robot):\n```",
 "data/basic_md/plate-slide-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `plate-slide-side` requires the robot to slide the plate sideways into the target location.\nTo slide the plate sideways into the target location reliably, what steps the robot should perform?",
 "data/chain_md/plate-slide-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `plate-slide-side` requires the robot to slide the plate sideways into the target location.\nTo slide the plate sideways into the target location reliably, what steps the robot should perform?",
 "data/goal_md/plate-slide-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `plate-slide-side` requires the robot to slide the plate sideways into the target location.\nTo slide the plate sideways into the target location reliably, what steps the robot should perform?",
 "data/basic_py/plate-slide-back.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# plate-slide-back: slide the plate back into the target location\ndef plate_slide_back(robot):",
 "data/chain_py/plate-slide-back.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# plate-slide-back: slide the plate back into the target location\ndef plate_slide_back(robot):",
 "data/goal_py/plate-slide-back.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# plate-slide-back: slide the plate back into the target location\ndef plate_slide_back(robot):",
 "data/basic_py_md/plate-slide-back.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `plate-slide-back`.\nBegin with the text:\n\n```\n# plate-slide-back: slide the plate back into the target location\ndef plate_slide_back(robot):\n```",
 "data/chain_py_md/plate-slide-back.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `plate-slide-back`.\nBegin with the text:\n\n```\n# plate-slide-back: slide the plate back into the target location\ndef plate_slide_back(robot):\n```",
 "data/goal_py_md/plate-slide-back.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `plate-slide-back`.\nBegin with the text:\n\n```\n# plate-slide-back: slide the plate back into the target location\ndef plate_slide_back(robot):\n```",
 "data/basic_md/plate-slide-back.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `plate-slide-back` requires the robot to slide the plate back into the target location.\nTo slide the plate back into the target location reliably, what steps the robot should perform?",
 "data/chain_md/plate-slide-back.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `plate-slide-back` requires the robot to slide the plate back into the target location.\nTo slide the plate back into the target location reliably, what steps the robot should perform?",
 "data/goal_md/plate-slide-back.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `plate-slide-back` requires the robot to slide the plate back into the target location.\nTo slide the plate back into the target location reliably, what steps the robot should perform?",
 "data/basic_py/plate-slide-back-side.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# plate-slide-back-side: slide the plate back sideways into the target location\ndef plate_slide_back_side(robot):",
 "data/chain_py/plate-slide-back-side.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# plate-slide-back-side: slide the plate back sideways into the target location\ndef plate_slide_back_side(robot):",
 "data/goal_py/plate-slide-back-side.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# plate-slide-back-side: slide the plate back sideways into the target location\ndef plate_slide_back_side(robot):",
 "data/basic_py_md/plate-slide-back-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `plate-slide-back-side`.\nBegin with the text:\n\n```\n# plate-slide-back-side: slide the plate back sideways into the target location\ndef plate_slide_back_side(robot):\n```",
 "data/chain_py_md/plate-slide-back-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `plate-slide-back-side`.\nBegin with the text:\n\n```\n# plate-slide-back-side: slide the plate back sideways into the target location\ndef plate_slide_back_side(robot):\n```",
 "data/goal_py_md/plate-slide-back-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `plate-slide-back-side`.\nBegin with the text:\n\n```\n# plate-slide-back-side: slide the plate back sideways into the target location\ndef plate_slide_back_side(robot):\n```",
 "data/basic_md/plate-slide-back-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `plate-slide-back-side` requires the robot to slide the plate back sideways into the target location.\nTo slide the plate back sideways into the target location reliably, what steps the robot should perform?",
 "data/chain_md/plate-slide-back-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `plate-slide-back-side` requires the robot to slide the plate back sideways into the target location.\nTo slide the plate back sideways into the target location reliably, what steps the robot should perform?",
 "data/goal_md/plate-slide-back-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `plate-slide-back-side` requires the robot to slide the plate back sideways into the target location.\nTo slide the plate back sideways into the target location reliably, what steps the robot should perform?",
 "data/basic_py/peg-unplug-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-unplug-side: pull the peg out from the side\ndef peg_unplug_side(robot):",
 "data/chain_py/peg-unplug-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# peg-unplug-side: pull the peg out from the side\ndef peg_unplug_side(robot):",
 "data/goal_py/peg-unplug-side.py": "# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# peg-unplug-side: pull the peg out from the side\ndef peg_unplug_side(robot):",
 "data/basic_py_md/peg-unplug-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `peg-unplug-side`.\nBegin with the text:\n\n```\n# peg-unplug-side: pull the peg out from the side\ndef peg_unplug_side(robot):\n```",
 "data/chain_py_md/peg-unplug-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n```\n\nPlease write a program to perform the last task, `peg-unplug-side`.\nBegin with the text:\n\n```\n# peg-unplug-side: pull the peg out from the side\ndef peg_unplug_side(robot):\n```",
 "data/goal_py_md/peg-unplug-side.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    # Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot's gripper.\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.move_gripper(\"vertically aligned with the drawer handle\")\n    # Once the gripper is lined up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.move_gripper(\"horizontally aligned with the drawer handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `peg-unplug-side`.\nBegin with the text:\n\n```\n# peg-unplug-side: pull the peg out from the side\ndef peg_unplug_side(robot):\n```",
 "data/basic_md/peg-unplug-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `peg-unplug-side` requires the robot to pull the peg out from the side.\nTo pull the peg out from the side reliably, what steps the robot should perform?",
 "data/chain_md/peg-unplug-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `peg-unplug-side` requires the robot to pull the peg out from the side.\nTo pull the peg out from the side reliably, what steps the robot should perform?",
 "data/goal_md/peg-unplug-side.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above drawer handle  2. Drop gripper around drawer handle  3. Pull open the drawer\n    We need to put the gripper above the drawer handle before we can grab it, because of the angle of the robot's gripper.\n    - When the robot's gripper is not vertically aligned with drawer handle, move the robot's gripper until the robot's gripper is vertically aligned with the drawer handle\n    Once the gripper is lined up above the drawer handle, we should be able to grab the drawer handle by moving the gripper down around it.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n    Once the gripper is around the drawer handle, we can just pull the drawer open.\n    - When the robot's gripper is around drawer handle, move the robot's gripper until the robot's gripper is horizontally aligned with the drawer handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `peg-unplug-side` requires the robot to pull the peg out from the side.\nTo pull the peg out from the side reliably, what steps the robot should perform?",
 "data/basic_py/soccer.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# soccer: push the soccer ball into the target location\ndef soccer(robot):",
 "data/chain_py/soccer.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# soccer: push the soccer ball into the target location\ndef soccer(robot):",
 "data/goal_py/soccer.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# soccer: push the soccer ball into the target location\ndef soccer(robot):",
 "data/basic_py_md/soccer.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `soccer`.\nBegin with the text:\n\n```\n# soccer: push the soccer ball into the target location\ndef soccer(robot):\n```",
 "data/chain_py_md/soccer.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `soccer`.\nBegin with the text:\n\n```\n# soccer: push the soccer ball into the target location\ndef soccer(robot):\n```",
 "data/goal_py_md/soccer.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `soccer`.\nBegin with the text:\n\n```\n# soccer: push the soccer ball into the target location\ndef soccer(robot):\n```",
 "data/basic_md/soccer.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `soccer` requires the robot to push the soccer ball into the target location.\nTo push the soccer ball into the target location reliably, what steps the robot should perform?",
 "data/chain_md/soccer.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `soccer` requires the robot to push the soccer ball into the target location.\nTo push the soccer ball into the target location reliably, what steps the robot should perform?",
 "data/goal_md/soccer.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `soccer` requires the robot to push the soccer ball into the target location.\nTo push the soccer ball into the target location reliably, what steps the robot should perform?",
 "data/basic_py/stick-push.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):",
 "data/chain_py/stick-push.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):",
 "data/goal_py/stick-push.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):",
 "data/basic_py_md/stick-push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `stick-push`.\nBegin with the text:\n\n```\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):\n```",
 "data/chain_py_md/stick-push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `stick-push`.\nBegin with the text:\n\n```\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):\n```",
 "data/goal_py_md/stick-push.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `stick-push`.\nBegin with the text:\n\n```\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):\n```",
 "data/basic_md/stick-push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `stick-push` requires the robot to use the stick to push the thermos to the target location.\nTo use the stick to push the thermos to the target location reliably, what steps the robot should perform?",
 "data/chain_md/stick-push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `stick-push` requires the robot to use the stick to push the thermos to the target location.\nTo use the stick to push the thermos to the target location reliably, what steps the robot should perform?",
 "data/goal_md/stick-push.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `stick-push` requires the robot to use the stick to push the thermos to the target location.\nTo use the stick to push the thermos to the target location reliably, what steps the robot should perform?",
 "data/basic_py/stick-pull.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):",
 "data/chain_py/stick-pull.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):",
 "data/goal_py/stick-pull.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):",
 "data/basic_py_md/stick-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `stick-pull`.\nBegin with the text:\n\n```\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):\n```",
 "data/chain_py_md/stick-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n```\n\nPlease write a program to perform the last task, `stick-pull`.\nBegin with the text:\n\n```\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):\n```",
 "data/goal_py_md/stick-pull.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `stick-pull`.\nBegin with the text:\n\n```\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):\n```",
 "data/basic_md/stick-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `stick-pull` requires the robot to use the stick to pull the thermos to the target location.\nTo use the stick to pull the thermos to the target location reliably, what steps the robot should perform?",
 "data/chain_md/stick-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `stick-pull` requires the robot to use the stick to pull the thermos to the target location.\nTo use the stick to pull the thermos to the target location reliably, what steps the robot should perform?",
 "data/goal_md/stick-pull.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `stick-pull` requires the robot to use the stick to pull the thermos to the target location.\nTo use the stick to pull the thermos to the target location reliably, what steps the robot should perform?",
 "data/basic_py/push-wall.py": "# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# push-wall: slide the puck to the target location with a small wall in the way\ndef push_wall(robot):",
 "data/chain_py/push-wall.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# push-wall: slide the puck to the target location with a small wall in the way\ndef push_wall(robot):",
 "data/goal_py/push-wall.py": "# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# push-wall: slide the puck to the target location with a small wall in the way\ndef push_wall(robot):",
 "data/basic_py_md/push-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n```\n\nPlease write a program to perform the last task, `push-wall`.\nBegin with the text:\n\n```\n# push-wall: slide the puck to the target location with a small wall in the way\ndef push_wall(robot):\n```",
 "data/chain_py_md/push-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n```\n\nPlease write a program to perform the last task, `push-wall`.\nBegin with the text:\n\n```\n# push-wall: slide the puck to the target location with a small wall in the way\ndef push_wall(robot):\n```",
 "data/goal_py_md/push-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n```\n\nPlease write a program to perform the last task, `push-wall`.\nBegin with the text:\n\n```\n# push-wall: slide the puck to the target location with a small wall in the way\ndef push_wall(robot):\n```",
 "data/basic_md/push-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `push-wall` requires the robot to slide the puck to the target location with a small wall in the way.\nTo slide the puck to the target location with a small wall in the way reliably, what steps the robot should perform?",
 "data/chain_md/push-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `push-wall` requires the robot to slide the puck to the target location with a small wall in the way.\nTo slide the puck to the target location with a small wall in the way reliably, what steps the robot should perform?",
 "data/goal_md/push-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `push-wall` requires the robot to slide the puck to the target location with a small wall in the way.\nTo slide the puck to the target location with a small wall in the way reliably, what steps the robot should perform?",
 "data/basic_py/reach-wall.py": "# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# reach-wall: reach to the target location with a short wall in the way\ndef reach_wall(robot):",
 "data/chain_py/reach-wall.py": "# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# reach-wall: reach to the target location with a short wall in the way\ndef reach_wall(robot):",
 "data/goal_py/reach-wall.py": "# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# reach-wall: reach to the target location with a short wall in the way\ndef reach_wall(robot):",
 "data/basic_py_md/reach-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n```\n\nPlease write a program to perform the last task, `reach-wall`.\nBegin with the text:\n\n```\n# reach-wall: reach to the target location with a short wall in the way\ndef reach_wall(robot):\n```",
 "data/chain_py_md/reach-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n```\n\nPlease write a program to perform the last task, `reach-wall`.\nBegin with the text:\n\n```\n# reach-wall: reach to the target location with a short wall in the way\ndef reach_wall(robot):\n```",
 "data/goal_py_md/reach-wall.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.move_gripper(\"vertically aligned with the button\", close_gripper=True)\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.move_gripper(\"near the button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n```\n\nPlease write a program to perform the last task, `reach-wall`.\nBegin with the text:\n\n```\n# reach-wall: reach to the target location with a short wall in the way\ndef reach_wall(robot):\n```",
 "data/basic_md/reach-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `reach-wall` requires the robot to reach to the target location with a short wall in the way.\nTo reach to the target location with a short wall in the way reliably, what steps the robot should perform?",
 "data/chain_md/reach-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `reach-wall` requires the robot to reach to the target location with a short wall in the way.\nTo reach to the target location with a short wall in the way reliably, what steps the robot should perform?",
 "data/goal_md/reach-wall.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, move the robot's gripper until the robot's gripper is vertically aligned with the button and the robot's gripper is closed\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, move the robot's gripper until the robot's gripper is near the button\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `reach-wall` requires the robot to reach to the target location with a short wall in the way.\nTo reach to the target location with a short wall in the way reliably, what steps the robot should perform?",
 "data/basic_py/shelf-place.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# shelf-place: pick up the block and place it at the target location\ndef shelf_place(robot):",
 "data/chain_py/shelf-place.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# shelf-place: pick up the block and place it at the target location\ndef shelf_place(robot):",
 "data/goal_py/shelf-place.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# shelf-place: pick up the block and place it at the target location\ndef shelf_place(robot):",
 "data/basic_py_md/shelf-place.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n```\n\nPlease write a program to perform the last task, `shelf-place`.\nBegin with the text:\n\n```\n# shelf-place: pick up the block and place it at the target location\ndef shelf_place(robot):\n```",
 "data/chain_py_md/shelf-place.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `shelf-place`.\nBegin with the text:\n\n```\n# shelf-place: pick up the block and place it at the target location\ndef shelf_place(robot):\n```",
 "data/goal_py_md/shelf-place.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `shelf-place`.\nBegin with the text:\n\n```\n# shelf-place: pick up the block and place it at the target location\ndef shelf_place(robot):\n```",
 "data/basic_md/shelf-place.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `shelf-place` requires the robot to pick up the block and place it at the target location.\nTo pick up the block and place it at the target location reliably, what steps the robot should perform?",
 "data/chain_md/shelf-place.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    Steps:  1. Line up the gripper as viewed from above  2. Push down on the button from the top\n    Because this is \"topdown\", we just need to line up the gripper from above. Line up the robot's gripper from above.\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    Now that the gripper is lined up, just push down on the button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `shelf-place` requires the robot to pick up the block and place it at the target location.\nTo pick up the block and place it at the target location reliably, what steps the robot should perform?",
 "data/goal_md/shelf-place.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `shelf-place` requires the robot to pick up the block and place it at the target location.\nTo pick up the block and place it at the target location reliably, what steps the robot should perform?",
 "data/basic_py/sweep-into.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# sweep-into: grab the cube and move it to the target location\ndef sweep_into(robot):",
 "data/chain_py/sweep-into.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# sweep-into: grab the cube and move it to the target location\ndef sweep_into(robot):",
 "data/goal_py/sweep-into.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# sweep-into: grab the cube and move it to the target location\ndef sweep_into(robot):",
 "data/basic_py_md/sweep-into.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `sweep-into`.\nBegin with the text:\n\n```\n# sweep-into: grab the cube and move it to the target location\ndef sweep_into(robot):\n```",
 "data/chain_py_md/sweep-into.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `sweep-into`.\nBegin with the text:\n\n```\n# sweep-into: grab the cube and move it to the target location\ndef sweep_into(robot):\n```",
 "data/goal_py_md/sweep-into.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `sweep-into`.\nBegin with the text:\n\n```\n# sweep-into: grab the cube and move it to the target location\ndef sweep_into(robot):\n```",
 "data/basic_md/sweep-into.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `sweep-into` requires the robot to grab the cube and move it to the target location.\nTo grab the cube and move it to the target location reliably, what steps the robot should perform?",
 "data/chain_md/sweep-into.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `sweep-into` requires the robot to grab the cube and move it to the target location.\nTo grab the cube and move it to the target location reliably, what steps the robot should perform?",
 "data/goal_md/sweep-into.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `sweep-into` requires the robot to grab the cube and move it to the target location.\nTo grab the cube and move it to the target location reliably, what steps the robot should perform?",
 "data/basic_py/sweep.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# sweep: grab the cube and move sideways it to the target location\ndef sweep(robot):",
 "data/chain_py/sweep.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# sweep: grab the cube and move sideways it to the target location\ndef sweep(robot):",
 "data/goal_py/sweep.py": "# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# sweep: grab the cube and move sideways it to the target location\ndef sweep(robot):",
 "data/basic_py_md/sweep.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `sweep`.\nBegin with the text:\n\n```\n# sweep: grab the cube and move sideways it to the target location\ndef sweep(robot):\n```",
 "data/chain_py_md/sweep.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    # We closed the gripper, and the puck is still near the gripper, so maybe we\n    # grabbed it.\n    # Try to move the puck to the goal.\n    # If we didn't grab it, we'll just go back to an earlier step.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n```\n\nPlease write a program to perform the last task, `sweep`.\nBegin with the text:\n\n```\n# sweep: grab the cube and move sideways it to the target location\ndef sweep(robot):\n```",
 "data/goal_py_md/sweep.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Close gripper around puck\n    #  4. Move puck to goal\n    # First, put the gripper roughly above puck, so that we don't bump it while\n    # trying to grab it.\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.move_gripper(\"above the puck\")\n    # If the gripper isn't around the puck, put it around the puck.\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.move_gripper(\"near the puck\", close_gripper=True)\n    # If the gripper is near the puck and open, maybe we can grab it by closing\n    # the gripper.\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.move_gripper(\"near the target location\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n```\n\nPlease write a program to perform the last task, `sweep`.\nBegin with the text:\n\n```\n# sweep: grab the cube and move sideways it to the target location\ndef sweep(robot):\n```",
 "data/basic_md/sweep.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `sweep` requires the robot to grab the cube and move sideways it to the target location.\nTo grab the cube and move sideways it to the target location reliably, what steps the robot should perform?",
 "data/chain_md/sweep.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    We closed the gripper, and the puck is still near the gripper, so maybe we grabbed it. Try to move the puck to the goal. If we didn't grab it, we'll just go back to an earlier step.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `sweep` requires the robot to grab the cube and move sideways it to the target location.\nTo grab the cube and move sideways it to the target location reliably, what steps the robot should perform?",
 "data/goal_md/sweep.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Drop gripper around puck  3. Close gripper around puck  4. Move puck to goal\n    First, put the gripper roughly above puck, so that we don't bump it while trying to grab it.\n    - When the robot's gripper is not above the puck, move the robot's gripper until the robot's gripper is above the puck\n    If the gripper isn't around the puck, put it around the puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, move the robot's gripper until the robot's gripper is near the puck and the robot's gripper is closed\n    If the gripper is near the puck and open, maybe we can grab it by closing the gripper.\n    - When the robot's gripper is above puck and the robot's gripper is closed, move the robot's gripper until the robot's gripper is near the target location\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, move the robot's gripper until the robot's gripper is near the reach target\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `sweep` requires the robot to grab the cube and move sideways it to the target location.\nTo grab the cube and move sideways it to the target location reliably, what steps the robot should perform?",
 "data/basic_py/window-open.py": "# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):",
 "data/chain_py/window-open.py": "# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):",
 "data/goal_py/window-open.py": "# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n\n# window-open: slide the window open to the left\ndef window_open(robot):",
 "data/basic_py_md/window-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n```\n\nPlease write a program to perform the last task, `window-open`.\nBegin with the text:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n```",
 "data/chain_py_md/window-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move(\"gripper to left of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window right\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window right harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it's being opened, so keep pulling.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `window-open`.\nBegin with the text:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n```",
 "data/goal_py_md/window-open.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot's gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"right of the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check(\"the window handle is right of the robot's gripper and the robot's gripper is not near the window handle\"):\n        robot.move_gripper(\"almost vertically aligned with the window handle\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# reach: reach to the target location\ndef reach(robot):\n    # Steps:\n    #  1. Reach towards the target\n    # We don't have any objects to manipulate, so we can just move the robot's\n    # gripper directly to the target location\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.move_gripper(\"near the reach target\")\n```\n\nPlease write a program to perform the last task, `window-open`.\nBegin with the text:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n```",
 "data/basic_md/window-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, what steps the robot should perform?",
 "data/chain_md/window-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, the robot should move gripper to left of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the robot's gripper is near the window handle, the robot should slide window right.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window right harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    As long as the gripper is still vertically aligned with the door handle, it's being opened, so keep pulling.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, what steps the robot should perform?",
 "data/goal_md/window-open.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper left of the window handle  2. Start pushing against the window handle to close the window  3. Push the window closed harder\n    If the the window handle is right of the robot's gripper, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is right of the window handle\n    If the robot's gripper is near the window handle we can probably slide the window close now by moving the gripper right.\n    - When the window handle is right of the robot's gripper and the robot's gripper is not near the window handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the window handle\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above door handle  2. Drop gripper around door handle  3. Pull open the door\n    First, put the gripper mostly above the door handle.\n    - When the robot's gripper is not almost vertically aligned with door handle, move the robot's gripper until the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is closed\n    As long as the gripper is almost lined up, closing it should line it up all the way.\n    - When the robot's gripper is vertically aligned with the door handle, move the robot's gripper until the robot's gripper is left of the door handle\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, what steps the robot should perform?",
 "data/basic_py/window-close.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):",
 "data/chain_py/window-close.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):",
 "data/goal_py/window-close.py": "# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n\n# window-close: slide the window closed to the right\ndef window_close(robot):",
 "data/basic_py_md/window-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# pick-place: pick up the puck and hold it at the target location\ndef pick_place(robot):\n    if check(\"the robot's gripper is not above the puck\"):\n        robot.place(\"gripper above puck\")\n    if check(\"the robot's gripper is not around puck and the robot's gripper is open\"):\n        robot.drop(\"gripper around puck\")\n    if check(\"the robot's gripper is near puck and the robot's gripper is open\"):\n        robot.close(\"gripper around puck\")\n    if check(\"the robot's gripper is above puck and the robot's gripper is closed\"):\n        robot.place(\"puck at goal\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.put(\"gripper above door handle\")\n    if check(\"the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open\"):\n        robot.put(\"gripper around door handle\")\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.pull(\"door open\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n\n# reach: reach to the target location\ndef reach(robot):\n    if check(\"the robot's gripper is not near reach target\"):\n        robot.reach(\"to goal\")\n\n# drawer-open: pull the drawer open\ndef drawer_open(robot):\n    if check(\"the robot's gripper is not vertically aligned with drawer handle\"):\n        robot.put(\"gripper above drawer handle\")\n    if check(\"the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle\"):\n        robot.put(\"gripper around drawer handle\")\n    if check(\"the robot's gripper is around drawer handle\"):\n        robot.pull(\"away from drawer\")\n```\n\nPlease write a program to perform the last task, `window-close`.\nBegin with the text:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n```",
 "data/chain_py_md/window-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle\"):\n        robot.move(\"gripper to right of window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.slide(\"window left\")\n    # If the robot's gripper is starting to be in front of the window handle,\n    # push harder.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.push(\"window left harder\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.put(\"the gripper above the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.push(\"the gripper into the puck\")\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.slide(\"the puck to the goal\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.grab(\"drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.push(\"drawer closed\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.put(\"gripper above peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.grab(\"peg\")\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.align(\"peg to hole\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.insert(\"peg into hole\")\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is \"topdown\", we just need to line up the gripper from above.\n    # Line up the robot's gripper from above.\n    if check(\"the robot's gripper is not vertically aligned with button\"):\n        robot.put(\"gripper above button\")\n    # Now that the gripper is lined up, just push down on the button.\n    if check(\"the robot's gripper is vertically aligned with button\"):\n        robot.push(\"down on button\")\n```\n\nPlease write a program to perform the last task, `window-close`.\nBegin with the text:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n```",
 "data/goal_py_md/window-close.py.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\nHere's some code that demonstrates how the robot can do a variety of tasks:\n\n```\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot's gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check(\"the robot's gripper is near the window handle\"):\n        robot.move_gripper(\"forward aligned with the window handle\")\n    # If the robot's gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check(\"the robot's gripper is in front of the window handle\"):\n        robot.move_gripper(\"vertically aligned with the window handle\")\n\n# push: slide the puck to the target location\ndef push(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Push gripper into top of puck\n    #  3. Slide puck to goal\n    # The robot can slide the puck by trapping it by pushing down on it from\n    # above and moving the gripper.\n    # If the puck isn't below the gripper as seen from above, move the gripper\n    # above the puck.\n    if check(\"the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck\"):\n        robot.move_gripper(\"vertically aligned with the puck\")\n    # If the gripper is aligned with the puck but not near it, move the gripper\n    # down to the puck to slide it.\n    if check(\"the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck\"):\n        robot.move_gripper(\"above the puck\", close_gripper=True)\n    # If the gripper is near the puck, we've probably trapped the puck and can\n    # slide it to the target location.\n    # Close the gripper to make sure we keep control of the puck.\n    if check(\"the robot's gripper is near the puck and the puck is below the robot's gripper\"):\n        robot.move_gripper(\"above the target location\")\n\n# drawer-close: push the drawer close\ndef drawer_close(robot):\n    # Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don't need to be careful about the direction, since the drawer is large\n    # and we're just pushing it (unlike when opening the drawer).\n    if check(\"the robot's gripper is not near the drawer handle\"):\n        robot.move_gripper(\"near the drawer handle\")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check(\"the robot's gripper is forward aligned with drawer handle\"):\n        robot.move_gripper(\"around the drawer handle\")\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check(\"the robot's gripper is not vertically aligned with the peg\"):\n        robot.move_gripper(\"vertically aligned with the peg\")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check(\"peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper\"):\n        robot.move_gripper(\"forward aligned with the peg\", close_gripper=True)\n    # As long the gripper is still mostly around the peg and the peg isn't lined\n    # up with the hole, line up the peg with the hole.\n    if check(\"peg is horizontally aligned with hole\"):\n        robot.move_gripper(\"above the peg\")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check(\"the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole\"):\n        robot.move_gripper(\"horizontally aligned with hole\")\n\n# door-open: pull the door open\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check(\"the robot's gripper is not almost vertically aligned with door handle\"):\n        robot.move_gripper(\"almost vertically aligned with the door handle\", close_gripper=True)\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(\"the robot's gripper is vertically aligned with the door handle\"):\n        robot.move_gripper(\"left of the door handle\")\n```\n\nPlease write a program to perform the last task, `window-close`.\nBegin with the text:\n\n```\n# window-close: slide the window closed to the right\ndef window_close(robot):\n```",
 "data/basic_md/window-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `pick-place` requires the robot to pick up the puck and hold it at the target location.\nTo pick up the puck and hold it at the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not above the puck, the robot should place gripper above puck.\n    - When the robot's gripper is not around puck and the robot's gripper is open, the robot should drop gripper around puck.\n    - When the robot's gripper is near puck and the robot's gripper is open, the robot should close gripper around puck.\n    - When the robot's gripper is above puck and the robot's gripper is closed, the robot should place puck at goal.\n\nThe task `door-open` requires the robot to pull the door open.\nTo pull the door open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not almost vertically aligned with door handle, the robot should put gripper above door handle.\n    - When the robot's gripper is almost vertically aligned with the door handle and the robot's gripper is open, the robot should put gripper around door handle.\n    - When the robot's gripper is vertically aligned with the door handle, the robot should pull door open.\n\nThe task `button-press-topdown` requires the robot to push the button down from above.\nTo push the button down from above reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with button, the robot should put gripper above button.\n    - When the robot's gripper is vertically aligned with button, the robot should push down on button.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `drawer-open` requires the robot to pull the drawer open.\nTo pull the drawer open reliably, the robot should perform the following steps:\n    - When the robot's gripper is not vertically aligned with drawer handle, the robot should put gripper above drawer handle.\n    - When the robot's gripper is vertically aligned with drawer handle and the robot's gripper is not around drawer handle, the robot should put gripper around drawer handle.\n    - When the robot's gripper is around drawer handle, the robot should pull away from drawer.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, what steps the robot should perform?",
 "data/chain_md/window-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is not vertically aligned with the window handle and the robot's gripper is below the window handle, the robot should move gripper to right of window handle.\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is near the window handle, the robot should slide window left.\n    If the robot's gripper is starting to be in front of the window handle, push harder.\n    - When the robot's gripper is in front of the window handle, the robot should push window left harder.\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, the robot should put the gripper above the puck.\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, the robot should push the gripper into the puck.\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, the robot should slide the puck to the goal.\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, the robot should grab drawer handle.\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, the robot should push drawer closed.\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, the robot should put gripper above peg.\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, the robot should grab peg.\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, the robot should align peg to hole.\n    If the peg is lined up with the hole to the side, insert it.\n    - When peg is horizontally aligned with hole, the robot should insert peg into hole.\n\nThe task `reach` requires the robot to reach to the target location.\nTo reach to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Reach towards the target\n    We don't have any objects to manipulate, so we can just move the robot's gripper directly to the target location\n    - When the robot's gripper is not near reach target, the robot should reach to goal.\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, what steps the robot should perform?",
 "data/goal_md/window-close.md": "Hello. Today I would like you to help me control a robot. The robot has a single gripper that it can use to grab small objects.\n\n\nThe task `window-open` requires the robot to slide the window open to the left.\nTo slide the window open to the left reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper right of the window handle  2. Start pushing against the window handle to open the window  3. Push the window open harder\n    If the robot's gripper is not vertically lined up with the window handle, we should move the gripper near the window handle to start pushing\n    - When the robot's gripper is near the window handle, move the robot's gripper until the robot's gripper is forward aligned with the window handle\n    If the robot's gripper is near the window handle we can probably slide the window open now by moving the gripper left.\n    - When the robot's gripper is in front of the window handle, move the robot's gripper until the robot's gripper is vertically aligned with the window handle\n\nThe task `push` requires the robot to slide the puck to the target location.\nTo slide the puck to the target location reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above puck  2. Push gripper into top of puck  3. Slide puck to goal\n    The robot can slide the puck by trapping it by pushing down on it from above and moving the gripper. If the puck isn't below the gripper as seen from above, move the gripper above the puck.\n    - When the robot's gripper is not above puck and the robot's gripper is not vertically aligned with the puck, move the robot's gripper until the robot's gripper is vertically aligned with the puck\n    If the gripper is aligned with the puck but not near it, move the gripper down to the puck to slide it.\n    - When the robot's gripper is vertically aligned with the puck and the robot's gripper is not near puck, move the robot's gripper until the robot's gripper is above the puck and the robot's gripper is closed\n    If the gripper is near the puck, we've probably trapped the puck and can slide it to the target location. Close the gripper to make sure we keep control of the puck.\n    - When the robot's gripper is near the puck and the puck is below the robot's gripper, move the robot's gripper until the robot's gripper is above the target location\n\nThe task `drawer-close` requires the robot to push the drawer close.\nTo push the drawer close reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper roughly around the drawer handle  2. Push the drawer closed\n    If the gripper is not near the drawer handle, move it to the drawer handle. We don't need to be careful about the direction, since the drawer is large and we're just pushing it (unlike when opening the drawer).\n    - When the robot's gripper is not near the drawer handle, move the robot's gripper until the robot's gripper is near the drawer handle\n    If the drawer is aligned with the gripper as seen from in front, we can push the drawer closed.\n    - When the robot's gripper is forward aligned with drawer handle, move the robot's gripper until the robot's gripper is around the drawer handle\n\nThe task `peg-insert-side` requires the robot to insert the peg into the hole from the side.\nTo insert the peg into the hole from the side reliably, the robot should perform the following steps:\n    Steps:  1. Put gripper above the peg  2. Grab the peg with the gripper  3. Line the peg up with the hole  4. Slide the peg sideways into the hole\n    First, put the gripper above the peg.\n    - When the robot's gripper is not vertically aligned with the peg, move the robot's gripper until the robot's gripper is vertically aligned with the peg\n    If the peg becomes left of the gripper, go back to putting the gripper above the peg. Because the peg is a long object, check if the gripper is lined up with it from the front instead of around it.\n    - When peg is not left of the robot's gripper and peg is not forward aligned with the robot's gripper, move the robot's gripper until the robot's gripper is forward aligned with the peg and the robot's gripper is closed\n    As long the gripper is still mostly around the peg and the peg isn't lined up with the hole, line up the peg with the hole.\n    - When peg is horizontally aligned with hole, move the robot's gripper until the robot's gripper is above the peg\n    If the peg is lined up with the hole to the side, insert it.\n    - When the robot's gripper is forward aligned with the peg and the peg is not horizontally aligned with hole, move the robot's gripper until the robot's gripper is horizontally aligned with hole\n\nThe task `window-close` requires the robot to slide the window closed to the right.\nTo slide the window closed to the right reliably, what steps the robot should perform?"
}