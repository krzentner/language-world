all_plans = {
    "door-open": [
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("door open")\n\n\n# door-close: push the door closed\ndef door_close(robot):\n ',
    ],
    "drawer-open": [
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above drawer handle\n    #  2. Drop gripper around drawer handle\n    #  3. Pull open the drawer\n    # We need to put the gripper above the drawer handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with drawer handle"):\n        robot.put("gripper above drawer handle")\n    # Once the gripper is lined up up above the drawer handle, we should be able to\n    # grab the drawer handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with drawer handle and the robot\'s gripper is not around drawer handle"):\n        robot.put("gripper around drawer handle")\n    # Once the gripper is around the drawer handle, we can just pull the drawer\n    # open.\n    if check("the robot\'s gripper is around drawer handle"):\n        robot.pull("away from drawer")\n\n\n#',
    ],
    "assembly": [
        '# Steps:\n    #  1. Put gripper above wrench\n    #  2. Grab wrench with gripper\n    #  3. Put gripper above peg\n    #  4. Drop gripper around peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with wrench"):\n        robot.put("gripper above wrench")\n    # If the wrench becomes left of the gripper, go back to putting the gripper\n    # \n    # above the wrench.\n    if check("wrench is not left of the robot\'s gripper and wrench is not forward aligned with the robot\'s gripper"):\n        robot.grab("wrench")\n    # As long the gripper is still mostly around the wrench and the wrench isn\'t\n    # lined up with the peg, line up the wrench with the peg.\n    if check("the robot\'s gripper is forward aligned with wrench and wrench is not horizontally aligned with peg"):\n        robot.align("wrench to peg")\n    # \n    # If the wrench is lined up with the peg to the side, drop the wrench\n    # around the peg.\n    if check("wrench is horizontally aligned with peg"):\n        robot.drop("wrench around peg")\n\n\n# assembly-2: put the wrench around the peg\ndef assembly_2(robot):# Steps:\n    #  1. Put gripper above wrench\n    #  2. Grab wrench with gripper\n    #  3. Put gripper above peg\n    #  4. Drop',
        '# Steps:\n    #  1. Put the gripper above the wrench\n    #  2. Drop the gripper around the wrench\n    #  3. Put the gripper above the peg\n    #  4. Drop the gripper around the peg\n    #  5. Put the gripper above the wrench\n    #  6. Drop the gripper around the wrench\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with with wrench"):\n        robot.put("gripper above wrench")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with wrench and the robot\'s gripper is open"):\n        robot.put("gripper around wrench")\n    # As long as the gripper is still vertically aligned with the wrench,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is is vertically aligned with wrench"):\n        robot.pull("wrench open")\n    # Now, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with peg"):\n        robot.put("gripper above peg")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with peg and the robot\'s gripper is open"):\n        robot.put("gripper around peg")\n    # As long as the gripper is still vertically aligned with the peg,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is is vertically aligned with peg"):\n        robot.pull("peg open")\n    # Now, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with wrench"):\n        robot.put("gripper above wrench")\n    # As long as the gripper is almost lined up, closing it should line it up up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with wrench and the robot\'s gripper is open"):\n        robot.put("gripper around wrench")\n    # As long as the gripper is still vertically aligned with the wrench,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is is vertically aligned with wrench"):\n        robot.pull("wrench open")\n\n\n# assembly-topdown: put the wrench around the peg\ndef assembly_',
        '# Steps:\n    #  1. Put the gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Put the gripper above the peg\n    #  4. Drop the wrench around the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # If the gripper is not around the wrench, go back to putting the the gripper\n    # above the wrench.\n    if check("the robot\'s gripper is not around the wrench"):\n        robot.grab("wrench")\n    # Put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # Drop the wrench around the peg.\n    if check("the robot\'s gripper is around the wrench and the robot\'s gripper is vertically aligned with the peg"):\n        robot.put("wrench \n        robot.put("wrench around peg")\n\n\n# assembly-left: put the wrench around the peg from the left\ndef assembly_left(robot):\n    # Steps:\n    #  1. Put the gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Put the gripper above the peg\n    #  4. Drop the wrench around the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically',
        '# Steps:\n    #  1. Put the gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Put the gripper above the peg\n    #  4. Drop the wrench around the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # If the wrench is not left of the gripper, go back to putting putting the gripper\n    # above the wrench.\n    if check("wrench is not left of the robot\'s gripper"):\n        robot.grab("wrench")\n    # As long as the gripper is still mostly around the wrench and the wrench\n    # isn\'t lined up with the peg, line up the wrench with the peg.\n    if check("the robot\'s gripper is forward aligned with the wrench and the wrench is not horizontally aligned with peg"):\n        robot.align("wrench to peg")\n    # If the wrench is lined up up with the peg, drop the wrench around the peg.\n    if check("wrench is horizontally aligned with peg"):\n        robot.drop("wrench around peg")\n\n\n# assembly-topdown: put the wrench around the peg from above\ndef assembly_topdown(robot):# Steps:\n    #  1. Put the gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Put the gripper above the peg\n    #  4. Drop the wrench around the peg\n    # First',
        '# Steps:\n    #  1. Put gripper above peg\n    #  2. Grab peg with gripper\n    #  3. Put gripper above wrench\n    #  4. Grab wrench with gripper\n    #  5. Put gripper around peg\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of of the gripper, go back to putting the gripper\n    # above the peg.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the wrench, line up the peg with the wrench.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with wrench"):\n        robot \n        robot.align("peg to wrench")\n    # If the peg is lined up with the wrench to the side, insert it.\n    if check("peg is horizontally aligned with wrench"):\n        robot.insert("peg into wrench")\n\n\n# assembly-2: put the wrench around the peg\ndef assembly_2(robot):# Steps:\n    #  1. Put gripper above peg\n    #  2. Grab peg with gripper\n    #  3. Put gripper above wrench\n    #  4.',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Drop gripper around the peg\n    #  3. Pull open the gripper\n    #  4. Put gripper above the wrench\n    #  5. Drop gripper around the wrench\n    #  6. Pull open the gripper\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put \n        robot.put("gripper above peg")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the peg and the robot\'s gripper is open"):\n        robot.put("gripper around peg")\n    # As long as the gripper is still vertically aligned with the peg,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned aligned with the peg"):\n        robot.pull("gripper open")\n    # Now put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the wrench and the robot\'s gripper is open"):\n        robot.put("gripper around wrench")\n    # As long as the gripper is still vertically aligned with the wrench,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned aligned with the wrench"):\n        robot.pull("gripper open")\n\n\n# assembly-topdown: put the wrench around the peg from above\ndef assembly_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Drop gripper around the peg\n   ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# assembly-2: put the wrench around the peg\ndef assembly_2(robot):# Steps:\n    #  1. Put gripper above the peg\n   ',
        '# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Drop gripper around wrench\n    #  3. Put gripper above the peg\n    #  4. Align the peg with the wrench\n    #  5. Slide the peg into the wrench\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # \n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the wrench and the robot\'s gripper is open"):\n        robot.put("gripper around wrench")\n    # As long as the gripper is still vertically aligned with the wrench,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the wrench"):\n        robot.pull("wrench \n        robot.pull("wrench open")\n    # Once the gripper is lined up above the wrench, we should be able to\n    # grab it by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with wrench and the robot\'s gripper is not around wrench"):\n        robot.grab("wrench")\n    # Once the gripper is around the wrench, we can just pull the wrench\n    # closed.\n    if check("the robot\'s gripper is around wrench"):\n        robot.pull(" \n        robot.pull("wrench closed")\n    # Now, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the peg and the robot\'s gripper is open"):\n        robot.grab("peg")\n    # As long as as the gripper is still vertically aligned with the peg,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the peg"):\n        robot.pull("peg")\n        robot.pull("peg open")\n    # Once the gripper is lined up above the peg, we should be able to\n    # grab it by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with peg and the robot\'s gripper is not around peg"):\n        robot \n        robot.grab("peg")\n    # Once the gripper is around the peg, we can just pull the peg\n    # closed.\n    if check("the robot\'s gripper is around peg"):\n        robot.pull("peg")\n        robot.pull("peg closed")\n    # Now, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # As long as the gripper is almost lined up, closing',
    ],
    "basketball": [
        '# Steps:\n    #  1. Put gripper above the ball\n    #  2. Grab the ball with the gripper\n    #  3. Put gripper above the hoop\n    #  4. Drop the ball into the hoop\n    # First, put the gripper above the ball.\n    if check("the robot\'s gripper is not vertically aligned with the ball"):\n        robot.put("gripper above ball")\n    # If the ball is left of the gripper, go back to putting putting the gripper above\n    # the ball.\n    if check("ball is not left of the robot\'s gripper and ball is not forward aligned with the robot\'s gripper"):\n        robot.grab("ball")\n    # As long as the gripper is still mostly around the ball and the ball isn\'t\n    # lined up with the hoop, line up the ball with the hoop.\n    if check("the robot\'s gripper is forward aligned with the ball and the ball is not vertically aligned with hoop"):\n        robot.align("ball to hoop hoop")\n    # If the ball is lined up with the hoop, drop the ball into the hoop.\n    if check("ball is vertically aligned with hoop"):\n        robot.drop("ball into hoop")\n\n\n# peg-insert-topdown: insert the peg into the hole from above\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with',
        '# Steps:\n    #  1. Put gripper above the ball\n    #  2. Drop gripper around the ball\n    #  3. Put gripper above the hoop\n    #  4. Drop gripper around the hoop\n    #  5. Push the ball into the hoop\n    # First, put the gripper above the ball.\n    if check("the robot\'s gripper is not vertically aligned with the ball"):\n        robot.put("gripper above ball")\n    # \n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the ball and the robot\'s gripper is open"):\n        robot.put("gripper around ball")\n    # As long as the gripper is still vertically aligned with the ball,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the ball"):\n        robot.pull("ball \n        robot.pull("ball into hoop")\n\n\n# basketball-topdown: put the ball into into the hoop from above\ndef basketball_topdown(robot):# Steps:\n    #  1. Put gripper above the ball\n    #  2. Drop gripper around the ball\n    #  3. Put gripper above the hoop\n    #  4. Drop gripper around the hoop\n    #  5. Push the ball into the hoop\n    # First, put the gripper above the ball.\n  ',
        '\n    # Steps:\n    #  1. Put the ball above the hoop\n    #  2. Drop the ball into the hoop\n    # If the ball is not above the hoop, put it above the hoop.\n    if check("the ball is not above the hoop"):\n        robot.put("ball above hoop")\n    # If the ball is above the hoop, drop it into the hoop.\n    if check("the ball is above the hoop"):\n        robot.drop("ball into hoop")\n\n\n',
        '# Steps:\n    #  1. Put gripper above the ball\n    #  2. Drop gripper around ball\n    #  3. Move ball up to hoop\n    #  4. Drop ball into hoop\n    # First, put the gripper above the ball.\n    if check("the robot\'s gripper is not vertically aligned with the ball"):\n        robot.put("gripper above ball")\n    # As long as the gripper is almost lined up, closing it should line it up up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the ball and the robot\'s gripper is open"):\n        robot.put("gripper around ball")\n    # As long as the gripper is still vertically aligned with the ball,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the ball"):\n        robot.pull("ball up")\n    # Once the gripper is around the ball, we can just drop the the ball into the\n    # hoop.\n    if check("the robot\'s gripper is around ball"):\n        robot.drop("ball into hoop")\n\n\n# soccer: kick the ball into the goal\ndef soccer(robot):\n    # Steps:\n    #  1. Put gripper above the ball\n    #  2. Drop gripper around ball\n    #  3. Move ball up to goal\n    #  4. Kick ball into goal\n    # First, put the gripper above the',
        '# Steps:\n    #  1. Put gripper above the ball\n    #  2. Grab the ball with the gripper\n    #  3. Line the ball up with the hoop\n    #  4. Throw the ball into the hoop\n    # First, put the gripper above the ball.\n    if check("the robot\'s gripper is not vertically aligned with the ball"):\n        robot.put("gripper above ball")\n    # If the ball is left of the gripper, go back back to putting the gripper above\n    # the ball.\n    if check("ball is not left of the robot\'s gripper and ball is not forward aligned with the robot\'s gripper"):\n        robot.grab("ball")\n    # As long the gripper is still mostly around the ball and the ball isn\'t\n    # lined up with the hoop, line up the ball with the hoop.\n    if check("the robot\'s gripper is forward aligned with the ball and the ball is not horizontally aligned with hoop"):\n        robot.align("ball to to hoop")\n    # If the ball is lined up with the hoop to the side, throw the ball into\n    # the hoop.\n    if check("ball is horizontally aligned with hoop"):\n        robot.throw("ball into hoop")\n\n\n# peg-insert-topdown: insert the peg into the hole from above\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #',
        '# Steps:\n    #  1. Put gripper above the ball\n    #  2. Grab the ball with the gripper\n    #  3. Align the ball with the hoop\n    #  4. Drop the ball into the hoop\n    # First, put the gripper above the ball.\n    if check("the robot\'s gripper is not vertically aligned with the ball"):\n        robot.put("gripper above ball")\n    # If the ball becomes left of the gripper, go back to to putting the gripper\n    # above the ball.\n    if check("ball is not left of the robot\'s gripper and ball is not forward aligned with the robot\'s gripper"):\n        robot.grab("ball")\n    # As long the gripper is still mostly around the ball and the ball isn\'t lined\n    # up with the hoop, line up the ball with the hoop.\n    if check("the robot\'s gripper is forward aligned with the ball and the ball is not horizontally aligned with hoop"):\n        robot.align("ball to hoop hoop")\n    # If the ball is lined up with the hoop to the side, drop it.\n    if check("ball is horizontally aligned with hoop"):\n        robot.drop("ball into hoop")\n\n\n# peg-insert-topdown: insert the peg into the hole from above\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the',
        '# Steps:\n    #  1. Put gripper above the ball\n    #  2. Grab the ball with the gripper\n    #  3. Line up the ball with the hoop\n    #  4. Drop the ball into the hoop\n    # First, put the gripper above the ball.\n    if check("the robot\'s gripper is not vertically aligned with the ball"):\n        robot.put("gripper above ball")\n    # If the ball is left of the gripper, go back back to putting the gripper above\n    # the ball.\n    if check("ball is not left of the robot\'s gripper and ball is not forward aligned with the robot\'s gripper"):\n        robot.grab("ball")\n    # As long the gripper is still mostly around the ball and the ball isn\'t\n    # lined up with the hoop, line up the ball with the hoop.\n    if check("the robot\'s gripper is forward aligned with the ball and the ball is not horizontally aligned with hoop"):\n        robot.align("ball to to hoop")\n    # If the ball is lined up with the hoop, drop it into the hoop.\n    if check("ball is horizontally aligned with hoop"):\n        robot.drop("ball into hoop")\n\n\n# peg-insert-topdown: insert the peg into the hole from above\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with',
        '\n    # Steps:\n    #  1. Put the ball above the hoop\n    #  2. Drop the ball into the hoop\n    # If the ball is not above the hoop, put it above the hoop.\n    if check("the ball is not above the hoop"):\n        robot.put("ball above hoop")\n    # If the ball is above the hoop, drop it into the hoop.\n    if check("the ball is above the hoop"):\n        robot.drop("ball into hoop")\n\n\n',
    ],
    "button-press-topdown": [
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button down from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-front: push the button down from the front\ndef button_press_front(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button down from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# peg-insert-side: insert the peg into the hole from the side\ndef peg_insert_side(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n',
    ],
    "button-press-topdown-wall": [
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button down from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side-wall: push the button down from the side with a short wall in the way\ndef button_press_side_wall(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-topdown-wall-left: push the button down from above with a short wall in the way\ndef button_press_topdown_wall_left(robot):# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button down from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side-wall: push the button down from the side with a short wall in the way\ndef button_press_side_wall(robot):\n    # Steps:\n    #  1. Put gripper above the button\n    #  2. Grab the button with the gripper\n    #  3. Line the button up with the hole\n    #  4',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button down from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-topdown-wall-2: push the button down from above with a short wall in the way\ndef button_press_topdown_wall_2(robot):# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button down from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line',
    ],
    "button-press": [
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# button-release: release the button\ndef button_release(robot):\n    # Steps:\n    #  1. Pull up on the button\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n  ',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-top: push the button down from above\ndef button_press_top(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "top", we just need to line up the gripper from above.\n    #',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n  ',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n  ',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n  ',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-side: push the button from the side\ndef button_press_side(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from the side\n    #  2. Push down on the button from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n  ',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "front", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not horizontally aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is horizontally aligned with button"):\n        robot.push("down on button")\n\n\n# peg-insert-front: insert the peg into the hole from the front\ndef peg_insert_front(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways',
    ],
    "button-press-wall": [
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the front\n    # Because this is "wall", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push the button from the front\n    # Because this is "wall", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not forward aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push down on on the button.\n    if check("the robot\'s gripper is forward aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need to line',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up',
        '# Steps:\n    #  1. Put gripper above the button\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not forward aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is forward aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the button\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need to line up the gripper from the',
        '# Steps:\n    #  1. Line up the gripper as viewed from the front\n    #  2. Push down on the button from the front\n    # Because this is "wall", we just need to line up the gripper from the front.\n    # Line up the robot\'s gripper from the front.\n    if check("the robot\'s gripper is not forward aligned with button"):\n        robot.put("gripper in front of button")\n    # Now that the gripper is lined up, just push push down on the button.\n    if check("the robot\'s gripper is forward aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need',
        '# Steps:\n    #  1. Put gripper above the button\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the front\n    # Because this is "wall", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with button"):\n        robot.push("down on button")\n\n\n# button-press-wall-topdown: push the button down from above with a short wall in the way\ndef button_press_wall_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "wall", we just need to line up the',
    ],
    "coffee-button": [
        '# Steps:\n    #  1. Put gripper above the button\n    #  2. Push down on the button\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with the coffee button"):\n        robot.put("gripper above coffee button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with the coffee button"):\n        robot.push("down on coffee button")\n\n\n# coffee-pot: pick up the coffee pot\ndef coffee_pot(robot):\n    # Steps:\n    #  1. Put gripper above the coffee pot\n    #  2. Grab the coffee pot with the gripper\n    #  3. Lift the coffee pot up\n    # First, put the gripper above the coffee pot.\n    if check("',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with coffee button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the the button.\n    if check("the robot\'s gripper is vertically aligned with coffee button"):\n        robot.push("down on button")\n\n\n# coffee-pot: pick up the coffee pot\ndef coffee_pot(robot):\n    # Steps:\n    #  1. Put gripper above the coffee pot\n    #  2. Drop gripper around the coffee pot\n    #  3. Pick up the coffee pot\n    # If the gripper is not vertically aligned with the coffee pot, move the\n    #',
        '# Steps:\n    #  1. Put gripper above the button\n    #  2. Push down on the button\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with the coffee button"):\n        robot.put("gripper above coffee button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with the coffee button"):\n        robot.push("down on coffee button")\n\n\n# coffee-pot: pick up the coffee pot\ndef coffee_pot(robot):\n    # Steps:\n    #  1. Put gripper above the coffee pot\n    #  2. Grab the coffee pot\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n',
        '# Steps:\n    #  1. Put gripper above the coffee button\n    #  2. Push down on the coffee button\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with coffee button"):\n        robot.put("gripper above coffee button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with coffee button"):\n        robot.push("down on coffee button")\n\n\n# coffee-button-press: press the button on the coffee machine\ndef coffee_button_press(robot):\n    # Steps:\n    #  1. Put gripper above the coffee button\n    #  2. Push down on the coffee button\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot',
        '# Steps:\n    #  1. Put gripper above the coffee button\n    #  2. Push down on the coffee button\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with coffee button"):\n        robot.put("gripper above coffee button")\n    # Now that the gripper is lined up, just push down on the button. button.\n    if check("the robot\'s gripper is vertically aligned with coffee button"):\n        robot.push("down on coffee button")\n\n\n# coffee-lid: close the lid on the coffee machine\ndef coffee_lid(robot):\n    # Steps:\n    #  1. Put gripper above the coffee lid\n    #  2. Push down on the coffee lid\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with coffee button"):\n        robot.put("gripper above coffee button")\n    # Now that the gripper is lined up, just push down on on the button.\n    if check("the robot\'s gripper is vertically aligned with coffee button"):\n        robot.push("down on coffee button")\n\n\n# coffee-pot: pick up the coffee pot\ndef coffee_pot(robot):\n    # Steps:\n    #  1. Put gripper above coffee pot\n    #  2. Grab coffee pot\n    #  3. Lift coffee pot up\n    # Put the gripper above the coffee pot.\n    if check("the robot\'s gripper is not',
        '# Steps:\n    #  1. Put gripper above button\n    #  2. Push down on button\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with the button"):\n        robot.put("gripper above button")\n    # Now that the gripper is lined up, just push down on the button.\n    if check check("the robot\'s gripper is vertically aligned with the button"):\n        robot.push("down on button")\n\n\n# coffee-pot: grab the coffee pot\ndef coffee_pot(robot):\n    # Steps:\n    #  1. Put gripper above coffee pot\n    #  2. Grab coffee pot\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the button from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with coffee button"):\n        robot.put("gripper above coffee button")\n    # Now that the gripper is lined up, just push down on on the button.\n    if check("the robot\'s gripper is vertically aligned with coffee button"):\n        robot.push("down on coffee button")\n\n\n# coffee-lid: close the lid on the coffee machine\ndef coffee_lid(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the lid from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up',
    ],
    "coffee-pull": [
        '# Steps:\n    #  1. Put gripper above the mug\n    #  2. Drop gripper around the mug\n    #  3. Pull the mug to the target location\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not almost vertically aligned with mug"):\n        robot.put("gripper above mug")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with mug and the robot\'s gripper is open"):\n        robot.put("gripper around mug")\n    # As long as the gripper is still vertically aligned with the mug,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with mug"):\n        robot.pull("away from mug")\n\n\n# coffee-push: push the mug to the target location\ndef coffee_push(robot):\n   ',
        '# Steps:\n    #  1. Put gripper above mug\n    #  2. Grab mug\n    #  3. Pull mug to target location\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not vertically aligned with mug"):\n        robot.put("gripper above mug")\n    # If the gripper is not around the mug, go back to putting the gripper\n    # above the mug.\n    if check("the robot\' robot\'s gripper is not around mug"):\n        robot.grab("mug")\n    # If the mug is not at the target location, pull it there.\n    if check("mug is not at target location"):\n        robot.pull("mug to target location")\n\n\n# coffee-push: push the mug to the target location\ndef coffee_push(robot):\n    # Steps:\n    #  1. Put gripper above mug\n    #  2. Grab mug\n    #  3. Push mug to target',
        '# Steps:\n    #  1. Put gripper above mug\n    #  2. Drop gripper around mug\n    #  3. Pull mug to target\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not vertically aligned with the mug"):\n        robot.put("gripper above mug")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(" check("the robot\'s gripper is almost vertically aligned with the mug and the robot\'s gripper is open"):\n        robot.put("gripper around mug")\n    # As long as the gripper is still vertically aligned with the mug,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the mug"):\n        robot.pull("away from mug")\n\n\n# coffee-push: push the mug to the target location\ndef coffee_push(robot):\n    # Steps:\n ',
        '# Steps:\n    #  1. Put gripper above mug\n    #  2. Drop gripper around mug\n    #  3. Pull mug to target location\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not vertically aligned with mug"):\n        robot.put("gripper above mug")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(" check("the robot\'s gripper is almost vertically aligned with mug and the robot\'s gripper is open"):\n        robot.put("gripper around mug")\n    # As long as the gripper is still vertically aligned with the mug,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with mug"):\n        robot.pull("away from mug")\n\n\n# coffee-push: push the mug to the target location\ndef coffee_push(robot):\n    # Steps:\n   ',
        '# Steps:\n    #  1. Put gripper above the mug\n    #  2. Drop gripper around the mug\n    #  3. Pull mug to target location\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not vertically aligned with the mug"):\n        robot.put("gripper above mug")\n    # As long as the gripper is still almost lined up, closing it should line it\n    # up all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the mug and the robot\'s gripper is open"):\n        robot.put("gripper around mug")\n    # As long as the gripper is still vertically aligned with the mug,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the mug"):\n        robot.pull("away from mug")\n\n\n# coffee-push: push the mug to the target location\ndef coffee_push(robot):\n ',
        '# Steps:\n    #  1. Put gripper above the mug\n    #  2. Drop gripper around the mug\n    #  3. Pull the mug to the target location\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not vertically aligned with the mug"):\n        robot.put("gripper above mug")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the mug and the robot\'s gripper is open"):\n        robot.put("gripper around mug")\n    # As long as the gripper is still vertically aligned with the mug,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the mug"):\n        robot.pull("away from mug")\n\n\n# coffee-push: push the mug to the target location\ndef coffee_push(robot):\n ',
        '# Steps:\n    #  1. Put gripper above mug\n    #  2. Drop gripper around mug\n    #  3. Pull mug to target location\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not vertically aligned with the mug"):\n        robot.put("gripper above mug")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check check("the robot\'s gripper is almost vertically aligned with the mug and the robot\'s gripper is open"):\n        robot.put("gripper around mug")\n    # As long as the gripper is still vertically aligned with the mug,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the mug"):\n        robot.pull("away from mug")\n\n\n# coffee-push: push the mug to the target location\ndef coffee_push(robot):\n    # Steps:\n ',
        '\n    # Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    # First, grab the mug.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the mug is not at the target location, move it there.\n    if check("mug is not at target location"):\n        robot.move("mug to target location")\n\n\n# coffee-push: push the mug to',
    ],
    "coffee-push": [
        '\n    # Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    # First, grab the mug.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the mug is not in front of the robot, move it to the target location.\n    if check("the mug is not in front of the robot"):\n        robot.move("mug to target location")\n\n\n# coffee',
        '# Steps:\n    #  1. Put gripper above mug\n    #  2. Grab the mug\n    #  3. Move the mug to the target location\n    # First, put the gripper above the mug.\n    if check("the robot\'s gripper is not vertically aligned with the mug"):\n        robot.put("gripper above mug")\n    # If the mug becomes left of the gripper, go back to putting the gripper\n    # above the mug.\n    if check check("mug is not left of the robot\'s gripper and mug is not forward aligned with the robot\'s gripper"):\n        robot.grab("mug")\n    # As long the gripper is still mostly around the mug and the mug isn\'t lined\n    # up with the target location, move the mug to the target location.\n    if check("the robot\'s gripper is forward aligned with the mug and the mug is not horizontally aligned with target"):\n        robot.align("mug to target")\n\n\n# coffee-pull: grab the mug and move it to the',
        '# Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    # First, grab the mug.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the mug is not in the target location, move the mug to the target\n    # location.\n    if check("the mug is not in the target location"):\n        robot.move("mug to target location")\n\n\n# coffee-pull: grab the mug and move it to the target location\ndef coffee_pull(robot):# Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    # First, grab the mug.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the mug is not in the target location, move the mug to the target\n    # location.\n    if check',
        '# Steps:\n    #  1. Grab the mug\n    #  2. Align the mug with the target\n    #  3. Push the mug to the target\n    # First, grab the mug.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the mug is not aligned with the target, align it.\n    if check("the mug is not horizontally aligned with the target"):\n        robot.align("mug \n        robot.align("mug to target")\n    # If the mug is aligned with the target, push it to the target.\n    if check("the mug is horizontally aligned with the target"):\n        robot.push("mug to target")\n\n\n# coffee-pull: grab the mug and move it to the target location\ndef coffee_pull(robot):# Steps:\n    #  1. Grab the mug\n    #  2. Align the mug with the target\n    #  3. Pull the mug to the target\n',
        '\n    # Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    # First, grab the mug.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the mug is not at the target location, move it there.\n    if check("the mug is not at the target location"):\n        robot.put("mug at target location")\n\n\n# coffee-pull: grab the',
        '# Steps:\n    #  1. Grab the mug\n    #  2. Push the mug to the target location\n    # If the robot\'s gripper is not around the mug, grab it.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the robot\'s gripper is around the mug, push it to the target location.\n    if check("the robot\'s gripper is around the mug"):\n        robot.push("mug \n        robot.push("mug to target location")\n\n\n# coffee-pull: grab the mug and move it to the target location\ndef coffee_pull(robot):# Steps:\n    #  1. Grab the mug\n    #  2. Pull the mug to the target location\n    # If the robot\'s gripper is not around the mug, grab it.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the robot\'s gripper is around the',
        '# Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    # If the robot\'s gripper is not around the mug, grab it.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the robot\'s gripper is around the mug, move it to the target location.\n    if check("the robot\'s gripper is around the mug"):\n        robot.move("mug \n        robot.move("mug to target location")\n\n\n# coffee-pull: grab the mug and move it to the target location\ndef coffee_pull(robot):# Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    # If the robot\'s gripper is not around the mug, grab it.\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    # If the robot\'s gripper is around the',
        '\n    # Steps:\n    #  1. Grab the mug\n    #  2. Move the mug to the target location\n    if check("the robot\'s gripper is not around the mug"):\n        robot.grab("mug")\n    if check("the robot\'s gripper is around the mug"):\n        robot.move("mug to target location")\n\n\n# coffee-pull: grab the mug and move it to the target location\ndef coffee_pull(robot):\n    # Steps:\n    # ',
    ],
    "bin-picking": [
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Drop gripper around cube\n    #  3. Pick up cube\n    #  4. Put gripper above target bin\n    #  5. Drop gripper around target bin\n    #  6. Place cube in target bin\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("g \n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, drop it around the cube.\n    if check("the robot\'s gripper is not around the cube"):\n        robot.put("gripper around cube")\n    # If the gripper is around the cube, pick it up.\n    if check("the robot\'s gripper is around the cube"):\n        robot.pick("cube")\n    # If the cube is picked up, put the gripper above the target bin.\n    if check check("the robot\'s gripper is holding the cube"):\n        robot.put("gripper above target bin")\n    # If the gripper is above the target bin, drop it around the target bin.\n    if check("the robot\'s gripper is above the target bin"):\n        robot.put("gripper around target bin")\n    # If the gripper is around the target bin, place the cube in the target bin.\n    if check("the robot\'s gripper is around the target bin"):\n        robot.place("cube in target bin")\n\n',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Put gripper above the target bin\n    #  5. Drop gripper around the target bin\n    #  6. Place the cube in the target bin\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, drop it around the cube.\n    if check("the robot\'s gripper is vertically aligned with the cube and the robot\'s gripper is not around the cube"):\n        robot.put("gripper around cube")\n    # Pick up the cube.\n    if check("the robot\'s gripper is around the cube"):\n        robot.pick("cube")\n    # Put the gripper above the target bin.\n    if check("the',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Align the cube with the bin\n    #  5. Place the cube in the bin\n    # Put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the the gripper is lined up above the cube, move it down around the cube.\n    if check("the robot\'s gripper is vertically aligned with the cube and the robot\'s gripper is not around the cube"):\n        robot.put("gripper around cube")\n    # If the gripper is around the cube, pick it up.\n    if check("the robot\'s gripper is around the cube"):\n        robot.pick("cube")\n    # Align the cube with the bin.\n    if check("the robot\'s gripper is holding the cube"):\n        robot.align("cube to bin")\n    # Place the cube in the bin.\n    if check("the robot\'s gripper is holding the cube and the cube is horizontally aligned with the bin"):\n        robot.place("cube in bin")\n\n\n# door-open: open the door\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above the door handle\n    #  2. Drop gripper around the door handle\n    #  3. Pull open the door\n',
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Drop gripper around cube\n    #  3. Pick up cube\n    #  4. Put gripper above bin\n    #  5. Drop gripper around bin\n    #  6. Drop cube into bin\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube cube")\n    # If the gripper is still above the cube, drop the gripper around the cube.\n    if check("the robot\'s gripper is vertically aligned with the cube"):\n        robot.put("gripper around cube")\n    # If the gripper is around the cube, pick up the cube.\n    if check("the robot\'s gripper is around the cube"):\n        robot.pick("cube")\n    # If the gripper is holding the cube, put the gripper above the bin.\n    if check("the robot\'s gripper gripper is holding the cube"):\n        robot.put("gripper above bin")\n    # If the gripper is above the bin, drop the gripper around the bin.\n    if check("the robot\'s gripper is vertically aligned with the bin"):\n        robot.put("gripper around bin")\n    # If the gripper is around the bin, drop the cube into the bin.\n    if check("the robot\'s gripper is around the bin and the robot\'s gripper is holding the cube"):\n        robot.drop("cube into bin")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Put gripper above the target bin\n    #  5. Drop gripper around the target bin\n    #  6. Put the cube in the target bin\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, drop it around the cube.\n    if check("the robot\'s gripper is vertically aligned with cube and the robot\'s gripper is not around cube"):\n        robot.put("gripper around cube")\n    # If the gripper is around the cube, pick up the cube.\n    if check("the robot\'s gripper is around cube"):\n        robot.grab("cube")\n    # Put the gripper above the target bin. bin.\n    if check("the robot\'s gripper is not vertically aligned with target bin"):\n        robot.put("gripper above target bin")\n    # If the gripper is not around the target bin, drop it around the target bin.\n    if check("the robot\'s gripper is vertically aligned with target bin and the robot\'s gripper is not around target bin"):\n        robot.put("gripper around target bin")\n    # If the gripper is around the target bin, put the cube in the target bin.\n    if check("the check("the robot\'s gripper is around target bin"):\n        robot.put("cube in target bin")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg down into the hole\n    # First',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Put gripper above the target bin\n    #  5. Drop gripper around the target bin\n    #  6. Drop the cube into the target bin\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is still not around the cube, drop it around the cube.\n    if check("the robot\'s gripper is vertically aligned with the cube and the robot\'s gripper is not around cube"):\n        robot.put("gripper around cube")\n    # Pick up the cube.\n    if check("the robot\'s gripper is around cube"):\n        robot.pick("cube")\n    # Put the gripper above the target bin.\n    if check("the robot robot\'s gripper is not vertically aligned with the target bin"):\n        robot.put("gripper above target bin")\n    # If the gripper is still not around the target bin, drop it around the\n    # target bin.\n    if check("the robot\'s gripper is vertically aligned with the target bin and the robot\'s gripper is not around target bin"):\n        robot.put("gripper around target bin")\n    # Drop the cube into the target bin.\n    if check("the robot\'s gripper is around target bin"):\n        robot.drop("cube")\n\n\n# bin-picking-2: pick up the cube and place it in the target bin\ndef bin_picking_2(robot):# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Put gripper above the target bin\n    #  5. Drop gripper around the target bin\n    #  6. Drop the cube into the target',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Put gripper above the target bin\n    #  5. Drop gripper around the target bin\n    #  6. Put the cube in the target bin\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # Drop the gripper around the cube.\n    if check("the robot\'s gripper is vertically aligned with the cube and the robot\'s gripper is not around cube"):\n        robot.put("gripper around cube")\n    # Pick up the cube.\n    if check("the robot\'s gripper is around cube"):\n        robot.pick("cube")\n    # Put the gripper above the target bin.\n    if check("the robot\'s gripper is not vertically aligned with the the target bin"):\n        robot.put("gripper above target bin")\n    # Drop the gripper around the target bin.\n    if check("the robot\'s gripper is vertically aligned with the target bin and the robot\'s gripper is not around target bin"):\n        robot.put("gripper around target bin")\n    # Put the cube in the target bin.\n    if check("the robot\'s gripper is around target bin"):\n        robot.put("cube in target bin")\n\n\n# peg-insert-topdown: insert the peg into',
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Drop gripper around cube\n    #  3. Pick up cube\n    #  4. Put gripper above target bin\n    #  5. Drop gripper around target bin\n    #  6. Place cube in target bin\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with cube"):\n        robot.put("gripper \n        robot.put("gripper above cube")\n    # If the cube becomes left of the gripper, go back to putting the gripper\n    # above the cube.\n    if check("cube is not left of the robot\'s gripper and cube is not forward aligned with the robot\'s gripper"):\n        robot.put("gripper around cube")\n    # If the cube is forward aligned with the gripper, pick it up.\n    if check("cube is forward aligned with the robot\'s gripper"):\n        robot.pick("cube")\n    # Put the gripper above the target bin.\n    if check("the robot\'s gripper is not vertically aligned with target bin"):\n        robot.put("gripper above target bin")\n    # If the target bin becomes left of the gripper, go back to putting the\n    # gripper above the target bin.\n    if check("target bin is not left of the robot\'s gripper and target bin is not forward aligned with the robot\'s gripper"):\n        robot.put("gripper around target bin")\n    # If the target target bin is forward aligned with the gripper, place the cube in\n    # the target bin.\n    if check("target bin is forward aligned with the robot\'s gripper"):\n        robot.place("cube in target bin")\n\n\n# peg-insert-topdown: insert the peg into the hole from above\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line',
    ],
    "dial-turn": [
        '\n    # Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial\n    # First, put the gripper above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the gripper is still above the dial, turn it.\n    if check("the robot\'s gripper is vertically aligned with the dial"):\n        robot.turn("dial")\n\n\n# button-',
        '# Steps:\n    #  1. Put gripper above the dial\n    #  2. Grab the dial with the gripper\n    #  3. Turn the dial\n    # First, put the gripper above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the dial becomes left of the gripper, go back to putting the gripper\n    # above the dial.\n    if check check("dial is not left of the robot\'s gripper"):\n        robot.grab("dial")\n    # Turn the dial.\n    if check("the robot\'s gripper is forward aligned with the dial"):\n        robot.turn("dial")\n\n\n# door-open: open the door\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull open the door\n   ',
        '\n    # Steps:\n    #  1. Put gripper above dial\n    #  2. Turn dial\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    if check("the robot\'s gripper is vertically aligned with the dial"):\n        robot.turn("dial")\n\n\n# lightswitch-flip: flip the lightswitch\ndef lightswitch_flip(robot):\n    # Steps:\n    #  1. Put',
        '# Steps:\n    #  1. Put gripper above the dial\n    #  2. Grab the dial with the gripper\n    #  3. Turn the dial to the left\n    #  4. Turn the dial to the right\n    # First, put the gripper above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the dial becomes left of the gripper, go back to to putting the gripper\n    # above the dial.\n    # Because the dial is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("dial is not left of the robot\'s gripper and dial is not forward aligned with the robot\'s gripper"):\n        robot.grab("dial")\n    # As long the gripper is still mostly around the dial and the dial isn\'t\n    # turned, turn the dial.\n    if check("the robot\' robot\'s gripper is forward aligned with the dial and dial is not turned"):\n        robot.turn("dial left")\n    # If the dial is turned to the left, turn it to the right.\n    if check("dial is turned left"):\n        robot.turn("dial right")\n\n\n# dial-turn-right: turn the dial to the right\ndef dial_turn_right(robot):\n    # Steps:\n    #  1. Put gripper above the dial\n    #  2. Grab the dial with the gripper',
        '# Steps:\n    #  1. Put gripper above the dial\n    #  2. Drop gripper around the dial\n    #  3. Turn the dial\n    # First, put the gripper above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the gripper is still not vertically aligned with the dial, go back to\n    # putting the gripper above the dial. dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the dial and the robot\'s gripper is open"):\n        robot.put("gripper around dial")\n    # As long as the gripper is still vertically aligned with the dial, it\'s\n    #',
        '# Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial\n    # If the gripper is not above the dial, move it above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the gripper is above the dial, turn the dial.\n    if check("the robot\'s gripper is vertically aligned with the dial"):\n        robot.turn("dial")\n\n\n# dial-turn-right: turn the dial to the right\ndef dial_turn_right(robot):\n    # Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial to the right\n    # If the gripper is not above the dial, move it above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the gripper is above the dial, turn the',
        '\n    # Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial\n    # First, put the gripper above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the gripper is vertically aligned with the dial, turn the dial.\n    if check("the robot\'s gripper is vertically aligned with the dial"):\n        robot.turn("dial")\n\n\n#',
        '\n    # Steps:\n    #  1. Put gripper around the dial\n    #  2. Turn the dial\n    # If the gripper is not around the dial, move the gripper around the dial.\n    if check("the robot\'s gripper is not around the dial"):\n        robot.put("gripper around dial")\n    # If the gripper is around the dial, turn the dial.\n    if check("the robot\'s gripper is around the dial"):\n        robot.turn("dial")\n\n\n',
    ],
    "disassemble": [
        '# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench with the gripper\n    #  3. Pull the wrench off the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # If the wrench becomes left of the gripper, go back to putting the gripper\n    # above the wrench. wrench.\n    if check("wrench is not left of the robot\'s gripper and wrench is not forward aligned with the robot\'s gripper"):\n        robot.grab("wrench")\n    # As long the gripper is still mostly around the wrench and the wrench isn\'t\n    # lined up with the peg, line up the wrench with the peg.\n    if check("the robot\'s gripper is forward aligned with the wrench and the wrench is not horizontally aligned with peg"):\n        robot.align("wrench to peg")\n    # If the wrench is lined lined up with the peg to the side, insert it.\n    if check("wrench is horizontally aligned with peg"):\n        robot.insert("wrench into peg")\n\n\n# assemble: put the wrench on the peg\ndef assemble(robot):\n    # Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench with the gripper\n    #  3. Line the wrench up with the peg\n    #  4. Slide the wrench sideways onto the peg\n    # First',
        '# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Pull the wrench off the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not almost vertically aligned with wrench"):\n        robot.put("gripper above wrench")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with wrench and the robot\'s gripper is open"):\n        robot.put("gripper around wrench")\n    # As long as the gripper is still vertically aligned with the wrench,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with wrench"):\n        robot.pull("wrench off peg")\n\n\n# assemble: put the wrench on the peg\ndef assemble(robot):\n    # Steps:\n   ',
        '# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Pull the wrench off the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # If the wrench becomes left of the gripper, go back to putting the gripper\n    # above the wrench.\n    if check check("wrench is not left of the robot\'s gripper and wrench is not forward aligned with the robot\'s gripper"):\n        robot.grab("wrench")\n    # As long the gripper is still mostly around the wrench and the wrench isn\'t\n    # lined up with the hole, line up the wrench with the hole.\n    if check("the robot\'s gripper is forward aligned with the wrench and the wrench is not horizontally aligned with hole"):\n        robot.align("wrench to hole")\n    # If the wrench is lined up with the hole, pull it it off.\n    if check("wrench is horizontally aligned with hole"):\n        robot.pull("wrench off peg")\n\n\n# assemble: put the wrench on the peg\ndef assemble(robot):# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Line the wrench up with the peg\n    #  4. Slide the wrench onto the peg\n    # First, put the gripper above the wrench.\n    if check("the robot',
        '# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench with the gripper\n    #  3. Pull the wrench off the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # If the wrench is left of the gripper, go back to putting the gripper\n    # above the wrench. wrench.\n    if check("wrench is not left of the robot\'s gripper"):\n        robot.grab("wrench")\n    # As long as the gripper is still mostly around the wrench and the wrench\n    # isn\'t lined up with the hole, line up the wrench with the hole.\n    if check("the robot\'s gripper is forward aligned with the wrench and the wrench is not horizontally aligned with hole"):\n        robot.align("wrench to hole")\n    # If the wrench is lined up with the hole to the side, insert it. it.\n    if check("wrench is horizontally aligned with hole"):\n        robot.insert("wrench into hole")\n\n\n# assemble: put the wrench on the peg\ndef assemble(robot):# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench with the gripper\n    #  3. Pull the wrench off the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot',
        '\n    # Steps:\n    #  1. Grab the wrench\n    #  2. Pull the wrench off the peg\n    # Grab the wrench.\n    if check("the robot\'s gripper is not around wrench"):\n        robot.grab("wrench")\n    # If the wrench is still on the peg, pull it off.\n    if check("wrench is on the peg"):\n        robot.pull("wrench off peg")\n\n\n# assemble: put the wrench on the peg\ndef assemble(robot):\n',
        '# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Pull the wrench off the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # If the wrench becomes left of the gripper, go back to putting the gripper\n    # above the wrench.\n    if check check("wrench is not left of the robot\'s gripper and wrench is not forward aligned with the robot\'s gripper"):\n        robot.grab("wrench")\n    # As long the gripper is still mostly around the wrench and the wrench isn\'t\n    # lined up with the peg, line up the wrench with the peg.\n    if check("the robot\'s gripper is forward aligned with the wrench and the wrench is not horizontally aligned with peg"):\n        robot.align("wrench to peg")\n    # If the wrench is lined up with the peg to the side side, pull it off.\n    if check("wrench is horizontally aligned with peg"):\n        robot.pull("wrench off peg")\n\n\n# assemble: put the wrench on the peg\ndef assemble(robot):\n    # Steps:\n    #  1. Put gripper above the wrench\n    #  2. Grab the wrench\n    #  3. Line the wrench up with the peg\n    #  4. Slide the wrench onto the peg\n    # First, put the gripper above the wrench.\n ',
        '\n    # Steps:\n    #  1. Grab the wrench\n    #  2. Pull the wrench off the peg\n    # Grab the wrench.\n    if check("the robot\'s gripper is not around the wrench"):\n        robot.grab("wrench")\n    # If the wrench is still on the peg, pull it off.\n    if check("the wrench is on the peg"):\n        robot.pull("wrench off peg")\n\n\n# peg-insert-topdown: insert the peg into the hole',
        '# Steps:\n    #  1. Put gripper above the wrench\n    #  2. Drop gripper around the wrench\n    #  3. Pull the wrench off the peg\n    # First, put the gripper above the wrench.\n    if check("the robot\'s gripper is not vertically aligned with the wrench"):\n        robot.put("gripper above wrench")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the wrench and the robot\'s gripper is open"):\n        robot.put("gripper around wrench")\n    # As long as the gripper is still vertically aligned with the wrench,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the wrench"):\n        robot.pull("wrench off peg")\n\n\n# assemble: put the wrench on the peg\ndef assemble(robot):\n    # Steps:',
    ],
    "drawer-close": [
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
        '# Steps:\n    #  1. Put gripper roughly around the drawer handle\n    #  2. Push the drawer closed\n    # If the gripper is not near the drawer handle, move it to the drawer\n    # handle.\n    # We don\'t need to be careful about the direction, since the drawer is large\n    # and we\'re just pushing it (unlike when opening the drawer).\n    if check("the robot\'s gripper is not near the drawer handle"):\n        robot.grab \n        robot.grab("drawer handle")\n    # If the drawer is aligned with the gripper as seen from in front, we can\n    # push the drawer closed.\n    if check("the robot\'s gripper is forward aligned with drawer handle"):\n        robot.push("drawer closed")\n\n\n# button-press-topdown: push the button down from above\ndef button_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2',
    ],
    "faucet-open": [
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Turn the faucet handle left\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move("gripper to right of faucet handle")\n    # If the robot robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle now by moving the gripper left.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet left")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Turn the faucet handle right\n    # If the robot\'s gripper is not vertically aligned',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move(" \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet open now by moving the gripper left.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet left")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet left harder")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the the faucet handle is right of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start turning\n    if check("the',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move(" \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet open now by moving the gripper left.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet left")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet left harder")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the the faucet handle is right of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start turning\n    if check("the',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the robot\'s gripper is not vertically lined up with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet open now by moving the gripper left.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet left")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet left harder")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the the faucet handle is right of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start turning\n    if check("the',
        '# Steps:\n    #  1. Put gripper above the faucet handle\n    #  2. Turn the faucet handle left\n    # First, put the gripper above the faucet handle.\n    if check("the robot\'s gripper is not vertically aligned with faucet handle"):\n        robot.put("gripper above faucet handle")\n    # If the faucet handle is right of the robot\'s gripper, turn the faucet\n    # handle left.\n    if check("the robot\'s gripper is vertically aligned with with faucet handle and the faucet handle is right of the robot\'s gripper"):\n        robot.turn("faucet handle left")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n    #  1. Put gripper above the faucet handle\n    #  2. Turn the faucet handle right\n    # First, put the gripper above the faucet handle.\n    if check("the robot\'s gripper is not vertically aligned with faucet handle"):\n        robot.put("gripper above faucet',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Turn the faucet handle left\n    # If the robot\'s gripper is not right of the faucet handle, move it there.\n    if check("the robot\'s gripper is not right of the faucet handle"):\n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is right of the faucet handle, turn the faucet\n    # handle left.\n    if \n    if check("the robot\'s gripper is right of the faucet handle"):\n        robot.turn("faucet handle left")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Turn the faucet handle right\n    # If the robot\'s gripper is not left of the faucet handle, move it there.\n    if check("the robot\'s gripper is not left of the faucet',
        '\n    # Steps:\n    #  1. Put gripper above faucet handle\n    #  2. Turn the faucet left\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle"):\n        robot.put("gripper above faucet handle")\n    if check("the robot\'s gripper is vertically aligned with the faucet handle"):\n        robot.turn("faucet left")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n   ',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle to open the faucet\n    #  3. Turn the faucet handle harder\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot. \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet open now by moving the gripper left.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet left")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet left harder")\n\n\n# faucet-close: turn the faucet right\ndef faucet_close(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle to close the faucet\n    #  3. Turn the faucet handle harder\n    # If the the faucet handle is right of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start turning\n    if check',
    ],
    "faucet-close": [
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move(" \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle now by moving the gripper right.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet right")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet right harder")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move(" \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle now by moving the gripper right.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet right")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet right harder")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the robot\'s gripper is not vertically lined up with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle now by moving the gripper right.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet right")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet right harder")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the robot\'s gripper is not vertically lined up with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the robot\'s gripper is not vertically lined up with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is below the faucet handle"):\n        robot.move \n        robot.move("gripper to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle now by moving the gripper right.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet right")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet right harder")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the robot\'s gripper is not vertically lined up with the faucet handle,\n    # we should move the gripper near the faucet handle to start turning\n    if check',
        '\n    # Steps:\n    #  1. Turn the faucet right\n    # If the faucet is turned left, turn it right.\n    if check("the faucet is turned left"):\n        robot.turn("faucet right")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Turn the faucet left\n    # If the faucet is turned right, turn it left.\n    if check("the faucet is turned right"):',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the faucet handle is left of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start pushing\n    if check("the faucet handle is left of the robot\'s gripper and the robot\'s gripper is not near the faucet handle"):\n        robot.move("gripper to to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle right now by moving the gripper right.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet right")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet \n        robot.turn("faucet right harder")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the faucet handle is right of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start pushing\n    if check("the faucet',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Turn the faucet handle right\n    # If the robot\'s gripper is not vertically aligned with the faucet handle,\n    # we should move the gripper near the faucet handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the faucet handle and the robot\'s gripper is left of the faucet handle"):\n        robot.move("gripper to right of faucet handle")\n    # If the the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle now by moving the gripper right.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet right")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Turn the faucet handle left\n    # If the robot\'s gripper is not vertically',
        '# Steps:\n    #  1. Put gripper right of the faucet handle\n    #  2. Start turning the faucet handle right\n    #  3. Turn the faucet handle right harder\n    # If the faucet handle is left of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start turning\n    if check("the faucet handle is left of the robot\'s gripper and the robot\'s gripper is not near the faucet handle"):\n        robot.move("gripper to to right of faucet handle")\n    # If the robot\'s gripper is near the faucet handle we can probably turn the\n    # faucet handle now by moving the gripper right.\n    if check("the robot\'s gripper is near the faucet handle"):\n        robot.turn("faucet right")\n    # If the robot\'s gripper is starting to be in front of the faucet handle,\n    # turn harder.\n    if check("the robot\'s gripper is in front of the faucet handle"):\n        robot.turn("faucet right right harder")\n\n\n# faucet-open: turn the faucet left\ndef faucet_open(robot):\n    # Steps:\n    #  1. Put gripper left of the faucet handle\n    #  2. Start turning the faucet handle left\n    #  3. Turn the faucet handle left harder\n    # If the faucet handle is right of the robot\'s gripper, we should move the\n    # gripper near the faucet handle to start turning\n    if check("the faucet handle is right of the robot\'s',
    ],
    "hammer": [
        '# Steps:\n    #  1. Put gripper above the hammer\n    #  2. Grab the hammer with the gripper\n    #  3. Line the hammer up with the nail\n    #  4. Hit the nail with the hammer\n    # First, put the gripper above the hammer.\n    if check("the robot\'s gripper is not vertically aligned with the hammer"):\n        robot.put("gripper above hammer")\n    # Once the gripper is above the hammer, grab it. the hammer.\n    if check("the robot\'s gripper is vertically aligned with the hammer and the robot\'s gripper is not around the hammer"):\n        robot.grab("hammer")\n    # Once the gripper is around the hammer, line up the hammer with the nail.\n    if check("the robot\'s gripper is around the hammer"):\n        robot.align("hammer to nail")\n    # Once the hammer is lined up with the nail, hit the nail with the hammer.\n    if check("the robot\'s gripper is forward aligned with the the hammer"):\n        robot.hit("hammer on nail")\n\n\n# nail-insert-topdown: insert the nail into the hole from above\ndef nail_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the nail\n    #  2. Grab the nail with the gripper\n    #  3. Line the nail up with the hole\n    #  4. Slide the nail sideways into the hole\n    # First, put the gripper above the nail.\n  ',
        '# Steps:\n    #  1. Put gripper above the hammer\n    #  2. Grab the hammer\n    #  3. Move the hammer to the nail\n    #  4. Hit the nail with the hammer\n    # First, put the gripper above the hammer.\n    if check("the robot\'s gripper is not vertically aligned with hammer"):\n        robot.put("gripper above hammer")\n    # If the hammer becomes left of the gripper, go back to putting the gripper gripper\n    # above the hammer.\n    if check("hammer is not left of the robot\'s gripper and hammer is not forward aligned with the robot\'s gripper"):\n        robot.grab("hammer")\n    # As long the gripper is still mostly around the hammer and the hammer isn\'t\n    # lined up with the nail, line up the hammer with the nail.\n    if check("the robot\'s gripper is forward aligned with hammer and hammer is not horizontally aligned with nail"):\n        robot.align("hammer to nail")\n    # If the hammer is lined up with the nail, hit the nail with the hammer.\n    if check("hammer is horizontally aligned with nail"):\n        robot.hit("hammer on nail")\n\n\n# peg-insert-topdown: insert the peg into the hole from above\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole',
        '# Steps:\n    #  1. Put gripper above the hammer\n    #  2. Grab the hammer with the gripper\n    #  3. Put gripper above the nail\n    #  4. Hit the nail with the hammer\n    # First, put the gripper above the hammer.\n    if check("the robot\'s gripper is not vertically aligned with the hammer"):\n        robot.put("gripper above hammer")\n    # If the gripper is not around the hammer, go back to putting putting the gripper\n    # above the hammer.\n    if check("the robot\'s gripper is not around the hammer"):\n        robot.grab("hammer")\n    # If the gripper is around the hammer and the gripper is not above the nail,\n    # put the gripper above the nail.\n    if check("the robot\'s gripper is around the hammer and the robot\'s gripper is not vertically aligned with the nail"):\n        robot.put("gripper above nail")\n    # If the gripper is around the hammer and the gripper is is above the nail,\n    # hit the nail with the hammer.\n    if check("the robot\'s gripper is around the hammer and the robot\'s gripper is vertically aligned with the nail"):\n        robot.hit("nail with hammer")\n\n\n# nail: insert the nail into the hole\ndef nail(robot):\n    # Steps:\n    #  1. Put gripper above the nail\n    #  2. Grab the nail with the gripper\n    #  3. Put gripper above the hole\n   ',
        '# Steps:\n    #  1. Put gripper above nail\n    #  2. Drop gripper around nail\n    #  3. Hit the nail with the hammer\n    # First, put the gripper above the nail.\n    if check("the robot\'s gripper is not almost vertically aligned with nail"):\n        robot.put("gripper above nail")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with nail and the robot\'s gripper is open"):\n        robot.put("gripper around nail")\n    # As long as the gripper is still vertically aligned with the nail,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with nail"):\n        robot.pull("away from nail")\n\n\n# hammer-side: hit the nail with the hammer from the side\ndef hammer_side(robot):# Steps:\n',
        '# Steps:\n    #  1. Put gripper above the hammer\n    #  2. Drop gripper around the hammer\n    #  3. Hit the nail with the hammer\n    # First, put the gripper above the hammer.\n    if check("the robot\'s gripper is not vertically aligned with the hammer"):\n        robot.put("gripper above hammer")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the hammer and the robot\'s gripper is open"):\n        robot.put("gripper around hammer")\n    # As long as the gripper is still vertically aligned with the hammer,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the hammer"):\n        robot.pull("hammer")\n\n\n# nail-pull: pull the nail out\ndef nail_pull(robot):\n    # Steps:',
        '# Steps:\n    #  1. Put gripper above the hammer\n    #  2. Grab the hammer\n    #  3. Put the hammer above the nail\n    #  4. Hit the nail with the hammer\n    # First, put the gripper above the hammer.\n    if check("the robot\'s gripper is not vertically aligned with the hammer"):\n        robot.put("gripper above hammer")\n    # As long as the gripper is almost lined up, closing it should line it it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the hammer and the robot\'s gripper is open"):\n        robot.put("gripper around hammer")\n    # As long as the gripper is still vertically aligned with the hammer,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the hammer"):\n        robot.pull("hammer")\n    # As long as the gripper is still vertically aligned with the hammer, hammer,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the hammer"):\n        robot.pull("hammer")\n    # As long as the gripper is still vertically aligned with the hammer,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the hammer"):\n        robot.pull("hammer")\n    # As long as the gripper is still vertically aligned with the hammer,\n    # it',
        '# Steps:\n    #  1. Put the hammer above the nail\n    #  2. Drop the hammer on the nail\n    # First, put the hammer above the nail.\n    if check("the robot\'s gripper is not vertically aligned with the nail"):\n        robot.put("hammer above nail")\n    # As long as the hammer is still above the nail, drop it.\n    if check("the robot\'s gripper is vertically aligned with the nail"):\n        robot.drop("hammer on nail nail")\n\n\n# hammer-topdown: hit the nail with the hammer from above\ndef hammer_topdown(robot):# Steps:\n    #  1. Put the hammer above the nail\n    #  2. Drop the hammer on the nail\n    # First, put the hammer above the nail.\n    if check("the robot\'s gripper is not vertically aligned with the nail"):\n        robot.put("hammer above nail")\n    # As long as the hammer is still above the nail, drop it.\n   ',
        '# Steps:\n    #  1. Put gripper above the hammer\n    #  2. Drop gripper around hammer\n    #  3. Push hammer down onto nail\n    # First, put the gripper above the hammer.\n    if check("the robot\'s gripper is not vertically aligned with the hammer"):\n        robot.put("gripper above hammer")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with the hammer and the robot\'s gripper is open"):\n        robot.put("gripper around hammer")\n    # As long as the gripper is still vertically aligned with the hammer,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the hammer"):\n        robot.pull("hammer down")\n\n\n# nail: hit the nail with the hammer\ndef nail(robot):\n    # Steps:\n  ',
    ],
    "box-close": [
        '# Steps:\n    #  1. Pick up the box lid\n    #  2. Align the box lid with the box\n    #  3. Place the box lid on the box\n    # First, pick up the box lid.\n    if check("the robot\'s gripper is not around box lid"):\n        robot.put("gripper around box lid")\n    # Then, align the box lid with the box.\n    if check("the robot\'s gripper is around box lid"):\n        robot.align("box lid to box")\n    # Finally, place the box lid on the box.\n    if check("the robot\'s gripper is aligned with box lid"):\n        robot.put("box lid on box")\n\n\n# box-open: pick up the box lid and place it on the table\ndef box_open(robot):# Steps:\n    #  1. Pick up the box lid\n    #  2. Align the box lid with the table\n    #  3. Place the box lid',
        '# Steps:\n    #  1. Put gripper above box lid\n    #  2. Drop gripper around box lid\n    #  3. Pick up box lid\n    #  4. Put gripper above box\n    #  5. Drop gripper around box\n    #  6. Place box lid on box\n    # First, put the gripper above the box lid.\n    if check("the robot\'s gripper is not vertically aligned with box lid"):\n        robot.put \n        robot.put("gripper above box lid")\n    # If the gripper is not around the box lid, drop it around the box lid.\n    if check("the robot\'s gripper is vertically aligned with box lid and the robot\'s gripper is not around box lid"):\n        robot.put("gripper around box lid")\n    # If the gripper is around the box lid, pick it up.\n    if check("the robot\'s gripper is around box lid"):\n        robot.pick("box lid")\n    # Put the gripper gripper above the box.\n    if check("the robot\'s gripper is not vertically aligned with box"):\n        robot.put("gripper above box")\n    # If the gripper is not around the box, drop it around the box.\n    if check("the robot\'s gripper is vertically aligned with box and the robot\'s gripper is not around box"):\n        robot.put("gripper around box")\n    # If the gripper is around the box, place the box lid on the box.\n    if check("the robot\'s gripper is is around box"):\n        robot.place("box lid on box")\n\n\n# box-open: pick up the box lid and place it on the table\ndef box_open(robot):\n    # Steps:\n    #  1. Put gripper above box lid\n    #  2. Drop gripper around box lid\n    #  3. Pick up box lid\n    #  4. Put gripper above table\n    #  5. Drop gripper around table\n    #  6. Place box lid',
        '# Steps:\n    #  1. Pick up the box lid\n    #  2. Put the box lid on the box\n    # First, pick up the box lid.\n    if check("the robot\'s gripper is not around the box lid"):\n        robot.put("gripper around box lid")\n    # As long as the gripper is around the box lid, pick it up.\n    if check("the robot\'s gripper is around the box lid"):\n        robot.pick("box lid")\n    # Now that the box lid is picked up, put it on the box.\n    if check("the robot\'s gripper is holding the box lid"):\n        robot.put("box lid on box")\n\n\n# box-open: pick up the box lid and place it on the table\ndef box_open(robot):\n    # Steps:\n    #  1. Pick up the box lid\n    #  2. Put the box lid on the table\n    # First, pick up the box lid.\n ',
        '# Steps:\n    #  1. Put gripper above the box lid\n    #  2. Drop gripper around the box lid\n    #  3. Pick up the box lid\n    #  4. Put gripper above the box\n    #  5. Drop gripper around the box\n    #  6. Place the box lid on the box\n    # First, put the gripper above the box lid.\n    if check("the robot\'s gripper is not vertically aligned with the the box lid"):\n        robot.put("gripper above box lid")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is vertically aligned with the box lid and the robot\'s gripper is open"):\n        robot.put("gripper around box lid")\n    # As long as the gripper is still vertically aligned with the box lid,\n    # it\'s being opened, so keep pulling.\n    if check("the check("the robot\'s gripper is vertically aligned with the box lid"):\n        robot.pull("box lid open")\n    # Once the gripper is around the box lid, we can pick it up.\n    if check("the robot\'s gripper is around the box lid"):\n        robot.pick("box lid up")\n    # Now that the box lid is up, put the gripper above the box.\n    if check("the robot\'s gripper is not vertically aligned with the box"):\n        robot.put("gripper above box")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is vertically aligned with the box and the robot\'s gripper is open"):\n        robot.put("gripper around box")\n    # As long as the gripper is still vertically aligned with the box,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the box"):\n        robot.pull("box open open")\n    # Once the gripper is around the box, we can put the box lid on the box.\n    if check("the robot\'s gripper is around the box"):\n        robot.put("box lid down")\n\n\n# box-open: pick up the box lid and place it on the table\ndef box_open(robot):\n    # Steps:\n    #  1. Put gripper above the box lid\n    #  2. Drop gripper around the box lid\n    #  3. Pick up the',
        '# Steps:\n    #  1. Put gripper above the box lid\n    #  2. Drop gripper around the box lid\n    #  3. Pick up the box lid\n    #  4. Move the gripper above the box\n    #  5. Drop the gripper around the box\n    #  6. Place the box lid on the box\n    # First, put the gripper above the box lid.\n    if check("the robot\'s gripper is not vertically aligned aligned with the box lid"):\n        robot.put("gripper above box lid")\n    # If the gripper is not around the box lid, drop it around the box lid.\n    if check("the robot\'s gripper is vertically aligned with the box lid and the robot\'s gripper is not around box lid"):\n        robot.put("gripper around box lid")\n    # Pick up the box lid.\n    if check("the robot\'s gripper is around box lid"):\n        robot.pick("box lid")\n    # Move the gripper gripper above the box.\n    if check("the robot\'s gripper is not vertically aligned with the box"):\n        robot.put("gripper above box")\n    # Drop the gripper around the box.\n    if check("the robot\'s gripper is vertically aligned with the box and the robot\'s gripper is not around box"):\n        robot.put("gripper around box")\n    # Place the box lid on the box.\n    if check("the robot\'s gripper is around box"):\n        robot.place("box lid on box")\n\n\n# box-open: pick up the box lid and place it on the table\ndef box_open(robot):\n    # Steps:\n    #  1. Put gripper above the box lid\n    #  2. Drop gripper around the box lid\n    #  3. Pick up the box lid\n    #  4. Move the gripper above the table\n    #  5. Drop the gripper around the table\n    #  6. Place the box lid on the table\n   ',
        '# Steps:\n    #  1. Put gripper above the box lid\n    #  2. Drop gripper around the box lid\n    #  3. Pick up the box lid\n    #  4. Put gripper above the box\n    #  5. Drop gripper around the box\n    #  6. Put the box lid on the box\n    # First, put the gripper above the box lid.\n    if check("the robot\'s gripper is not vertically aligned with the the box lid"):\n        robot.put("gripper above box lid")\n    # If the box lid becomes left of the gripper, go back to putting the gripper\n    # above the box lid.\n    # Because the box lid is a long object, check if the gripper is lined up with\n    # it from the front instead of around it.\n    if check("box lid is not left of the robot\'s gripper and box lid is not forward aligned with the robot\'s gripper"):\n        robot.put("gripper around box lid")\n    # If the gripper is around the box lid, pick it up.\n    if check("the robot\'s gripper is around the box lid"):\n        robot.pick_up("box lid")\n    # Put the gripper above the box.\n    if check("the robot\'s gripper is not vertically aligned with the box"):\n        robot.put("gripper above box")\n    # If the box becomes left of the gripper, go back to putting the gripper\n    # above the box.\n    # Because the box is is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("box is not left of the robot\'s gripper and box is not forward aligned with the robot\'s gripper"):\n        robot.put("gripper around box")\n    # If the gripper is around the box, put the box lid on the box.\n    if check("the robot\'s gripper is around the box"):\n        robot.put("box lid on box")\n\n\n# box-open: pick up the',
        '# Steps:\n    #  1. Put the gripper above the box lid\n    #  2. Drop the gripper around the box lid\n    #  3. Pick up the box lid\n    #  4. Put the gripper above the box\n    #  5. Drop the gripper around the box\n    #  6. Put the box lid on top of the box\n    # First, put the gripper above the box lid.\n    if check("the robot\'s gripper gripper is not vertically aligned with the box lid"):\n        robot.put("gripper above box lid")\n    # If the gripper is not around the box lid, drop it around the box lid.\n    if check("the robot\'s gripper is vertically aligned with the box lid and the robot\'s gripper is not around box lid"):\n        robot.put("gripper around box lid")\n    # If the gripper is around the box lid, pick up the box lid.\n    if check("the robot\'s gripper is around box lid"):\n        robot. \n        robot.pick("box lid")\n    # Put the gripper above the box.\n    if check("the robot\'s gripper is not vertically aligned with the box"):\n        robot.put("gripper above box")\n    # If the gripper is not around the box, drop it around the box.\n    if check("the robot\'s gripper is vertically aligned with the box and the robot\'s gripper is not around box"):\n        robot.put("gripper around box")\n    # If the gripper is around the box, put the box box lid on top of the box.\n    if check("the robot\'s gripper is around box"):\n        robot.put("box lid on top of box")\n\n\n# box-open: pick up the box lid and move it away from the box\ndef box_open(robot):\n    # Steps:\n    #  1. Put the gripper above the box lid\n    #  2. Drop the gripper around the box lid\n    #  3. Pick up the box lid\n    #  4. Put',
        '# Steps:\n    #  1. Put gripper above the box lid\n    #  2. Drop gripper around the box lid\n    #  3. Pick up the box lid\n    #  4. Put gripper above the box\n    #  5. Drop gripper around the box\n    #  6. Place the box lid on the box\n    # Put the gripper above the box lid.\n    if check("the robot\'s gripper is not vertically aligned with the box lid lid"):\n        robot.put("gripper above box lid")\n    # Drop the gripper around the box lid.\n    if check("the robot\'s gripper is vertically aligned with the box lid and the robot\'s gripper is not around box lid"):\n        robot.put("gripper around box lid")\n    # Pick up the box lid.\n    if check("the robot\'s gripper is around box lid"):\n        robot.pick_up("box lid")\n    # Put the gripper above the box.\n    if check(" check("the robot\'s gripper is not vertically aligned with the box"):\n        robot.put("gripper above box")\n    # Drop the gripper around the box.\n    if check("the robot\'s gripper is vertically aligned with the box and the robot\'s gripper is not around box"):\n        robot.put("gripper around box")\n    # Place the box lid on the box.\n    if check("the robot\'s gripper is around box"):\n        robot.place("box lid on box")\n\n\n# box-open: pick up',
    ],
    "handle-press-side": [
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line up the robot\'s gripper from the side.\n    if check("the robot\'s gripper is not horizontally aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is horizontally aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line up the robot\'s gripper from the side.\n    if check("the robot\'s gripper is not horizontally aligned with the handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is horizontally aligned with the handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    #',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line up the robot\'s gripper from the side.\n    if check("the robot\'s gripper is not horizontally aligned with the handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is horizontally aligned with the handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    #',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line up the robot\'s gripper from the side.\n    if check("the robot\'s gripper is not horizontally aligned with the handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is horizontally aligned with the handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    #',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line up the robot\'s gripper from the side.\n    if check("the robot\'s gripper is not horizontally aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is horizontally aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line up the robot\'s gripper from the side.\n    if check("the robot\'s gripper is not horizontally aligned with the handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is horizontally aligned with the handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    #',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from the side.\n    # Line up the robot\'s gripper from the side.\n    if check("the robot\'s gripper is not horizontally aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle. handle.\n    if check("the robot\'s gripper is horizontally aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-press-topdown: push down the handle from above\ndef handle_press_topdown(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line',
    ],
    "handle-press": [
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle handle.\n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-pull: pull the handle\ndef handle_pull(robot):# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Pull up on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n   ',
        '# Steps:\n    #  1. Line up the gripper as viewed from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle handle.\n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):\n    # Steps:\n    #  1. Line up the gripper as viewed from below\n    #  2. Pull up on the handle from the bottom\n    # Because this is "topdown", we just need to line up the gripper from below.\n    # Line up the robot\'s gripper from below',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle.\n    if \n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):\n    # Steps:\n    #  1. Put gripper below the handle\n    #  2. Pull up on the handle\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from below.\n    if check("',
        '\n    # Steps:\n    #  1. Put gripper above handle\n    #  2. Push down on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle.\n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle.\n    if \n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):# Steps:\n    #  1. Put gripper below the handle\n    #  2. Pull up on the handle\n    # Because this is "topdown", we just need to line up the gripper from below.\n    # Line up the robot\'s gripper from below.\n    if check("the robot\'s',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle.\n    if \n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):\n    # Steps:\n    #  1. Put gripper below the handle\n    #  2. Pull up on the handle\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from below.\n    if check("',
        '# Steps:\n    #  1. Line up the gripper as seen from above\n    #  2. Push down on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle handle.\n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-pull: pull the handle\ndef handle_pull(robot):\n    # Steps:\n    #  1. Line up the gripper as seen from above\n    #  2. Pull up on the handle from the top\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle\n    # Because this is "topdown", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just push down on the handle.\n    if \n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.push("down on handle")\n\n\n# handle-pull: pull up the handle\ndef handle_pull(robot):\n    # Steps:\n    #  1. Put gripper below the handle\n    #  2. Pull up on the handle\n    # Because this is "bottomup", we just need to line up the gripper from below.\n    # Line up the robot\'s gripper from below.\n    if check("',
    ],
    "handle-pull-side": [
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Grab the handle with the gripper\n    #  3. Pull up on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle becomes left of the gripper, go back to putting the gripper\n    # above the handle. handle.\n    if check("handle is not left of the robot\'s gripper and handle is not forward aligned with the robot\'s gripper"):\n        robot.grab("handle")\n    # As long the gripper is still mostly around the handle and the handle isn\'t\n    # lined up with the gripper, line up the handle with the gripper.\n    if check("the robot\'s gripper is forward aligned with the handle and the handle is not vertically aligned with the robot\'s gripper"):\n        robot.align("handle to gripper")\n    # If If the handle is lined up with the gripper, pull up on the handle.\n    if check("handle is vertically aligned with the robot\'s gripper"):\n        robot.pull("up on handle")\n\n\n# handle-push-side: push down on the handle from the side\ndef handle_push_side(robot):\n    # Steps:\n    #  1. Put gripper above the handle\n    #  2. Grab the handle with the gripper\n    #  3. Push down on the handle\n    # First',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Pull up on the handle from the side\n    # Because this is "side", we just need to line up the gripper from above.\n    # Line up the robot\'s gripper from above.\n    if check("the robot\'s gripper is not vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # Now that the gripper is lined up, just pull up on the handle. handle.\n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.pull("up on handle")\n\n\n# handle-push-side: push down the handle from the side\ndef handle_push_side(robot):\n    # Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle from the side\n    # Because this is "side", we just need to line up the gripper from above.\n    # Line up the robot\'s',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Grab the handle with the gripper\n    #  3. Pull up the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle is left of the gripper, go back to putting the gripper\n    # above the handle.\n    if \n    # Because the handle is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("handle is not left of the robot\'s gripper and handle is not forward aligned with the robot\'s gripper"):\n        robot.grab("handle")\n    # As long the gripper is still mostly around the handle and the handle isn\'t\n    # lined up with the robot, line up the handle with the robot.\n    if check("the robot\'s gripper is forward aligned aligned with the handle and the handle is not vertically aligned with the robot"):\n        robot.align("handle to robot")\n    # If the handle is lined up with the robot, pull up the handle.\n    if check("handle is vertically aligned with the robot"):\n        robot.pull("handle up")\n\n\n# handle-push-side: push down the handle from the side\ndef handle_push_side(robot):\n    # Steps:\n    #  1. Put gripper above the handle\n    #  2. Grab the',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Grab the handle with the gripper\n    #  3. Pull the handle up\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle is left of the gripper, go back to putting the gripper\n    # above the handle.\n    if \n    if check("handle is not left of the robot\'s gripper"):\n        robot.grab("handle")\n    # If the handle is left of the gripper, pull the handle up.\n    if check("handle is left of the robot\'s gripper"):\n        robot.pull("handle up")\n\n\n# handle-push-side: push down the handle from the side\ndef handle_push_side(robot):\n    # Steps:\n    #  1. Put gripper above the handle\n    #  2.',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Grab the handle with the gripper\n    #  3. Pull the handle up\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle becomes left of the gripper, go back to putting the gripper\n    # above the handle.\n    if \n    # Because the handle is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("handle is not left of the robot\'s gripper and handle is not forward aligned with the robot\'s gripper"):\n        robot.grab("handle")\n    # As long the gripper is still mostly around the handle and the handle isn\'t\n    # lined up with the robot, line up the handle with the robot.\n    if check("the robot\'s gripper is forward aligned aligned with the handle and the handle is not vertically aligned with the robot"):\n        robot.align("handle to robot")\n    # If the handle is lined up with the robot to the side, pull it up.\n    if check("handle is vertically aligned with the robot"):\n        robot.pull("handle up")\n\n\n# handle-pull-topdown: pull up the handle from the top\ndef handle_pull_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the handle\n    #  ',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Grab the handle with the gripper\n    #  3. Pull up on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle is left of the gripper, go back to putting the gripper\n    # above the handle. handle.\n    # Because the handle is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("handle is not left of the robot\'s gripper and handle is not forward aligned with the robot\'s gripper"):\n        robot.grab("handle")\n    # As long the gripper is still mostly around the handle and the handle isn\'t\n    # lined up with the robot\'s gripper, line up the handle with the robot\'s\n    # gripper. gripper.\n    if check("the robot\'s gripper is forward aligned with the handle and the handle is not vertically aligned with the robot\'s gripper"):\n        robot.align("handle to gripper")\n    # If the handle is lined up with the robot\'s gripper, pull up on the handle.\n    if check("handle is vertically aligned with the robot\'s gripper"):\n        robot.pull("handle up")\n\n\n# handle-push-side: push down the handle from the side\ndef handle_push_side(robot):\n    # Steps',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Pull up on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle is left of the gripper, go back to putting the gripper\n    # above the handle.\n    if check("the handle is left of the robot\'s gripper"):\n        robot.pull("handle up")\n\n\n# handle-push-side: push down the handle from the side\ndef handle_push_side(robot):\n    # Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle is left of the',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Pull up on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle is left of the gripper, go back to putting the gripper\n    # above the handle.\n    if check("handle is not left of the robot\'s gripper"):\n        robot.pull("handle up")\n\n\n# handle-push-side: push down the handle from the side\ndef handle_push_side(robot):\n    # Steps:\n    #  1. Put gripper above the handle\n    #  2. Push down on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # If the handle is left of the',
    ],
    "handle-pull": [
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull up on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the handle"):\n        robot.pull("up on handle")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    #',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull open the handle\n    # First, put the gripper mostly above the handle.\n    if check("the robot\'s gripper is not almost vertically aligned with handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with handle"):\n        robot.pull("away from handle")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    # Steps:',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull up the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with the handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the handle"):\n        robot.pull("away from handle")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    # Steps:',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull up the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with the handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the handle"):\n        robot.pull("handle up")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    # Steps:\n',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull up the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with the handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the handle"):\n        robot.pull("handle up")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    # Steps:\n',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull up on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the handle"):\n        robot.pull("up on handle")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    #',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull up on the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the handle"):\n        robot.pull("up on handle")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    #',
        '# Steps:\n    #  1. Put gripper above the handle\n    #  2. Drop gripper around the handle\n    #  3. Pull up the handle\n    # First, put the gripper above the handle.\n    if check("the robot\'s gripper is not vertically aligned with the handle"):\n        robot.put("gripper above handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with the handle and the robot\'s gripper is open"):\n        robot.put("gripper around handle")\n    # As long as the gripper is still vertically aligned with the handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the handle"):\n        robot.pull("handle up")\n\n\n# handle-push: push down the handle\ndef handle_push(robot):\n    # Steps:\n',
    ],
    "lever-pull": [
        '# Steps:\n    #  1. Put gripper above the lever\n    #  2. Pull the lever up\n    # First, put the gripper above the lever.\n    if check("the robot\'s gripper is not vertically aligned with the lever"):\n        robot.put("gripper above lever")\n    # As long as the gripper is still mostly above the lever, pull the lever up.\n    if check("the robot\'s gripper is vertically aligned with the lever"):\n        robot.pull("lever up up")\n\n\n# lever-push: rotate the lever down\ndef lever_push(robot):\n    # Steps:\n    #  1. Put gripper below the lever\n    #  2. Push the lever down\n    # First, put the gripper below the lever.\n    if check("the robot\'s gripper is not vertically aligned with the lever"):\n        robot.put("gripper below lever")\n    # As long as the gripper is still mostly below the lever, push the lever down.\n    if',
        '\n    # Steps:\n    #  1. Put gripper above lever\n    #  2. Rotate the lever up\n    # First, put the gripper above the lever.\n    if check("the robot\'s gripper is not vertically aligned with lever"):\n        robot.put("gripper above lever")\n    # If the gripper is still above the lever, rotate the lever up.\n    if check("the robot\'s gripper is vertically aligned with lever"):\n        robot.rotate("lever up")\n\n\n# lever',
        '\n    # Steps:\n    #  1. Put gripper above lever\n    #  2. Rotate the lever up\n    # First, put the gripper above the lever.\n    if check("the robot\'s gripper is not vertically aligned with the lever"):\n        robot.put("gripper above lever")\n    # Rotate the lever up.\n    if check("the robot\'s gripper is vertically aligned with the lever"):\n        robot.rotate("lever up")\n\n\n# lever-push: rotate the lever down',
        '# Steps:\n    #  1. Put gripper left of the lever\n    #  2. Rotate the lever up\n    # If the robot\'s gripper is not near the lever, move it near the lever.\n    if check("the robot\'s gripper is not near the lever"):\n        robot.move("gripper to left of lever")\n    # If the robot\'s gripper is near the lever, rotate the lever up.\n    if check("the robot\'s gripper is near the lever"):\n        robot.rotate("lever up")\n\n\n# lever-push: rotate the lever down\ndef lever_push(robot):\n    # Steps:\n    #  1. Put gripper right of the lever\n    #  2. Rotate the lever down\n    # If the robot\'s gripper is not near the lever, move it near the lever.\n    if check("the robot\'s gripper is not near the lever"):\n        robot.move("gripper to right of lever")\n    # If the robot\'s',
        '\n    # Steps:\n    #  1. Put gripper above lever\n    #  2. Rotate the lever up\n    # First, put the gripper above the lever.\n    if check("the robot\'s gripper is not vertically aligned with the lever"):\n        robot.put("gripper above lever")\n    # Rotate the lever up.\n    if check("the robot\'s gripper is vertically aligned with the lever"):\n        robot.rotate("lever up")\n\n\n# lever-push: rotate the lever down',
        '# Steps:\n    #  1. Put gripper above the lever\n    #  2. Drop gripper around the lever\n    #  3. Pull the lever up\n    # First, put the gripper mostly above the lever.\n    if check("the robot\'s gripper is not almost vertically aligned with lever"):\n        robot.put("gripper above lever")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with lever and the robot\'s gripper is open"):\n        robot.put("gripper around lever")\n    # As long as the gripper is still vertically aligned with the lever,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with lever"):\n        robot.pull("lever up")\n\n\n# lever-push: rotate the lever down\ndef lever_push(robot):\n    # Steps:\n',
        '\n    # Steps:\n    #  1. Put gripper around lever\n    #  2. Rotate the lever up\n    # First, put the gripper around the lever.\n    if check("the robot\'s gripper is not around the lever"):\n        robot.put("gripper around lever")\n    # Rotate the lever up.\n    if check("the robot\'s gripper is around the lever"):\n        robot.rotate("lever up")\n\n\n# lever-push: rotate the lever down\ndef lever_',
        '\n    # Steps:\n    #  1. Put gripper near the lever\n    #  2. Rotate the lever up\n    # If the gripper is not near the lever, move it near the lever.\n    if check("the robot\'s gripper is not near the lever"):\n        robot.move("gripper to lever")\n    # If the gripper is near the lever, rotate it up.\n    if check("the robot\'s gripper is near the lever"):\n        robot.rotate("lever up")\n\n',
    ],
    "peg-insert-side": [
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways into the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n    #',
    ],
    "peg-unplug-side": [
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the the hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-unplug-topdown: pull the peg out from the top\ndef peg_unplug_topdown(robot):\n    # Steps:\n   ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the the hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-unplug-topdown: pull the peg out from the top\ndef peg_unplug_topdown(robot):\n    # Steps:\n   ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the the hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-unplug-topdown: pull the peg out from the top\ndef peg_unplug_topdown(robot):\n    # Steps:\n   ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the the hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-unplug-topdown: pull the peg out from the top\ndef peg_unplug_topdown(robot):\n    # Steps:\n   ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the the hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-unplug-topdown: pull the peg out from above\ndef peg_unplug_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Pull the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg. peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole.\n    if check("the robot\'s gripper is is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.pull("peg out of hole")\n\n\n# peg-unplug-topdown: pull the peg out from the top\ndef peg_unplug_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n   ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the the hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-unplug-topdown: pull the peg out from above\ndef peg_unplug_topdown(robot):\n    # Steps:\n    #',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4. Slide the peg sideways out of the hole\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, gripper, go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the the hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n\n\n# peg-unplug-topdown: pull the peg out from above\ndef peg_unplug_topdown(robot):\n    # Steps:\n    #',
    ],
    "pick-out-of-hole": [
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Lift the peg out of the hole\n    #  4. Move the gripper to the target location\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n    # If the peg is in the hole, lift it out.\n    if check("peg is in hole"):\n        robot.lift("peg out of hole")\n    # Move the gripper to the target location.\n    if check("the robot\'s gripper is not at the target location"):\n        robot.move("gripper to target location")\n\n\n# pick-off-table: pick up the peg off the table and hold it at the target location\ndef pick_off_table(robot):# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Lift the peg off the table\n  ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Lift the peg out of the hole\n    #  4. Move the peg to the target location\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n    # If the peg is in the hole, lift it out.\n    if check("peg is in hole"):\n        robot.lift("peg out of hole")\n    # Move the peg to the target location.\n    if check("peg is not at target location"):\n        robot.move("peg to target location")\n\n\n# peg-insert-topdown: insert the peg into the hole from above\ndef peg_insert_topdown(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Line the peg up with the hole\n    #  4',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Pull the peg out of the hole\n    #  4. Put the peg at the target location\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n    # If the peg is in the hole, pull it out.\n    if check("peg is in hole"):\n        robot.pull("peg out of hole")\n    # Once the peg is out of the hole, put it at the target location.\n    if check("peg is not in hole"):\n        robot.put("peg at target location")\n\n\n# pick-off-table: pick up the peg off the table and hold it at the target location\ndef pick_off_table(robot):\n    # Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Put the peg at',
        '# Steps:\n    #  1. Grab the peg\n    #  2. Pull the peg out of the hole\n    #  3. Move the peg to the target location\n    # If the robot\'s gripper is not around the peg, grab the peg.\n    if check("the robot\'s gripper is not around the peg"):\n        robot.grab("peg")\n    # If the robot\'s gripper is around the peg, pull the peg out of the hole.\n    if check check("the robot\'s gripper is around the peg"):\n        robot.pull("peg out of hole")\n    # If the robot\'s gripper is around the peg and the peg is not at the target\n    # location, move the peg to the target location.\n    if check("the robot\'s gripper is around the peg and the peg is not at the target location"):\n        robot.move("peg to target location")\n\n\n# pick-off-table: pick up the peg off the table and hold it at the target location\ndef pick_off_',
        '# Steps:\n    #  1. Move the gripper to the left of the peg\n    #  2. Move the gripper to the right of the peg\n    #  3. Move the gripper above the peg\n    #  4. Grab the peg\n    #  5. Move the gripper to the target location\n    # First, move the gripper to the left of the peg.\n    if check("the robot\'s gripper is not left of the peg"):\n        robot.move(" \n        robot.move("gripper to left of peg")\n    # Move the gripper to the right of the peg.\n    if check("the robot\'s gripper is left of the peg"):\n        robot.move("gripper to right of peg")\n    # Move the gripper above the peg.\n    if check("the robot\'s gripper is not above the peg"):\n        robot.move("gripper above peg")\n    # Grab the peg.\n    if check("the robot\'s gripper is above the peg"):\n        robot.grab("peg")\n    # Move the gripper to the target location.\n    if check("the robot\'s gripper is holding the peg"):\n        robot.move("gripper to target location")\n\n\n# pick-off-table: pick up the peg off the table and hold it at the target location\ndef pick_off_table(robot):\n    # Steps:\n    #  1. Move the gripper to the left of the peg\n    #  2. Move the gripper to the right of the peg\n',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Move the gripper to the target location\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg. peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the target location, line up the peg with the target location.\n    if check("the robot\'s robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with target location"):\n        robot.align("peg to target location")\n    # If the peg is lined up with the target location, move the gripper to the\n    # target location.\n    if check("peg is horizontally aligned with target location"):\n        robot.move("gripper to target location")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert_topdown(robot):\n    # Steps:\n ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Move the gripper to the target location\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go back to putting the gripper\n    # above the peg. peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the target location, line up the peg with the target location.\n    if check("the robot\'s robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with the target location"):\n        robot.align("peg to target location")\n    # If the peg is lined up with the target location, move the gripper to the\n    # target location.\n    if check("peg is horizontally aligned with the target location"):\n        robot.move("gripper to target location")\n\n\n# pick-off-table: pick up the peg off the table and hold it at the target location\ndef pick_off_table(robot):\n   ',
        '# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Lift the peg out of the hole\n    #  4. Move the peg to the target location\n    # First, put the gripper above the peg.\n    if check("the robot\'s gripper is not vertically aligned with the peg"):\n        robot.put("gripper above peg")\n    # If the peg becomes left of the gripper, go go back to putting the gripper\n    # above the peg.\n    # Because the peg is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("peg is not left of the robot\'s gripper and peg is not forward aligned with the robot\'s gripper"):\n        robot.grab("peg")\n    # As long the gripper is still mostly around the peg and the peg isn\'t lined\n    # up with the hole, line up the peg with the hole. hole.\n    if check("the robot\'s gripper is forward aligned with the peg and the peg is not horizontally aligned with hole"):\n        robot.align("peg to hole")\n    # If the peg is lined up with the hole to the side, insert it.\n    if check("peg is horizontally aligned with hole"):\n        robot.insert("peg into hole")\n    # If the peg is in the hole, lift it out.\n    if check("peg is in hole"):\n        robot.lift("peg out of hole")\n    # If the peg is out of the hole, move it to the target location.\n    if check("peg is not in hole"):\n        robot.move("peg to target location")\n\n\n# pick-off-table: pick up the peg off the table and hold it at the target location\ndef pick_off_table(robot):# Steps:\n    #  1. Put gripper above the peg\n    #  2. Grab the peg with the gripper\n    #  3. Lift the peg off the table\n ',
    ],
    "pick-place": [
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Move gripper to target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if \n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("away from puck")\n    # Once the gripper is around the puck, we can just move the gripper to the\n    # target target location.\n    if check("the robot\'s gripper is around puck"):\n        robot.move("gripper to target location")\n\n\n# pick-place-topdown: pick up the puck and hold it at the target location\ndef pick_place_topdown(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Move gripper to target location\n    # First, put the gripper above the puck.\n    if check("',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Put gripper at target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck, puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move the gripper to the target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck")\n    # Once the gripper is around the puck, we can just move it to the target target\n    # location.\n    if check("the robot\'s gripper is around puck"):\n        robot.move("gripper to target location")\n\n\n# pick-place-topdown: pick up the puck and hold it at the target location\ndef pick_place_topdown(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move the gripper to the target location\n',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Put gripper at target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck, puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck,\n   ',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Move gripper to target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move gripper to target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("away from puck")\n    # Once the gripper is around the puck, we can just move it to to the target\n    # location.\n    if check("the robot\'s gripper is around puck"):\n        robot.move("gripper to target location")\n\n\n# pick-place-topdown: pick up the puck and hold it at the target location\ndef pick_place_topdown(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move gripper to target location\n',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Move gripper to target\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(" check("the robot\'s gripper is almost vertically aligned with puck"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("away from puck")\n    # Once the gripper is around the puck, we can just move the gripper to the\n    # target.\n    if check("the robot\'s gripper is around around puck"):\n        robot.move("gripper to target")\n\n\n# pick-place-topdown: pick up the puck and hold it at the target location\ndef pick_place_topdown(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Move gripper to target\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Move gripper to target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("away from puck")\n    # Move the gripper to the target location.\n    if check("the robot\'s gripper is around puck"):\n        robot.move \n        robot.move("gripper to target location")\n\n\n# pick-place-topdown: pick up the puck and hold it at the target location\ndef pick_place_topdown(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Move gripper to target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("',
    ],
    "door-lock": [
        "# Steps:\n    #  1. Put gripper above the dial\n    #  2. Drop gripper around the dial\n    #  3. Turn the dial to the right\n    #  4. Turn the dial to the left\n    #  5. Turn the dial to the right\n    #  6. Turn the dial to the left\n    #  7. Turn the dial to the right\n    #  8. Turn the dial to the left left\n    #  9. Turn the dial to the right\n    #  10. Turn the dial to the left\n    #  11. Turn the dial to the right\n    #  12. Turn the dial to the left\n    #  13. Turn the dial to the right\n    #  14. Turn the dial to the left\n    #  15. Turn the dial to the right\n    #  16. Turn the dial to the left",
        "# Steps:\n    #  1. Put gripper near the dial\n    #  2. Turn the dial to the right\n    #  3. Turn the dial to the left\n    #  4. Turn the dial to the right\n    #  5. Turn the dial to the left\n    #  6. Turn the dial to the right\n    #  7. Turn the dial to the left\n    #  8. Turn the dial to the right right\n    #  9. Turn the dial to the left\n    # 10. Turn the dial to the right\n    # 11. Turn the dial to the left\n    # 12. Turn the dial to the right\n    # 13. Turn the dial to the left\n    # 14. Turn the dial to the right\n    # 15. Turn the dial to the left\n    # 16. Turn the dial to the right\n    # 1",
        "# Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial left\n    #  3. Turn the dial right\n    #  4. Turn the dial left\n    #  5. Turn the dial right\n    #  6. Turn the dial left\n    #  7. Turn the dial right\n    #  8. Turn the dial left\n    #  9. Turn the dial right right\n    #  10. Turn the dial left\n    #  11. Turn the dial right\n    #  12. Turn the dial left\n    #  13. Turn the dial right\n    #  14. Turn the dial left\n    #  15. Turn the dial right\n    #  16. Turn the dial left\n    #  17. Turn the dial right\n    #  18. Turn the dial left\n",
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Turn the door handle\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.turn("door handle")\n\n\n# door-unlock: turn the dial on the door\ndef door_unlock(robot)',
        "",
        '# Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial to the right\n    # First, put the gripper above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the dial is left of the gripper, turn the dial to the right.\n    if check("the dial is left of the robot\'s gripper"):\n        robot.turn("dial right right")\n\n\n# door-unlock: turn the dial on the door\ndef door_unlock(robot):# Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial to the left\n    # First, put the gripper above the dial.\n    if check("the robot\'s gripper is not vertically aligned with the dial"):\n        robot.put("gripper above dial")\n    # If the dial is right of the gripper, turn the dial to the left.\n    if check',
        "# Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial to the right\n    #  3. Turn the dial to the left\n    #  4. Turn the dial to the right\n    #  5. Turn the dial to the left\n    #  6. Turn the dial to the right\n    #  7. Turn the dial to the left\n    #  8. Turn the dial to the right right\n    #  9. Turn the dial to the left\n    #  10. Turn the dial to the right\n    #  11. Turn the dial to the left\n    #  12. Turn the dial to the right\n    #  13. Turn the dial to the left\n    #  14. Turn the dial to the right\n    #  15. Turn the dial to the left\n    #  16. Turn the dial to the right",
        '\n    # Steps:\n    #  1. Put gripper above door lock\n    #  2. Turn the door lock\n    # First, put the gripper above the door lock.\n    if check("the robot\'s gripper is not vertically aligned with door lock"):\n        robot.put("gripper above door lock")\n    # If the gripper is above the door lock, turn it.\n    if check("the robot\'s gripper is vertically aligned with door lock"):\n        robot.turn("door lock")\n\n',
    ],
    "pick-place-wall": [
        "# Steps:\n    #  1. Pick up the puck\n    #  2. Slide the puck to the right of the wall\n    #  3. Slide the puck to the left of the wall\n    #  4. Slide the puck to the right of the wall\n    #  5. Slide the puck to the left of the wall\n    #  6. Slide the puck to the right of the wall\n    #  7. Slide the puck to the left of the wall wall\n    #  8. Slide the puck to the right of the wall\n    #  9. Slide the puck to the left of the wall\n    # 10. Slide the puck to the right of the wall\n    # 11. Slide the puck to the left of the wall\n    # 12. Slide the puck to the right of the wall\n    # 13. Slide the puck to the left of the wall\n    # 14. Slide the puck to the right of the wall\n",
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Put gripper above goal\n    #  5. Drop gripper around goal\n    #  6. Put puck at goal\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not above the puck"):\n        robot.put("gripper above puck")\n    # If the gripper is not around the puck, drop the gripper around the puck.\n    if check("the robot\'s gripper is above the puck and the robot\'s gripper is not around the puck"):\n        robot.put("gripper around puck")\n    # If the gripper is around the puck, pick up the puck.\n    if check("the robot\'s gripper is around the puck"):\n        robot.pick("puck")\n    # Put the gripper above the goal.\n    if check("the robot\'s gripper is is not above the goal"):\n        robot.put("gripper above goal")\n    # If the gripper is not around the goal, drop the gripper around the goal.\n    if check("the robot\'s gripper is above the goal and the robot\'s gripper is not around the goal"):\n        robot.put("gripper around goal")\n    # If the gripper is around the goal, put the puck at the goal.\n    if check("the robot\'s gripper is around the goal"):\n        robot.put("puck at goal")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move gripper to the right of the wall\n    #  5. Move gripper above the target location\n    #  6. Drop gripper around the target location\n    #  7. Drop the puck\n    # First, put the gripper above the puck.\n    if check("the robot robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # If the gripper is not around the puck, drop it around the puck.\n    if check("the robot\'s gripper is vertically aligned with the puck and the robot\'s gripper is not around the puck"):\n        robot.put("gripper around puck")\n    # Pick up the puck.\n    if check("the robot\'s gripper is around the puck"):\n        robot.pick("up puck")\n    # Move the gripper gripper to the right of the wall.\n    if check("the robot\'s gripper is not right of the wall"):\n        robot.move("gripper to right of wall")\n    # Move the gripper above the target location.\n    if check("the robot\'s gripper is not vertically aligned with the target location"):\n        robot.put("gripper above target location")\n    # Drop the gripper around the target location.\n    if check("the robot\'s gripper is vertically aligned with the target location and the robot\'s gripper is not around the the target location"):\n        robot.put("gripper around target location")\n    # Drop the puck.\n    if check("the robot\'s gripper is around the target location"):\n        robot.drop("puck")\n\n\n# pick-place-table: pick up the puck and hold it at the target location with a table in the way\ndef pick_place_table(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up',
        '# Steps:\n    #  1. Pick up the puck\n    #  2. Move the gripper to the target location\n    #  3. Drop the puck\n    # First, pick up the puck.\n    if check("the robot\'s gripper is not around puck"):\n        robot.put("gripper around puck")\n    # Now that the gripper is around the puck, we can pick it up.\n    if check("the robot\'s gripper is around puck"):\n        robot. \n        robot.pick("up puck")\n    # Move the gripper to the target location.\n    if check("the robot\'s gripper is not at the target location"):\n        robot.put("gripper at target location")\n    # Drop the puck.\n    if check("the robot\'s gripper is at the target location"):\n        robot.drop("puck")\n\n\n# pick-place-wall-far: pick up the puck and hold it at the target location with a tall wall in the way\ndef pick_place_wall_far(',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move the gripper to the target location\n    #  5. Put the puck down\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # If the gripper is is not around the puck, move it down around the puck.\n    if check("the robot\'s gripper is vertically aligned with puck and the robot\'s gripper is not around puck"):\n        robot.put("gripper around puck")\n    # Pick up the puck.\n    if check("the robot\'s gripper is around puck"):\n        robot.pick("puck")\n    # Move the gripper to the target location.\n    if check("the robot\'s gripper is holding puck"):\n        robot.put("gripper at target location")\n    # Put the puck down.\n    if check("the robot\'s gripper is at target location"):\n        robot.put("puck down")\n\n\n# pick-place-table: pick up the puck and hold it at the target location with a table in the way\ndef pick_place_table(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move the gripper to',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move to the target location\n    #  5. Drop the puck\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck up")\n    # Once the gripper is around around the puck, we can just move it to the target\n    # location.\n    if check("the robot\'s gripper is around puck"):\n        robot.move("to target location")\n    # Once the gripper is at the target location, we can drop the puck.\n    if check("the robot\'s gripper is at target location"):\n        robot.drop("puck")\n\n\n# pick-place-corner: pick up the puck and hold it at the target location with a corner in the way\ndef pick_place_corner(robot):\n',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pull open the gripper\n    #  4. Put gripper above target\n    #  5. Drop gripper around target\n    #  6. Pull open the gripper\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull(" \n        robot.pull("puck open")\n    # Put the gripper above the target.\n    if check("the robot\'s gripper is not almost vertically aligned with target"):\n        robot.put("gripper above target")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with target and the robot\'s gripper is open"):\n        robot.put("gripper around target")\n    # As long as as the gripper is still vertically aligned with the target,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with target"):\n        robot.pull(" \n        robot.pull("target open")\n\n\n# pick-place-wall-2: pick up the puck and hold it at the target location with a short wall in the way\ndef pick_place_wall_2(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop',
        '# Steps:\n    #  1. Pick up the puck\n    #  2. Move the gripper to the target location\n    #  3. Drop the puck\n    # First, pick up the puck.\n    if check("the robot\'s gripper is not holding the puck"):\n        robot.pick("puck")\n    # Now, move the gripper to the target location.\n    if check("the robot\'s gripper is not at the target location"):\n        robot.place("puck at at target location")\n    # Finally, drop the puck.\n    if check("the robot\'s gripper is holding the puck"):\n        robot.drop("puck")\n\n\n# pick-place-table: pick up the puck and hold it at the target location with a table in the way\ndef pick_place_table(robot):# Steps:\n    #  1. Pick up the puck\n    #  2. Move the gripper to the target location\n    #  3. Drop the puck\n    # First,',
    ],
    "plate-slide": [
        '# Steps:\n    #  1. Put gripper right of the plate\n    #  2. Start pushing against the plate to slide the plate\n    #  3. Push the plate harder\n    # If the robot\'s gripper is not vertically aligned with the plate, we should\n    # move the gripper near the plate to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate and the robot\'s gripper is below the plate"):\n        robot.move("gripper to right right of plate")\n    # If the robot\'s gripper is near the plate we can probably slide the plate\n    # now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate"):\n        robot.slide("plate left")\n    # If the robot\'s gripper is starting to be in front of the plate, push\n    # harder.\n    if check("the robot\'s gripper is in front of the plate"):\n        robot.push("plate left harder")\n\n\n# plate-rotate',
        '# Steps:\n    #  1. Put gripper right of the plate\n    #  2. Start pushing against the plate to slide the plate\n    #  3. Push the plate harder\n    # If the robot\'s gripper is not vertically aligned with the plate, we should\n    # move the gripper near the plate to start pushing\n    if check("the robot\'s gripper is not vertically aligned with plate and the robot\'s gripper is below plate"):\n        robot.move("gripper to right of plate plate")\n    # If the robot\'s gripper is near the plate we can probably slide the plate\n    # now by moving the gripper left.\n    if check("the robot\'s gripper is near plate"):\n        robot.slide("plate left")\n    # If the robot\'s gripper is starting to be in front of the plate, push\n    # harder.\n    if check("the robot\'s gripper is in front of plate"):\n        robot.push("plate left harder")\n\n\n# plate-rotate: rotate the plate',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate is not in front of the the gripper, go back to putting the\n    # gripper above the plate.\n    if check("the robot\'s gripper is not forward aligned with the plate"):\n        robot.grab("plate")\n    # As long as the gripper is still mostly around the plate and the plate\n    # isn\'t lined up with the target location, line up the plate with the\n    # target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align \n        robot.align("plate to target location")\n    # If the plate is lined up with the target location, slide it into the\n    # target location.\n    if check("plate is horizontally aligned with target location"):\n        robot.slide("plate into target location")\n\n\n# plate-rotate: rotate the plate to the target orientation\ndef plate_rotate(robot):\n    # Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n   ',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Align the plate with the target\n    #  4. Slide the plate into the target\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the gripper is not around the plate, go back to to putting the gripper\n    # above the plate.\n    if check("the robot\'s gripper is not around the plate"):\n        robot.grab("plate")\n    # As long as the gripper is still mostly around the plate and the plate\n    # isn\'t aligned with the target, align the plate with the target.\n    if check("the robot\'s gripper is around the plate and the plate is not horizontally aligned with the target"):\n        robot.align("plate to target")\n    # If the plate is aligned with the target target, slide the plate into the target.\n    if check("the plate is horizontally aligned with the target"):\n        robot.slide("plate into target")\n\n\n# plate-pick-up: pick up the plate\ndef plate_pick_up(robot):\n    # Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate is left of the gripper, gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t\n    # lined up with the target location, line up the plate with with the target\n    # location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with the target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location, slide it into the\n    # target location.\n    if check("plate is horizontally aligned with the target location"):\n        robot.slide("plate into target location")\n\n\n# plate-rotate: rotate the plate into the target location\ndef plate_rotate(robot',
        '# Steps:\n    #  1. Put gripper right of the plate\n    #  2. Start pushing against the plate to slide the plate\n    #  3. Push the plate harder\n    # If the robot\'s gripper is not vertically aligned with the plate, we should\n    # move the gripper near the plate to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate and the robot\'s gripper is below the plate"):\n        robot.move("gripper to right right of plate")\n    # If the robot\'s gripper is near the plate we can probably slide the plate\n    # now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate"):\n        robot.slide("plate left")\n    # If the robot\'s gripper is starting to be in front of the plate, push\n    # harder.\n    if check("the robot\'s gripper is in front of the plate"):\n        robot.push("plate left harder")\n\n\n# plate-rotate',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate is right of the gripper, gripper, go back to putting the gripper\n    # above the plate.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t\n    # lined up with the target location, line up the plate with the target\n    # location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location, slide the plate into\n    # the target location.\n    if check("plate is horizontally aligned with target location"):\n        robot.slide("plate into target location")\n\n\n# plate-drop: drop the plate\ndef plate_drop(robot):\n    # Steps:\n    #  1. Put gripper above the plate\n    #  2. Drop the plate\n    # First',
        '# Steps:\n    #  1. Grab the plate\n    #  2. Align the plate with the target location\n    #  3. Slide the plate into the target location\n    # Grab the plate.\n    if check("the robot\'s gripper is not around the plate"):\n        robot.grab("plate")\n    # Align the plate with the target location.\n    if check("the robot\'s gripper is around the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # Slide the plate into the target location.\n    if check("the plate is horizontally aligned with target location"):\n        robot.slide("plate into target location")\n\n\n# plate-rotate: rotate the plate\ndef plate_rotate(robot):\n    # Steps:\n    #  1. Grab the plate\n    #  2. Rotate the plate\n    # Grab the plate.\n    if check("the robot\'s gripper is not around the plate"):',
    ],
    "plate-slide-side": [
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-topdown: slide the plate down into the target location\ndef plate_slide_topdown(robot):\n    #',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Move the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper, go back to putting the gripper\n    # above the plate. plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t\n    # lined up with the target location, line up the plate with the target\n    # location.\n    if check check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-front: slide the plate forward into the target location\ndef plate_slide_front(robot):\n    # Steps:\n    #  1. Put',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper, go back to putting the gripper\n    # above the plate. plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t\n    # lined up with the target location, line up the plate with the target\n    # location.\n    if check check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-front: slide the plate forward into the target location\ndef plate_slide_front(robot):\n    # Steps:\n    #  1. Put',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper, gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with plate and plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-topdown: slide the plate topdown into the target location\ndef plate_slide_topdown(robot):\n    # Steps',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-front: slide the plate forward into the target location\ndef plate_slide_front(robot):\n    # Steps:',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-topdown: slide the plate topdown into the target location\ndef plate_slide_topdown(robot):\n   ',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-topdown: slide the plate topdown into the target location\ndef plate_slide_topdown(robot):\n   ',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper, go back to putting the gripper\n    # above the plate. plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t\n    # lined up with the target location, line up the plate with the target\n    # location.\n    if check check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-topdown: slide the plate topdown into the target location\ndef plate_slide_topdown(robot):\n    # Steps:\n    #  ',
    ],
    "plate-slide-back": [
        '# Steps:\n    #  1. Put gripper right of the plate\n    #  2. Start pushing against the plate to slide it back\n    #  3. Push the plate back harder\n    # If the robot\'s gripper is not vertically lined up with the plate,\n    # we should move the gripper near the plate to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate and the robot\'s gripper is below the plate"):\n        robot.move("gripper \n        robot.move("gripper to right of plate")\n    # If the robot\'s gripper is near the plate we can probably slide the\n    # plate back now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate"):\n        robot.slide("plate back")\n    # If the robot\'s gripper is starting to be in front of the plate,\n    # push harder.\n    if check("the robot\'s gripper is in front of the plate"):\n        robot.push("plate \n        robot.push("plate back harder")\n\n\n# plate-slide-forward: slide the plate forward into the target location\ndef plate_slide_forward(robot):\n    # Steps:\n    #  1. Put gripper left of the plate\n    #  2. Start pushing against the plate to slide it forward\n    #  3. Push the plate forward harder\n    # If the robot\'s gripper is not vertically lined up with the plate,\n    # we should move the gripper near the plate to start pushing',
        '\n    # Steps:\n    #  1. Move the gripper to the right of the plate\n    #  2. Slide the plate to the left\n    if check("the robot\'s gripper is not right of the plate"):\n        robot.move("gripper to right of plate")\n    if check("the robot\'s gripper is right of the plate"):\n        robot.slide("plate left")\n\n\n# plate-slide-forward: slide the plate forward into the target location\ndef plate_slide_forward(robot):\n',
        '# Steps:\n    #  1. Put gripper right of the plate handle\n    #  2. Start pushing against the plate handle to slide the plate back\n    #  3. Push the plate back harder\n    # If the robot\'s gripper is not vertically lined up with the plate handle,\n    # we should move the gripper near the plate handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate handle and the robot\'s gripper is below the plate handle"):\n        robot.move("gripper to right of plate handle")\n    # If the robot\'s gripper is near the plate handle we can probably slide the\n    # plate back now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate handle"):\n        robot.slide("plate back")\n    # If the robot\'s gripper is starting to be in front of the plate handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the plate handle"):\n        robot.push("plate back harder")\n\n\n# plate-slide-forward: slide the plate forward into the target location\ndef plate_slide_forward(robot):\n    # Steps:\n    #  1. Put gripper left of the plate handle\n    #  2. Start pushing against the plate handle to slide the plate forward\n    #  3. Push the plate forward harder\n    # If the the plate handle is right of the robot\'s gripper, we should move the\n    # gripper near the plate handle',
        '# Steps:\n    #  1. Put gripper right of the plate\n    #  2. Start pushing against the plate to slide it back\n    #  3. Push the plate back harder\n    # If the robot\'s gripper is not vertically lined up with the plate,\n    # we should move the gripper near the plate to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate and the robot\'s gripper is below the plate"):\n        robot.move("gripper \n        robot.move("gripper to right of plate")\n    # If the robot\'s gripper is near the plate we can probably slide the\n    # plate back now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate"):\n        robot.slide("plate back")\n    # If the robot\'s gripper is starting to be in front of the plate,\n    # push harder.\n    if check("the robot\'s gripper is in front of the plate"):\n        robot.push("plate \n        robot.push("plate back harder")\n\n\n# plate-slide-forward: slide the plate forward into the target location\ndef plate_slide_forward(robot):\n    # Steps:\n    #  1. Put gripper left of the plate\n    #  2. Start pushing against the plate to slide it forward\n    #  3. Push the plate forward harder\n    # If the robot\'s gripper is not vertically lined up with the plate,\n    # we should move the gripper near the plate to start pushing',
        '# Steps:\n    #  1. Put gripper right of the plate handle\n    #  2. Start pushing against the plate handle to slide the plate back\n    #  3. Push the plate back harder\n    # If the robot\'s gripper is not vertically lined up with the plate handle,\n    # we should move the gripper near the plate handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate handle and the robot\'s gripper is below the plate handle"):\n        robot.move("gripper to right of plate handle")\n    # If the robot\'s gripper is near the plate handle we can probably slide the\n    # plate back now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate handle"):\n        robot.slide("plate back")\n    # If the robot\'s gripper is starting to be in front of the plate handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the plate handle"):\n        robot.push("plate back harder")\n\n\n# plate-slide-forward: slide the plate forward into the target location\ndef plate_slide_forward(robot):\n    # Steps:\n    #  1. Put gripper left of the plate handle\n    #  2. Start pushing against the plate handle to slide the plate forward\n    #  3. Push the plate forward harder\n    # If the the plate handle is right of the robot\'s gripper, we should move the\n    # gripper near the plate handle',
        '# Steps:\n    #  1. Put gripper right of the plate handle\n    #  2. Start pushing against the plate handle to slide the plate back\n    #  3. Push the plate back harder\n    # If the robot\'s gripper is not vertically aligned with the plate handle,\n    # we should move the gripper near the plate handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate handle and the robot\'s gripper is below the plate handle"):\n        robot.move("gripper to right of plate handle")\n    # If the robot\'s gripper is near the plate handle we can probably slide the\n    # plate back now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate handle"):\n        robot.slide("plate back")\n    # If the robot\'s gripper is starting to be in front of the plate handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the plate handle"):\n        robot.push("plate back harder")\n\n\n# plate-slide-forward: slide the plate forward into the target location\ndef plate_slide_forward(robot):\n    # Steps:\n    #  1. Put gripper left of the plate handle\n    #  2. Start pushing against the plate handle to slide the plate forward\n    #  3. Push the plate forward harder\n    # If the the plate handle is right of the robot\'s gripper, we should move the\n    # gripper near the plate handle',
        '# Steps:\n    #  1. Put gripper right of the plate handle\n    #  2. Start pushing against the plate handle to move the plate back\n    #  3. Push the plate back harder\n    # If the robot\'s gripper is not vertically lined up with the plate handle,\n    # we should move the gripper near the plate handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the plate handle and the robot\'s gripper is below the plate handle"):\n        robot.move("gripper to right of plate handle")\n    # If the robot\'s gripper is near the plate handle we can probably slide the\n    # plate back now by moving the gripper left.\n    if check("the robot\'s gripper is near the plate handle"):\n        robot.slide("plate back")\n    # If the robot\'s gripper is starting to be in front of the plate handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the plate handle"):\n        robot.push("plate back harder")\n\n\n# plate-slide-forward: slide the plate forward into the target location\ndef plate_slide_forward(robot):\n    # Steps:\n    #  1. Put gripper left of the plate handle\n    #  2. Start pushing against the plate handle to move the plate forward\n    #  3. Push the plate forward harder\n    # If the robot\'s gripper is not vertically lined up with the plate handle,\n    # we should move the gripper near the',
        '# Steps:\n    #  1. Put gripper left of the plate\n    #  2. Start pushing against the plate to slide it back\n    #  3. Push the plate back harder\n    # If the plate is right of the robot\'s gripper, we should move the gripper\n    # near the plate to start pushing\n    if check("the plate is right of the robot\'s gripper and the robot\'s gripper is not near the plate"):\n        robot.move("gripper to left of plate plate")\n    # If the robot\'s gripper is near the plate we can probably slide the plate\n    # back now by moving the gripper right.\n    if check("the robot\'s gripper is near the plate"):\n        robot.slide("plate back")\n    # If the robot\'s gripper is starting to be in front of the plate, push\n    # harder.\n    if check("the robot\'s gripper is in front of the plate"):\n        robot.push("plate back harder")\n\n\n# plate-slide-',
    ],
    "plate-slide-back-side": [
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-back-topdown: slide the plate back topdown into the target location\ndef plate_slide_back_topdown(robot',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-back-topdown: slide the plate back topdown into the target location\ndef plate_slide_back_topdown(robot',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, slide it\n    # sideways into the target location.\n    if check("plate is horizontally aligned with target location"):\n        robot.slide("plate into target location")\n\n\n# plate-slide-back-topdown: slide the plate back from above into the target location\ndef',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-back-topdown: slide the plate back topdown into the target location\ndef plate_slide_back_topdown(robot',
        '# Steps:\n    #  1. Put gripper above plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate is left of the gripper, gripper, go back to putting the gripper\n    # above the plate.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t\n    # lined up with the target location, line up the plate with the target\n    # location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, slide it\n    # sideways into the target location.\n    if check("plate is horizontally aligned with target location"):\n        robot.slide("plate into target location")\n\n\n# plate-slide-back-topdown: slide the plate back topdown into the target location\ndef plate_slide_back_topdown(robot):\n    # Steps:\n    #  1. Put gripper above',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, slide it.\n    if check("plate is horizontally aligned with target location"):\n        robot.slide("plate into target location")\n\n\n# plate-slide-back-topdown: slide the plate back topdown into the target location\ndef plate_slide_back_topdown(robot',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate back into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, slide it\n    # back into the target location.\n    if check("plate is horizontally aligned with target location"):\n        robot.slide("plate back into target location")\n\n\n# plate-slide-back-topdown: slide the plate back topdown into the target location\n',
        '# Steps:\n    #  1. Put gripper above the plate\n    #  2. Grab the plate with the gripper\n    #  3. Line the plate up with the target location\n    #  4. Slide the plate sideways into the target location\n    # First, put the gripper above the plate.\n    if check("the robot\'s gripper is not vertically aligned with the plate"):\n        robot.put("gripper above plate")\n    # If the plate becomes left of the gripper gripper, go back to putting the gripper\n    # above the plate.\n    # Because the plate is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("plate is not left of the robot\'s gripper and plate is not forward aligned with the robot\'s gripper"):\n        robot.grab("plate")\n    # As long the gripper is still mostly around the plate and the plate isn\'t lined\n    # up with the target location, line up the plate with with the target location.\n    if check("the robot\'s gripper is forward aligned with the plate and the plate is not horizontally aligned with target location"):\n        robot.align("plate to target location")\n    # If the plate is lined up with the target location to the side, insert it.\n    if check("plate is horizontally aligned with target location"):\n        robot.insert("plate into target location")\n\n\n# plate-slide-back-topdown: slide the plate back topdown into the target location\ndef plate_slide_back_topdown(robot',
    ],
    "push-back": [
        '# Steps:\n    #  1. Put gripper behind puck\n    #  2. Push the puck back\n    #  3. Push the puck back harder\n    # If the robot\'s gripper is not behind the puck, move it there.\n    if check("the robot\'s gripper is not behind the puck"):\n        robot.put("gripper behind puck")\n    # If the robot\'s gripper is behind the puck, push it back.\n    if check("the robot\'s robot\'s gripper is behind the puck"):\n        robot.push("puck back")\n    # If the robot\'s gripper is in front of the puck, push it back harder.\n    if check("the robot\'s gripper is in front of the puck"):\n        robot.push("puck back harder")\n\n\n# push-forward: slide the puck forwards to the target location\ndef push_forward(robot):# Steps:\n    #  1. Put gripper in front of puck\n    #  2. Push the puck forward\n  ',
        '# Steps:\n    #  1. Put gripper left of the puck\n    #  2. Start pushing against the puck to slide it backwards\n    #  3. Push the puck backwards harder\n    # If the puck is right of the robot\'s gripper, we should move the gripper near\n    # the puck to start pushing\n    if check("the robot\'s gripper is not near the puck and the puck is right of the robot\'s gripper"):\n        robot.move("gripper to left of puck puck")\n    # If the robot\'s gripper is near the puck we can probably slide the puck\n    # backwards now by moving the gripper right.\n    if check("the robot\'s gripper is near the puck"):\n        robot.slide("puck backwards")\n    # If the robot\'s gripper is starting to be in front of the puck, push harder.\n    if check("the robot\'s gripper is in front of the puck"):\n        robot.push("puck backwards harder")\n\n\n# push-forward: slide the puck forwards to',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Push puck backwards\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.push("puck backwards")\n\n\n# push-forward: slide the puck forwards to the target location\ndef push_forward(robot):# Steps:\n    #  1',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Grab puck\n    #  3. Push puck back\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\' robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck back")\n\n\n# push-forward: slide the puck forward to the target location\ndef push_forward(robot):\n    # Steps:\n    #  ',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Slide puck backwards\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # If the gripper is not around the puck, drop it around the puck.\n    if check("the robot\'s gripper is not around the puck"):\n        robot.put("gripper around puck")\n    # If the gripper is around the puck, slide the puck backwards.\n    if check("the robot\'s gripper is around the puck"):\n        robot.slide("puck backwards")\n\n\n# push-forward: slide the puck forwards to the target location\ndef push_forward(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Slide puck forwards\n   ',
        '# Steps:\n    #  1. Move the gripper to the right of the puck\n    #  2. Push the puck backwards\n    # If the robot\'s gripper is not right of the puck, move the gripper to the\n    # right of the puck.\n    if check("the robot\'s gripper is not right of the puck"):\n        robot.move("gripper to right of puck")\n    # If the gripper is right of the puck, push the puck backwards.\n    if check check("the robot\'s gripper is right of the puck"):\n        robot.push("puck backwards")\n\n\n# push-forward: slide the puck forwards to the target location\ndef push_forward(robot):# Steps:\n    #  1. Move the gripper to the left of the puck\n    #  2. Push the puck forwards\n    # If the robot\'s gripper is not left of the puck, move the gripper to the\n    # left of the puck.\n    if check("the robot\'s gripper is not left',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Grab puck with gripper\n    #  3. Push puck backwards to target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # If the gripper is not around the puck, grab the puck.\n    if check("the robot\'s gripper is not around the puck puck"):\n        robot.grab("puck")\n    # If the robot\'s gripper is around the puck, push the puck backwards to the\n    # target location.\n    if check("the robot\'s gripper is around the puck"):\n        robot.push("puck to target location")\n\n\n# push-forward: slide the puck forwards to the target location\ndef push_forward(robot):\n    # Steps:\n    #  1. Put gripper above puck\n    #  2. Grab puck with gripper\n  ',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Start pushing the puck backwards\n    #  3. Push the puck backwards harder\n    # If the robot\'s gripper is not vertically aligned with the puck, we should\n    # move the gripper near the puck to start pushing\n    if check("the robot\'s gripper is not vertically aligned with puck and the robot\'s gripper is below puck"):\n        robot.put("gripper above puck")\n    # If If the robot\'s gripper is near the puck we can probably slide the puck\n    # backwards now by moving the gripper left.\n    if check("the robot\'s gripper is near puck"):\n        robot.slide("puck left")\n    # If the robot\'s gripper is starting to be in front of the puck, push harder.\n    if check("the robot\'s gripper is in front of puck"):\n        robot.push("puck left harder")\n\n\n# push-forward: slide the puck forward to the target location\ndef push_forward(',
    ],
    "push": [
        '# Steps:\n    #  1. Put gripper near the puck\n    #  2. Push the puck to the target\n    # If the gripper is not near the puck, move it near the puck.\n    if check("the robot\'s gripper is not near the puck"):\n        robot.move("gripper near puck")\n    # If the gripper is near the puck, push the puck to the target.\n    if check("the robot\'s gripper is near the puck"):\n        robot.push(" \n        robot.slide("puck to target")\n\n\n# rotate: rotate the puck to the target orientation\ndef rotate(robot):# Steps:\n    #  1. Put gripper near the puck\n    #  2. Rotate the puck to the target\n    # If the gripper is not near the puck, move it near the puck.\n    if check("the robot\'s gripper is not near the puck"):\n        robot.move("gripper near puck")\n    # If the gripper is near the puck, rotate the puck to the',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Push the puck to the target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not above puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check(" check("the robot\'s gripper is almost above puck"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.push("puck to target location")\n\n\n# pull: slide the puck from the target location\ndef pull(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Grab puck with gripper\n    #  3. Push puck to target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # If the gripper is not around the puck, go back to putting the gripper\n    # above the puck.\n    if check("the check("the robot\'s gripper is not around puck"):\n        robot.grab("puck")\n    # Push the puck to the target location.\n    if check("the robot\'s gripper is around puck"):\n        robot.push("puck to target location")\n\n\n# align: align the gripper with the target location\ndef align(robot):# Steps:\n    #  1. Align gripper with target location\n    # Align the gripper with the target location.\n    if check("the robot\'s gripper is not aligned with target location"):',
        '# Steps:\n    #  1. Put gripper above the puck\n    #  2. Drop gripper around the puck\n    #  3. Push the puck to the target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.push("puck to target")\n\n\n# pull: slide the puck to the target location\ndef pull(robot):# Steps:\n  ',
        '# Steps:\n    #  1. Put gripper above the puck\n    #  2. Grab the puck with the gripper\n    #  3. Push the puck to the target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("away from puck")\n\n\n# move: move the robot to the target location\ndef move(robot):# Steps:\n  ',
        '# Steps:\n    #  1. Put gripper above the puck\n    #  2. Drop gripper around the puck\n    #  3. Push the puck to the target location\n    # First, put the gripper mostly above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.push("puck to target location")\n\n\n# pull: slide the puck to the target location\ndef pull(robot):# Steps:\n   ',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Push the puck to the target location\n    # If the gripper is not above the puck, move it above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # If the gripper is above the puck, push the puck to the target location.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.push("puck to target")\n\n\n# pull: slide the puck to the target location\ndef pull(robot):# Steps:\n    #  1. Put gripper above puck\n    #  2. Pull the puck to the target location\n    # If the gripper is not above the puck, move it above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # If the gripper is above the puck, pull the puck',
        '# Steps:\n    #  1. Put gripper above the puck\n    #  2. Drop gripper around the puck\n    #  3. Push the puck to the target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pushing.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.push("puck to target")\n\n\n# pull: slide the puck to the target location\ndef pull(robot):# Steps:\n  ',
    ],
    "push-wall": [
        "# Steps:\n    #  1. Push the puck to the left\n    #  2. Push the puck to the right\n    #  3. Push the puck to the left\n    #  4. Push the puck to the right\n    #  5. Push the puck to the left\n    #  6. Push the puck to the right\n    #  7. Push the puck to the left\n    #  8. Push the puck to the right right\n    #  9. Push the puck to the left\n    # 10. Push the puck to the right\n    # 11. Push the puck to the left\n    # 12. Push the puck to the right\n    # 13. Push the puck to the left\n    # 14. Push the puck to the right\n    # 15. Push the puck to the left\n    # 16. Push the puck to the right\n    # 1",
        "# Steps:\n    #  1. Push the puck left\n    #  2. Push the puck right\n    #  3. Push the puck left\n    #  4. Push the puck right\n    #  5. Push the puck left\n    #  6. Push the puck right\n    #  7. Push the puck left\n    #  8. Push the puck right\n    #  9. Push the puck left left\n    # 10. Push the puck right\n    # 11. Push the puck left\n    # 12. Push the puck right\n    # 13. Push the puck left\n    # 14. Push the puck right\n    # 15. Push the puck left\n    # 16. Push the puck right\n    # 17. Push the puck left\n    # 18. Push the puck right\n    # 19. Push",
        "# Steps:\n    #  1. Push the puck to the right\n    #  2. Push the puck to the left\n    #  3. Push the puck to the right\n    #  4. Push the puck to the left\n    #  5. Push the puck to the right\n    #  6. Push the puck to the left\n    #  7. Push the puck to the right\n    #  8. Push the puck to the left left\n    #  9. Push the puck to the right\n    #  10. Push the puck to the left\n    #  11. Push the puck to the right\n    #  12. Push the puck to the left\n    #  13. Push the puck to the right\n    #  14. Push the puck to the left\n    #  15. Push the puck to the right\n    #  16. Push the puck to the left",
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pull puck to the right\n    #  4. Pull puck to the left\n    #  5. Pull puck to the right\n    #  6. Pull puck to the left\n    #  7. Pull puck to the right\n    # First, put the gripper above the puck.\n    if check("the robot\'s robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # If the gripper is not around the puck, drop it around the puck.\n    if check("the robot\'s gripper is vertically aligned with the puck and the robot\'s gripper is not around puck"):\n        robot.put("gripper around puck")\n    # If the gripper is around the puck, we can pull it to the right.\n    if check("the robot\'s gripper is around puck"):\n        robot.pull("puck to to the right")\n    # If the gripper is around the puck, we can pull it to the left.\n    if check("the robot\'s gripper is around puck"):\n        robot.pull("puck to the left")\n    # If the gripper is around the puck, we can pull it to the right.\n    if check("the robot\'s gripper is around puck"):\n        robot.pull("puck to the right")\n    # If the gripper is around the puck, we can pull it to the left.\n    if check("',
        "# Steps:\n    #  1. Put the gripper above the puck\n    #  2. Drop the gripper around the puck\n    #  3. Push the puck to the right\n    #  4. Push the puck to the left\n    #  5. Push the puck to the right\n    #  6. Push the puck to the left\n    #  7. Push the puck to the right\n    #  8. Push the puck to the left left\n    #  9. Push the puck to the right\n    # 10. Push the puck to the left\n    # 11. Push the puck to the right\n    # 12. Push the puck to the left\n    # 13. Push the puck to the right\n    # 14. Push the puck to the left\n    # 15. Push the puck to the right\n    # 16. Push the puck to the left\n    # 1",
        "# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Push puck towards the wall\n    #  4. Push puck towards the wall harder\n    #  5. Push puck towards the wall harder again\n    #  6. Push puck towards the wall harder again\n    #  7. Push puck towards the wall harder again\n    #  8. Push puck towards the wall harder again again\n    #  9. Push puck towards the wall harder again\n    # 10. Push puck towards the wall harder again\n    # 11. Push puck towards the wall harder again\n    # 12. Push puck towards the wall harder again\n    # 13. Push puck towards the wall harder again\n    # 14. Push puck towards the wall harder again\n    # 15. Push puck towards the wall harder again\n    # 16. Push puck towards the wall harder",
        '# Steps:\n    #  1. Push the puck to the left of the wall\n    #  2. Push the puck to the right of the wall\n    #  3. Push the puck to the target location\n    # First, push the puck to the left of the wall.\n    if check("the puck is not left of the wall"):\n        robot.push("puck to left of wall")\n    # Then, push the puck to the right of the wall.\n    if check(" check("the puck is not right of the wall"):\n        robot.push("puck to right of wall")\n    # Finally, push the puck to the target location.\n    if check("the puck is not at the target location"):\n        robot.push("puck to target location")\n\n\n# push-wall-left: slide the puck to the target location with a large wall in the way\ndef push_wall_left(robot):# Steps:\n    #  1. Push the puck to the left of the wall\n    #  2',
        "# Steps:\n    #  1. Push the puck to the left\n    #  2. Push the puck to the right\n    #  3. Push the puck to the left\n    #  4. Push the puck to the right\n    #  5. Push the puck to the left\n    #  6. Push the puck to the right\n    #  7. Push the puck to the left\n    #  8. Push the puck to the right right\n    #  9. Push the puck to the left\n    # 10. Push the puck to the right\n    # 11. Push the puck to the left\n    # 12. Push the puck to the right\n    # 13. Push the puck to the left\n    # 14. Push the puck to the right\n    # 15. Push the puck to the left\n    # 16. Push the puck to the right\n    # 1",
    ],
    "reach": [
        "# Steps:\n    #  1. Move the gripper down\n    #  2. Move the gripper left\n    #  3. Move the gripper up\n    #  4. Move the gripper right\n    #  5. Move the gripper down\n    #  6. Move the gripper left\n    #  7. Move the gripper up\n    #  8. Move the gripper right\n    #  9. Move the gripper down down\n    #  10. Move the gripper left\n    #  11. Move the gripper up\n    #  12. Move the gripper right\n    #  13. Move the gripper down\n    #  14. Move the gripper left\n    #  15. Move the gripper up\n    #  16. Move the gripper right\n    #  17. Move the gripper down\n    #  18. Move the gripper left\n",
        '# Steps:\n    #  1. Move the gripper near the target\n    #  2. Move the gripper to the target\n    # If the gripper is not near the target, move it near the target.\n    if check("the robot\'s gripper is not near the target"):\n        robot.move("gripper to near the target")\n    # If the gripper is near the target, move it to the target.\n    if check("the robot\'s gripper is near the target"):\n        robot. \n        robot.move("gripper to the target")\n\n\n# align: align the gripper with the target\ndef align(robot):# Steps:\n    #  1. Move the gripper near the target\n    #  2. Move the gripper to the target\n    # If the gripper is not near the target, move it near the target.\n    if check("the robot\'s gripper is not near the target"):\n        robot.move("gripper to near the target")\n    # If the gripper is near the target, move',
        '# Steps:\n    #  1. Put gripper above the target location\n    #  2. Drop gripper around the target location\n    # First, put the gripper above the target location.\n    if check("the robot\'s gripper is not almost vertically aligned with target location"):\n        robot.put("gripper above target location")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is is almost vertically aligned with target location and the robot\'s gripper is open"):\n        robot.put("gripper around target location")\n\n\n# reach-topdown: reach to the target location from above\ndef reach_topdown(robot):# Steps:\n    #  1. Put gripper above the target location\n    #  2. Drop gripper around the target location\n    # First, put the gripper above the target location.\n    if check("the robot\'s gripper is not vertically aligned with target location"):\n        robot.put("g',
        "# Steps:\n    #  1. Move the gripper to the target location\n    #  2. Move the gripper to the target location\n    #  3. Move the gripper to the target location\n    #  4. Move the gripper to the target location\n    #  5. Move the gripper to the target location\n    #  6. Move the gripper to the target location\n    #  7. Move the gripper to the target location\n    #  8.  8. Move the gripper to the target location\n    #  9. Move the gripper to the target location\n    # 10. Move the gripper to the target location\n    # 11. Move the gripper to the target location\n    # 12. Move the gripper to the target location\n    # 13. Move the gripper to the target location\n    # 14. Move the gripper to the target location\n    # 15. Move the gripper to the target location\n    #",
        '# Steps:\n    #  1. Move the gripper near the target\n    #  2. Move the gripper to the target\n    # If the robot\'s gripper is not near the target, move the gripper near the\n    # target.\n    if check("the robot\'s gripper is not near the target"):\n        robot.move("gripper near target")\n    # If the robot\'s gripper is near the target, move the gripper to the target.\n    if check("the robot\' robot\'s gripper is near the target"):\n        robot.move("gripper to target")\n\n\n# pick-up: pick up the object\ndef pick_up(robot):# Steps:\n    #  1. Move the gripper near the object\n    #  2. Move the gripper to the object\n    #  3. Grab the object\n    # If the robot\'s gripper is not near the object, move the gripper near the\n    # object.\n    if check("the robot\'s gripper is not',
        '\n    # Steps:\n    #  1. Move the gripper to the target location\n    # If the gripper is not at the target location, move it there.\n    if check("the robot\'s gripper is not at the target location"):\n        robot.move("gripper to target location")\n\n\n# align: align the gripper with the target object\ndef align(robot):\n    # Steps:\n    #  1. Align the gripper with the target object\n    # If the gripper is not aligned with the',
        '# Steps:\n    #  1. Move the gripper near the target location\n    #  2. Move the gripper to the target location\n    # First, move the gripper near the target location.\n    if check("the robot\'s gripper is not near the target location"):\n        robot.move("gripper to near target location")\n    # Then, move the gripper to the target location.\n    if check("the robot\'s gripper is near the target location"):\n        robot.move("gripper to to target location")\n\n\n# align: align the gripper with the target location\ndef align(robot):# Steps:\n    #  1. Move the gripper near the target location\n    #  2. Move the gripper to the target location\n    # First, move the gripper near the target location.\n    if check("the robot\'s gripper is not near the target location"):\n        robot.move("gripper to near target location")\n    # Then, move the gripper to the target location.\n    if check("the',
        "# Steps:\n    #  1. Move the gripper to the target location\n    #  2. Move the gripper to the target location\n    #  3. Move the gripper to the target location\n    #  4. Move the gripper to the target location\n    #  5. Move the gripper to the target location\n    #  6. Move the gripper to the target location\n    #  7. Move the gripper to the target location\n    #  8.  8. Move the gripper to the target location\n    #  9. Move the gripper to the target location\n    # 10. Move the gripper to the target location\n    # 11. Move the gripper to the target location\n    # 12. Move the gripper to the target location\n    # 13. Move the gripper to the target location\n    # 14. Move the gripper to the target location\n    # 15. Move the gripper to the target location\n    #",
    ],
    "door-unlock": [
        "# Steps:\n    #  1. Put gripper above dial\n    #  2. Turn dial to the right\n    #  3. Turn dial to the left\n    #  4. Turn dial to the right\n    #  5. Turn dial to the left\n    #  6. Turn dial to the right\n    #  7. Turn dial to the left\n    #  8. Turn dial to the right\n    #  9. Turn Turn dial to the left\n    #  10. Turn dial to the right\n    #  11. Turn dial to the left\n    #  12. Turn dial to the right\n    #  13. Turn dial to the left\n    #  14. Turn dial to the right\n    #  15. Turn dial to the left\n    #  16. Turn dial to the right\n    #  17. Turn dial to the left\n  ",
        "# Steps:\n    #  1. Put gripper above the door handle\n    #  2. Rotate the door handle to the left\n    #  3. Rotate the door handle to the right\n    #  4. Rotate the door handle to the left\n    #  5. Rotate the door handle to the right\n    #  6. Rotate the door handle to the left\n    #  7. Rotate the door handle to the right\n    #  8. Rotate Rotate the door handle to the left\n    #  9. Rotate the door handle to the right\n    #  10. Rotate the door handle to the left\n    #  11. Rotate the door handle to the right\n    #  12. Rotate the door handle to the left\n    #  13. Rotate the door handle to the right\n    #  14. Rotate the door handle to the left\n    #  15. Rotate the door handle to the right\n  ",
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Turn the door handle\n    # First, put the gripper above the door handle.\n    if check("the robot\'s gripper is not vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.turn("door handle")\n\n\n# door-lock: turn the dial on the door\ndef door_lock(robot)',
        "# Steps:\n    #  1. Put gripper above the dial\n    #  2. Turn the dial to the right\n    #  3. Turn the dial to the left\n    #  4. Turn the dial to the right\n    #  5. Turn the dial to the left\n    #  6. Turn the dial to the right\n    #  7. Turn the dial to the left\n    #  8. Turn the dial to the right right\n    #  9. Turn the dial to the left\n    # 10. Turn the dial to the right\n    # 11. Turn the dial to the left\n    # 12. Turn the dial to the right\n    # 13. Turn the dial to the left\n    # 14. Turn the dial to the right\n    # 15. Turn the dial to the left\n    # 16. Turn the dial to the right\n    # 1",
        "# Steps:\n    #  1. Put gripper above the dial\n    #  2. Rotate the dial to the right\n    #  3. Rotate the dial to the left\n    #  4. Rotate the dial to the right\n    #  5. Rotate the dial to the left\n    #  6. Rotate the dial to the right\n    #  7. Rotate the dial to the left\n    #  8. Rotate the dial to the right right\n    #  9. Rotate the dial to the left\n    #  10. Rotate the dial to the right\n    #  11. Rotate the dial to the left\n    #  12. Rotate the dial to the right\n    #  13. Rotate the dial to the left\n    #  14. Rotate the dial to the right\n    #  15. Rotate the dial to the left\n    #  16. Rotate the dial to the right",
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Grab the door handle\n    #  3. Turn the door handle\n    # First, put the gripper above the door handle.\n    if check("the robot\'s gripper is not vertically aligned with the door handle"):\n        robot.put("gripper above door handle")\n    # If the gripper is not aligned with the door handle, go back to putting\n    # the gripper above the door handle. handle.\n    if check("the robot\'s gripper is not forward aligned with the door handle"):\n        robot.grab("door handle")\n    # Turn the door handle.\n    if check("the robot\'s gripper is forward aligned with the door handle"):\n        robot.turn("door handle")\n\n\n# door-lock: turn the dial on the door\ndef door_lock(robot):# Steps:\n    #  1. Put gripper above door handle\n    #  2. Grab the door handle\n    #',
        "# Steps:\n    #  1. Put gripper above door handle\n    #  2. Rotate gripper around door handle\n    #  3. Rotate gripper around door handle\n    #  4. Rotate gripper around door handle\n    #  5. Rotate gripper around door handle\n    #  6. Rotate gripper around door handle\n    #  7. Rotate gripper around door handle\n    #  8. Rotate gripper around door handle\n    #  9.  9. Rotate gripper around door handle\n    # 10. Rotate gripper around door handle\n    # 11. Rotate gripper around door handle\n    # 12. Rotate gripper around door handle\n    # 13. Rotate gripper around door handle\n    # 14. Rotate gripper around door handle\n    # 15. Rotate gripper around door handle\n    # 16. Rotate gripper around door handle\n    # 17. Rotate gripper around door handle\n    # 1",
        "# Steps:\n    #  1. Put gripper above door handle\n    #  2. Turn the dial to the left\n    #  3. Turn the dial to the right\n    #  4. Turn the dial to the left\n    #  5. Turn the dial to the right\n    #  6. Turn the dial to the left\n    #  7. Turn the dial to the right\n    #  8. Turn the dial to the left left\n    #  9. Turn the dial to the right\n    #  10. Turn the dial to the left\n    #  11. Turn the dial to the right\n    #  12. Turn the dial to the left\n    #  13. Turn the dial to the right\n    #  14. Turn the dial to the left\n    #  15. Turn the dial to the right\n    #  16. Turn the dial to the left",
    ],
    "reach-wall": [
        "# Steps:\n    #  1. Move gripper to the left of the wall\n    #  2. Move gripper to the right of the wall\n    #  3. Move gripper to the left of the wall again\n    #  4. Move gripper to the right of the wall again\n    #  5. Move gripper to the left of the wall again\n    #  6. Move gripper to the right of the wall again\n    #  7. Move gripper to the left of of the wall again\n    #  8. Move gripper to the right of the wall again\n    #  9. Move gripper to the left of the wall again\n    # 10. Move gripper to the right of the wall again\n    # 11. Move gripper to the left of the wall again\n    # 12. Move gripper to the right of the wall again\n    # 13. Move gripper to the left of the wall again\n    # 14. Move gripper to the right of the",
        "# Steps:\n    #  1. Move the gripper to the left of the wall\n    #  2. Move the gripper to the right of the wall\n    #  3. Move the gripper to the left of the wall\n    #  4. Move the gripper to the right of the wall\n    #  5. Move the gripper to the left of the wall\n    #  6. Move the gripper to the right of the wall\n    #  7. Move the gripper to to the left of the wall\n    #  8. Move the gripper to the right of the wall\n    #  9. Move the gripper to the left of the wall\n    # 10. Move the gripper to the right of the wall\n    # 11. Move the gripper to the left of the wall\n    # 12. Move the gripper to the right of the wall\n    # 13. Move the gripper to the left of the wall\n    # 14. Move the gripper to the",
        "# Steps:\n    #  1. Move the gripper to the right of the wall\n    #  2. Move the gripper to the left of the wall\n    #  3. Move the gripper to the right of the wall\n    #  4. Move the gripper to the left of the wall\n    #  5. Move the gripper to the right of the wall\n    #  6. Move the gripper to the left of the wall\n    #  7. Move the gripper to to the right of the wall\n    #  8. Move the gripper to the left of the wall\n    #  9. Move the gripper to the right of the wall\n    # 10. Move the gripper to the left of the wall\n    # 11. Move the gripper to the right of the wall\n    # 12. Move the gripper to the left of the wall\n    # 13. Move the gripper to the right of the wall\n    # 14. Move the gripper to the",
        "# Steps:\n    #  1. Move the gripper to the left of the wall\n    #  2. Move the gripper to the right of the wall\n    #  3. Move the gripper to the left of the wall\n    #  4. Move the gripper to the right of the wall\n    #  5. Move the gripper to the left of the wall\n    #  6. Move the gripper to the right of the wall\n    #  7. Move the gripper to to the left of the wall\n    #  8. Move the gripper to the right of the wall\n    #  9. Move the gripper to the left of the wall\n    # 10. Move the gripper to the right of the wall\n    # 11. Move the gripper to the left of the wall\n    # 12. Move the gripper to the right of the wall\n    # 13. Move the gripper to the left of the wall\n    # 14. Move the gripper to the",
        "# Steps:\n    #  1. Move the gripper to the right of the wall\n    #  2. Move the gripper to the left of the wall\n    #  3. Move the gripper to the right of the wall again\n    #  4. Move the gripper to the left of the wall again\n    #  5. Move the gripper to the right of the wall again\n    #  6. Move the gripper to the left of the wall again\n    #  7.  7. Move the gripper to the right of the wall again\n    #  8. Move the gripper to the left of the wall again\n    #  9. Move the gripper to the right of the wall again\n    # 10. Move the gripper to the left of the wall again\n    # 11. Move the gripper to the right of the wall again\n    # 12. Move the gripper to the left of the wall again\n    # 13. Move the gripper to the right of the wall again",
        '# Steps:\n    #  1. Move the gripper to the left of the wall\n    #  2. Move the gripper to the right of the wall\n    #  3. Move the gripper to the target location\n    # If the gripper is not near the wall, move the gripper to the left of the\n    # wall.\n    if check("the robot\'s gripper is not near the wall"):\n        robot.move("gripper to left of wall")\n    # If the gripper is is left of the wall, move it to the right of the wall.\n    if check("the robot\'s gripper is left of the wall"):\n        robot.move("gripper to right of wall")\n    # If the gripper is right of the wall, move it to the target location.\n    if check("the robot\'s gripper is right of the wall"):\n        robot.move("gripper to target location")\n\n\n# reach-table: reach to the target location with a table in the way\ndef reach_table(robot):# Steps:\n',
        "# Steps:\n    #  1. Move the gripper to the left of the wall\n    #  2. Move the gripper to the right of the wall\n    #  3. Move the gripper to the left of the wall\n    #  4. Move the gripper to the right of the wall\n    #  5. Move the gripper to the left of the wall\n    #  6. Move the gripper to the right of the wall\n    #  7. Move the gripper to to the left of the wall\n    #  8. Move the gripper to the right of the wall\n    #  9. Move the gripper to the left of the wall\n    # 10. Move the gripper to the right of the wall\n    # 11. Move the gripper to the left of the wall\n    # 12. Move the gripper to the right of the wall\n    # 13. Move the gripper to the left of the wall\n    # 14. Move the gripper to the",
        '# Steps:\n    #  1. Move the gripper to the left of the wall\n    #  2. Move the gripper above the wall\n    #  3. Move the gripper to the right of the wall\n    #  4. Move the gripper to the target location\n    # If the gripper is not left of the wall, move it to the left of the wall.\n    if check("the robot\'s gripper is not left of wall"):\n        robot.move("gripper to left of wall wall")\n    # If the gripper is left of the wall, move it above the wall.\n    if check("the robot\'s gripper is left of wall"):\n        robot.move("gripper above wall")\n    # If the gripper is above the wall, move it to the right of the wall.\n    if check("the robot\'s gripper is above wall"):\n        robot.move("gripper to right of wall")\n    # If the gripper is right of the wall, move it to the target location.\n    if check check("the robot\'s gripper is right of wall"):\n        robot.move("gripper to target location")\n\n\n# reach-table: reach to the target location with a table in the way\ndef reach_table(robot):# Steps:\n    #  1. Move the gripper to the left of the table\n    #  2. Move the gripper above the table\n    #  3. Move the gripper to the right of the table\n    #  4. Move the gripper to the target location\n    # If the',
    ],
    "shelf-place": [
        '# Steps:\n    #  1. Pick up the block\n    #  2. Move the block to the target location\n    #  3. Drop the block\n    # Pick up the block.\n    if check("the robot\'s gripper is not around block"):\n        robot.grab("block")\n    # Move the block to the target location.\n    if check("the robot\'s gripper is around block"):\n        robot.move("block to target location")\n    # \n    # Drop the block.\n    if check("the robot\'s gripper is around block"):\n        robot.drop("block")\n\n\n# shelf-pick: pick up the block at the target location\ndef shelf_pick(robot):# Steps:\n    #  1. Move the block to the target location\n    #  2. Pick up the block\n    # Move the block to the target location.\n    if check("the robot\'s gripper is not around block"):\n        robot.move("block to target',
        '# Steps:\n    #  1. Put gripper above the block\n    #  2. Drop gripper around the block\n    #  3. Pick up the block\n    #  4. Put gripper above the target location\n    #  5. Drop gripper around the target location\n    #  6. Drop the block\n    # First, put the gripper above the block.\n    if check("the robot\'s gripper is not vertically aligned with the block"):\n        robot. \n        robot.put("gripper above block")\n    # If the block becomes left of the gripper, go back to putting the gripper\n    # above the block.\n    if check("block is not left of the robot\'s gripper and block is not forward aligned with the robot\'s gripper"):\n        robot.put("gripper around block")\n    # As long as the gripper is still mostly around the block and the block isn\'t\n    # lined up with the target location, line up the block with the target\n    # location location.\n    if check("the robot\'s gripper is forward aligned with the block and the block is not horizontally aligned with target location"):\n        robot.align("block to target location")\n    # If the block is lined up with the target location, put the gripper above\n    # the target location.\n    if check("block is horizontally aligned with target location"):\n        robot.put("gripper above target location")\n    # If the gripper is around the target location, drop the block.\n    if check("the robot\'s gripper gripper is around target location"):\n        robot.drop("block")\n\n\n# shelf-retrieve: pick up the block and place it at the target location\ndef shelf_retrieve(robot):# Steps:\n    #  1. Put gripper above the block\n    #  2. Drop gripper around the block\n    #  3. Pick up the block\n    #  4. Put gripper above the target location\n    #  5. Drop gripper around the target location\n    #  6. Drop the block\n',
        '# Steps:\n    #  1. Put gripper above the block\n    #  2. Drop gripper around the block\n    #  3. Pick up the block\n    #  4. Put gripper above the shelf\n    #  5. Drop gripper around the shelf\n    #  6. Place the block on the shelf\n    # First, put the gripper above the block.\n    if check("the robot\'s gripper is not vertically aligned with the block"):\n        robot \n        robot.put("gripper above block")\n    # If the gripper is not around the block, grab the block.\n    if check("the robot\'s gripper is vertically aligned with the block and the robot\'s gripper is not around block"):\n        robot.put("gripper around block")\n    # If the gripper is around the block, pick it up.\n    if check("the robot\'s gripper is around block"):\n        robot.pick("block up")\n    # If the block is picked up, put the gripper above the the shelf.\n    if check("the robot\'s gripper is holding block"):\n        robot.put("gripper above shelf")\n    # If the gripper is above the shelf, drop it around the shelf.\n    if check("the robot\'s gripper is vertically aligned with shelf and the robot\'s gripper is not around shelf"):\n        robot.put("gripper around shelf")\n    # If the gripper is around the shelf, place the block on the shelf.\n    if check("the robot\'s gripper is around shelf"):\n        robot. \n        robot.place("block on shelf")\n\n\n# shelf-pickup: pick up the block from the shelf\ndef shelf_pickup(robot):\n    # Steps:\n    #  1. Put gripper above the block\n    #  2. Drop gripper around the block\n    #  3. Pick up the block\n    # First, put the gripper above the block.\n    if check("the robot\'s gripper is not vertically aligned with the block"):\n        robot.put("gripper above block")\n ',
        '# Steps:\n    #  1. Pick up the block\n    #  2. Move the block to the target location\n    #  3. Drop the block\n    # First, pick up the block.\n    if check("the robot\'s gripper is not around block"):\n        robot.pick("block")\n    # If the robot is holding the block, move it to the target location.\n    if check("the robot\'s gripper is around block"):\n        robot.move("block \n        robot.move("block to target location")\n    # Finally, drop the block.\n    if check("the robot\'s gripper is around block"):\n        robot.drop("block")\n\n\n# shelf-pick: pick up the block at the target location\ndef shelf_pick(robot):\n    # Steps:\n    #  1. Move the gripper to the target location\n    #  2. Pick up the block\n    # First, move the gripper to the target location.\n    if check("',
        '\n    # Steps:\n    #  1. Pick up the block\n    #  2. Put the block at the target location\n    # First, pick up the block.\n    if check("the robot\'s gripper is not around block"):\n        robot.pick_up("block")\n    # Then, put the block at the target location.\n    if check("the robot\'s gripper is around block"):\n        robot.put("block at target location")\n\n\n# shelf-retrieve: pick up the',
        '# Steps:\n    #  1. Pick up the block\n    #  2. Move the block to the target location\n    #  3. Place the block at the target location\n    # First, pick up the block.\n    if check("the robot\'s gripper is not around the block"):\n        robot.grab("block")\n    # Then move the block to the target location.\n    if check("the robot\'s gripper is around the block"):\n        robot.move("block \n        robot.move("block to target location")\n    # Finally, place the block at the target location.\n    if check("the robot\'s gripper is around the block"):\n        robot.place("block at target location")\n\n\n# shelf-pick: pick up the block from the target location\ndef shelf_pick(robot):# Steps:\n    #  1. Move the block to the target location\n    #  2. Pick up the block\n    # First, move the block to the target location.\n  ',
        '# Steps:\n    #  1. Pick up the block\n    #  2. Move the block to the target location\n    #  3. Drop the block\n    # Pick up the block.\n    if check("the robot\'s gripper is not around the block"):\n        robot.grab("block")\n    # Move the block to the target location.\n    if check("the robot\'s gripper is around the block and the block is not at the target location"):\n        robot.move \n        robot.move("block to target location")\n    # Drop the block.\n    if check("the robot\'s gripper is around the block and the block is at the target location"):\n        robot.drop("block")\n\n\n# shelf-pick: pick up the block at the target location\ndef shelf_pick(robot):\n    # Steps:\n    #  1. Move the gripper to the target location\n    #  2. Grab the block\n    # Move the gripper to the target location.\n  ',
        '# Steps:\n    #  1. Pick up the block\n    #  2. Move the block to the target location\n    #  3. Drop the block\n    # First, pick up the block.\n    # We need to put the gripper above the block before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not almost vertically aligned with block"):\n        robot.put("gripper above block")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with block and the robot\'s gripper is open"):\n        robot.put("gripper around block")\n    # As long as the gripper is still vertically aligned with the block,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with block"):\n        robot.pull("block up")\n    # Once the gripper is around the block, we can move the block to the target\n    # location.\n    if check("the robot\'s gripper is around block"):\n        robot.move("block to target location")\n    # Once the block is at the target location, we can drop it.\n    if check("the robot\'s gripper is around block and the block is at target location"):\n        robot.drop("block")\n\n\n# shelf-pick: pick up the block at the target location\ndef shelf_pick(robot',
    ],
    "soccer": [
        '# Steps:\n    #  1. Put gripper right of the soccer ball\n    #  2. Start pushing against the soccer ball to move it to the target\n    #  3. Push the soccer ball to the target harder\n    # If the robot\'s gripper is not vertically lined up with the soccer ball,\n    # we should move the gripper near the soccer ball to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the soccer ball and the robot\'s gripper is below the the soccer ball"):\n        robot.move("gripper to right of soccer ball")\n    # If the robot\'s gripper is near the soccer ball we can probably slide the\n    # soccer ball to the target now by moving the gripper left.\n    if check("the robot\'s gripper is near the soccer ball"):\n        robot.slide("soccer ball to target")\n    # If the robot\'s gripper is starting to be in front of the soccer ball,\n    # push harder.\n    if check("the robot\'s gripper is is in front of the soccer ball"):\n        robot.push("soccer ball to target harder")\n\n\n# soccer-kick: kick the soccer ball into the target location\ndef soccer_kick(robot):\n    # Steps:\n    #  1. Put gripper right of the soccer ball\n    #  2. Start pushing against the soccer ball to move it to the target\n    #  3. Kick the soccer ball to the target harder\n    # If the robot\'s gripper is not vertically lined up with the soccer ball,\n ',
        '# Steps:\n    #  1. Put gripper above the soccer ball\n    #  2. Drop gripper around soccer ball\n    #  3. Push soccer ball into the target location\n    # First, put the gripper above the soccer ball.\n    if check("the robot\'s gripper is not vertically aligned with soccer ball"):\n        robot.put("gripper above soccer ball")\n    # If the gripper is above the soccer ball, we can probably grab it by\n    # moving the gripper down down around it.\n    if check("the robot\'s gripper is vertically aligned with soccer ball"):\n        robot.put("gripper around soccer ball")\n    # If the gripper is around the soccer ball, we can probably push it into\n    # the target location by moving the gripper left.\n    if check("the robot\'s gripper is around soccer ball"):\n        robot.push("soccer ball into target location")\n\n\n# soccer-kick: kick the soccer ball into the target location\ndef soccer_kick(robot):\n    # Steps',
        '# Steps:\n    #  1. Put gripper above the soccer ball\n    #  2. Drop gripper around soccer ball\n    #  3. Push soccer ball to target location\n    # First, put the gripper above the soccer ball.\n    if check("the robot\'s gripper is not vertically aligned with the soccer ball"):\n        robot.put("gripper above soccer ball")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way way.\n    if check("the robot\'s gripper is almost vertically aligned with the soccer ball and the robot\'s gripper is open"):\n        robot.put("gripper around soccer ball")\n    # As long as the gripper is still vertically aligned with the soccer ball,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the soccer ball"):\n        robot.pull("away from soccer ball")\n\n\n# soccer-kick: kick the soccer ball into the target location\ndef soccer_',
        '# Steps:\n    #  1. Put gripper above the ball\n    #  2. Grab the ball with the gripper\n    #  3. Push the ball into the goal\n    # First, put the gripper above the ball.\n    if check("the robot\'s gripper is not vertically aligned with the ball"):\n        robot.put("gripper above ball")\n    # If the gripper is aligned with the ball, grab it.\n    if check("the robot\'s gripper is vertically aligned aligned with the ball"):\n        robot.grab("ball")\n    # If the ball is not in the goal, push the ball into the goal.\n    if check("the ball is not in the goal"):\n        robot.push("ball into goal")\n\n\n# soccer-kick: kick the soccer ball into the target location\ndef soccer_kick(robot):\n    # Steps:\n    #  1. Put gripper above the ball\n    #  2. Kick the ball into the goal\n    # First, put the',
        '# Steps:\n    #  1. Put gripper above soccer ball\n    #  2. Drop gripper around soccer ball\n    #  3. Push soccer ball into the target location\n    # First, put the gripper above the soccer ball.\n    if check("the robot\'s gripper is not almost vertically aligned with soccer ball"):\n        robot.put("gripper above soccer ball")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way way.\n    if check("the robot\'s gripper is almost vertically aligned with soccer ball and the robot\'s gripper is open"):\n        robot.put("gripper around soccer ball")\n    # As long as the gripper is still vertically aligned with the soccer ball,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with soccer ball"):\n        robot.pull("away from soccer ball")\n\n\n# soccer-kick: kick the soccer ball into the target location\ndef soccer_kick(',
        '# Steps:\n    #  1. Put gripper above soccer ball\n    #  2. Grab soccer ball\n    #  3. Align soccer ball with target\n    #  4. Push soccer ball into target\n    # First, put the gripper above the soccer ball.\n    if check("the robot\'s gripper is not vertically aligned with soccer ball"):\n        robot.put("gripper above soccer ball")\n    # If the gripper is still not around the soccer ball, go back to putting putting the\n    # gripper above the soccer ball.\n    if check("the robot\'s gripper is not around soccer ball"):\n        robot.grab("soccer ball")\n    # As long as the gripper is still mostly around the soccer ball and the\n    # soccer ball isn\'t lined up with the target, line up the soccer ball with\n    # the target.\n    if check("the robot\'s gripper is around soccer ball and the soccer ball is not horizontally aligned with target"):\n        robot.align("soccer ball to target")\n    # If the soccer ball is lined up with the target, push it into the target.\n    if check("the soccer ball is horizontally aligned with target"):\n        robot.push("soccer ball into target")\n\n\n# soccer-goal: push the soccer ball into the goal\ndef soccer_goal(robot):\n    # Steps:\n    #  1. Put gripper above soccer ball\n    #  2. Grab soccer ball\n    #  3. Align soccer ball with goal\n    #  4.',
        '# Steps:\n    #  1. Put gripper above the soccer ball\n    #  2. Grab the soccer ball with the gripper\n    #  3. Line the soccer ball up with the target\n    #  4. Push the soccer ball into the target\n    # First, put the gripper above the soccer ball.\n    if check("the robot\'s gripper is not vertically aligned with the soccer ball"):\n        robot.put("gripper above soccer ball")\n    # If the soccer ball ball becomes left of the gripper, go back to putting the\n    # gripper above the soccer ball.\n    if check("soccer ball is not left of the robot\'s gripper and soccer ball is not forward aligned with the robot\'s gripper"):\n        robot.grab("soccer ball")\n    # As long the gripper is still mostly around the soccer ball and the soccer\n    # ball isn\'t lined up with the target, line up the soccer ball with the\n    # target.\n    if check("the robot\'s gripper is forward aligned with with the soccer ball and the soccer ball is not horizontally aligned with target"):\n        robot.align("soccer ball to target")\n    # If the soccer ball is lined up with the target to the side, insert it.\n    if check("soccer ball is horizontally aligned with target"):\n        robot.insert("soccer ball into target")\n\n\n# soccer-kick: kick the soccer ball into the target location\ndef soccer_kick(robot):\n    # Steps:\n    #  1. Put gripper above the soccer ball\n    #  2',
        '# Steps:\n    #  1. Put gripper above soccer ball\n    #  2. Drop gripper around soccer ball\n    #  3. Push soccer ball into target\n    # First, put the gripper above the soccer ball.\n    if check("the robot\'s gripper is not vertically aligned with soccer ball"):\n        robot.put("gripper above soccer ball")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with soccer ball and the robot\'s gripper is open"):\n        robot.put("gripper around soccer ball")\n    # As long as the gripper is still vertically aligned with the soccer ball,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with soccer ball"):\n        robot.pull("away from soccer ball")\n\n\n# soccer-goal: push the soccer ball into the goal\ndef soccer_goal(robot',
    ],
    "stick-push": [
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick with the gripper\n    #  3. Put gripper above the thermos\n    #  4. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is not around the stick, grab the stick stick.\n    if check("the robot\'s gripper is vertically aligned with the stick and the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # Put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # Push the thermos to the target location.\n    if check("the robot\'s gripper is vertically aligned with the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick with the gripper\n    #  3. Put gripper above the thermos\n    #  4. Pull the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Drop gripper around the stick\n    #  3. Pick up the stick\n    #  4. Move the stick to the thermos\n    #  5. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is not around the stick, drop it around the stick.\n    if check("the robot\'s gripper is vertically aligned with the stick and the robot\'s gripper is not around the stick"):\n        robot.put("gripper around stick")\n    # If the gripper is around the stick, pick it up.\n    if check("the robot\'s gripper is around the stick"):\n        robot.pick("stick")\n    # Move the stick to the thermos.\n    if check("the robot\'s gripper is is holding the stick"):\n        robot.move("stick to thermos")\n    # Push the thermos to the target location.\n    if check("the robot\'s gripper is holding the stick and the thermos is in front of the stick"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):\n    # Steps:\n    #  1. Put gripper above the stick\n    #  2. Drop gripper around the stick',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is not around the stick, go back to putting the gripper gripper\n    # above the stick.\n    if check("the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # Put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # If the gripper is not around the thermos, go back to putting the gripper\n    # above the thermos.\n    if check("the robot\'s gripper is not around the thermos"):\n        robot.grab("thermos")\n    # Push the thermos to the target location.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  ',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick with the gripper\n    #  3. Put gripper above the thermos\n    #  4. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is not around the stick, go back to to putting the gripper\n    # above the stick.\n    if check("the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # Put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # If the gripper is not around the thermos, go back to putting the gripper\n    # above the thermos.\n    if check("the robot\'s gripper is not around the thermos thermos"):\n        robot.grab("thermos")\n    # Push the thermos to the target location.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick with the gripper\n    #  3. Put gripper above the thermos\n ',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Line up the stick with the thermos\n    #  4. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # As long as the gripper is not around the stick, grab the the stick.\n    if check("the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # As long as the gripper is around the stick and the stick is not lined up\n    # with the thermos, line up the stick with the thermos.\n    if check("the robot\'s gripper is around the stick and the stick is not forward aligned with the thermos"):\n        robot.align("stick to thermos")\n    # As long as the gripper is around the stick and the stick is lined up with with\n    # the thermos, push the thermos to the target location.\n    if check("the robot\'s gripper is around the stick and the stick is forward aligned with the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Line up the stick with the thermos\n',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Move the stick to the left of the thermos\n    #  4. Move the stick to the right of the thermos\n    #  5. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above above stick")\n    # If the stick becomes left of the gripper, go back to putting the gripper\n    # above the stick.\n    if check("stick is not left of the robot\'s gripper"):\n        robot.grab("stick")\n    # Move the stick left of the thermos.\n    if check("stick is not left of the thermos"):\n        robot.move("stick to left of thermos")\n    # Move the stick right of the thermos.\n    if check("stick is left of the thermos"):\n        robot \n        robot.move("stick to right of thermos")\n    # Push the thermos to the target location.\n    if check("stick is right of the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Move the stick to the right of the thermos\n  ',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is not around the stick, go back to putting the gripper gripper\n    # above the stick.\n    if check("the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # Put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # If the gripper is not around the thermos, go back to putting the gripper\n    # above the thermos.\n    if check("the robot\'s gripper is not around the thermos"):\n        robot.grab("thermos")\n    # Push the thermos to the target location.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  ',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the stick is left of the gripper, we should grab it. the stick.\n    if check("the robot\'s gripper is forward aligned with the stick and the stick is left of the robot\'s gripper"):\n        robot.grab("stick")\n    # Put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # If the gripper is lined up with the thermos, push the thermos to the\n    # target location.\n    if check("the robot\'s gripper is forward aligned with with the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick-pull: use the stick to pull the thermos to the target location\ndef stick_pull(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Pull the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper',
    ],
    "stick-pull": [
        '# Steps:\n    #  1. Put the gripper above the stick\n    #  2. Grab the stick with the gripper\n    #  3. Move the gripper to the left of the thermos\n    #  4. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is not around the the stick, grab the stick.\n    if check("the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # Move the gripper to the left of the thermos.\n    if check("the robot\'s gripper is not left of the thermos"):\n        robot.move("gripper to left of thermos")\n    # Push the thermos to the target location.\n    if check("the robot\'s gripper is left of the thermos"):\n        robot.push("thermos to target location")\n\n\n# stick',
        '# Steps:\n    #  1. Put the gripper above the stick\n    #  2. Grab the stick\n    #  3. Position the gripper above the thermos\n    #  4. Drop the gripper around the thermos\n    #  5. Pull the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the stick becomes left of the gripper, go back to putting the gripper\n    # above the stick.\n    if check("stick is not left of the robot\'s gripper"):\n        robot.grab("stick")\n    # As long the gripper is still mostly around the stick and the stick isn\'t\n    # lined up with the thermos, line up the stick with the thermos.\n    if check("the robot\'s gripper is forward aligned with the stick and the stick is not vertically aligned with the thermos"):\n        robot. \n        robot.align("stick to thermos")\n    # If the stick is lined up with the thermos, drop the gripper around the\n    # thermos.\n    if check("the robot\'s gripper is vertically aligned with the stick and the stick is vertically aligned with the thermos"):\n        robot.drop("gripper around thermos")\n    # If the gripper is around the thermos, pull the thermos to the target\n    # location.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.pull("thermos to to target location")\n\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):# Steps:\n    #  1. Put the gripper above the stick\n    #  2. Grab the stick\n    #  3. Position the gripper above the thermos\n    #  4. Drop the gripper around the thermos\n    #  5. Push the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Drop the stick onto the thermos\n    #  5. Pull the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # \n    # If the stick is left of the gripper, go back to putting the gripper above\n    # the stick.\n    if check("the robot\'s gripper is forward aligned with the stick and the stick is left of the robot\'s gripper"):\n        robot.grab("stick")\n    # Now that we have the stick, put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # If the thermos is left of of the gripper, go back to putting the gripper\n    # above the thermos.\n    if check("the robot\'s gripper is forward aligned with the thermos and the thermos is left of the robot\'s gripper"):\n        robot.drop("stick onto thermos")\n    # Now that the stick is on the thermos, pull the thermos to the target\n    # location.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.pull("thermos to target location")\n\n\n# stick-push: use the stick to push',
        '# Steps:\n    #  1. Put gripper above stick\n    #  2. Grab stick with gripper\n    #  3. Put gripper above the thermos\n    #  4. Drop gripper around thermos\n    #  5. Pull thermos to target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is is not around the stick, grab the stick.\n    if check("the robot\'s gripper is vertically aligned with the stick and the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # Put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # Drop the gripper around the thermos.\n    if check("the robot\'s gripper is vertically aligned with the thermos and the robot\'s gripper is is not around the thermos"):\n        robot.put("gripper around thermos")\n    # Pull the thermos to the target location.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.pull("thermos to target location")\n\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):# Steps:\n    #  1. Put gripper above stick\n    #  2. Grab stick with gripper\n    #  3. Put gripper above the',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Drop gripper around thermos\n    #  5. Pull thermos to target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is is not around the stick, grab the stick.\n    if check("the robot\'s gripper is vertically aligned with the stick and the robot\'s gripper is not around the stick"):\n        robot.grab("stick")\n    # If the gripper is around the stick, put the gripper above the thermos.\n    if check("the robot\'s gripper is around the stick"):\n        robot.put("gripper above thermos")\n    # If the gripper is above the thermos, drop the gripper around the thermos.\n    if check("the robot\'s gripper gripper is vertically aligned with the thermos and the robot\'s gripper is not around the thermos"):\n        robot.put("gripper around thermos")\n    # If the gripper is around the thermos, pull the thermos to the target\n    # location.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.pull("thermos to target location")\n\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):# Steps:\n    #  1. Put gripper above the',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Drop gripper around the stick\n    #  3. Pull the stick\n    #  4. Put gripper above the thermos\n    #  5. Drop gripper around the thermos\n    #  6. Pull the thermos\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("g \n        robot.put("gripper above stick")\n    # If the stick becomes left of the gripper, go back to putting the gripper\n    # above the stick.\n    if check("stick is not left of the robot\'s gripper"):\n        robot.put("gripper around stick")\n    # As long as the gripper is still mostly around the stick, pull it.\n    if check("the robot\'s gripper is around the stick"):\n        robot.pull("stick")\n    # Once the stick is pulled, put the gripper gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # If the thermos becomes left of the gripper, go back to putting the gripper\n    # above the thermos.\n    if check("thermos is not left of the robot\'s gripper"):\n        robot.put("gripper around thermos")\n    # As long as the gripper is still mostly around the thermos, pull it.\n    if check("the robot\'s gripper is is around the thermos"):\n        robot.pull("thermos")\n\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):\n    # Steps:\n    #  1. Put gripper above the stick\n    #  2. Drop gripper around the stick\n    #  3. Push the stick\n    #  4. Put gripper above the thermos\n    #  5. Drop gripper around the thermos\n    #  6. Push the thermos',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Drop gripper around the thermos\n    #  5. Pull the thermos to the target location\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If If the stick becomes left of the gripper, go back to putting the gripper\n    # above the stick.\n    # Because the stick is a long object, check if the gripper is lined up with it\n    # from the front instead of around it.\n    if check("stick is not left of the robot\'s gripper and stick is not forward aligned with the robot\'s gripper"):\n        robot.grab("stick")\n    # As long the gripper is still mostly around the stick and the stick isn\'t\n    # lined up with the thermos thermos, line up the stick with the thermos.\n    if check("the robot\'s gripper is forward aligned with the stick and the stick is not horizontally aligned with the thermos"):\n        robot.align("stick to thermos")\n    # If the stick is lined up with the thermos to the side, insert it.\n    if check("stick is horizontally aligned with thermos"):\n        robot.drop("gripper around thermos")\n    # If the gripper is around the thermos, pull the thermos to the target\n    # location.\n    if check(" check("the robot\'s gripper is around the thermos"):\n        robot.pull("thermos to target location")\n\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):# Steps:\n    #  1. Put gripper above the stick\n    #  2. Grab the stick\n    #  3. Put gripper above the thermos\n    #  4. Drop gripper around the thermos\n    #  5. Push the thermos to the target location\n   ',
        '# Steps:\n    #  1. Put gripper above the stick\n    #  2. Drop gripper around stick\n    #  3. Pull stick\n    #  4. Put gripper above the thermos\n    #  5. Drop gripper around thermos\n    #  6. Pull thermos\n    # First, put the gripper above the stick.\n    if check("the robot\'s gripper is not vertically aligned with the stick"):\n        robot.put("gripper above stick")\n    # If the gripper is not around the stick, grab it.\n    if check("the robot\'s gripper is not around the stick"):\n        robot.put("gripper around stick")\n    # Pull the stick.\n    if check("the robot\'s gripper is around the stick"):\n        robot.pull("stick")\n    # Put the gripper above the thermos.\n    if check("the robot\'s gripper is not vertically aligned with the thermos"):\n        robot.put("gripper above thermos")\n    # \n    # If the gripper is not around the thermos, grab it.\n    if check("the robot\'s gripper is not around the thermos"):\n        robot.put("gripper around thermos")\n    # Pull the thermos.\n    if check("the robot\'s gripper is around the thermos"):\n        robot.pull("thermos")\n\n\n# stick-push: use the stick to push the thermos to the target location\ndef stick_push(robot):# Steps:\n    #  1. Put gripper above the stick\n  ',
    ],
    "sweep-into": [
        '\n    # Steps:\n    #  1. Grab the cube\n    #  2. Move the cube to the target location\n    # First, grab the cube.\n    if check("the robot\'s gripper is not around the cube"):\n        robot.grab("cube")\n    # Now that the cube is grabbed, move it to the target location.\n    if check("the robot\'s gripper is around the cube"):\n        robot.move("cube to target location")\n\n\n# sweep-out: grab',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Move the gripper to the target location\n    #  5. Drop the cube\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the the gripper is not around the cube, drop it around the cube.\n    if check("the robot\'s gripper is vertically aligned with the cube and the robot\'s gripper is not around cube"):\n        robot.put("gripper around cube")\n    # If the gripper is around the cube, pick it up.\n    if check("the robot\'s gripper is around cube"):\n        robot.pick("cube")\n    # Move the gripper to the target location.\n    if check("the robot\'s gripper is holding cube"):\n        robot. \n        robot.move("gripper to target location")\n    # Drop the cube.\n    if check("the robot\'s gripper is holding cube"):\n        robot.drop("cube")\n\n\n# sweep-out: grab the cube and move it to the target location\ndef sweep_out(robot):# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Pick up the cube\n    #  4. Move the gripper to',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Sweep the cube to the target location\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, drop it around the cube.\n    if check("the robot\'s gripper gripper is vertically aligned with the cube and the robot\'s gripper is not around cube"):\n        robot.put("gripper around cube")\n    # If the gripper is around the cube, sweep it to the target location.\n    if check("the robot\'s gripper is around cube"):\n        robot.sweep("cube to target location")\n\n\n# sweep-out: grab the cube and move it out of the target location\ndef sweep_out(robot):\n    # Steps:\n    #  1. Put gripper above the cube\n   ',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube\n    #  3. Move the cube to the target location\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, go back to putting the gripper\n    # above the cube.\n    if \n    if check("the robot\'s gripper is not around the cube"):\n        robot.grab("cube")\n    # Move the cube to the target location.\n    if check("the robot\'s gripper is around the cube"):\n        robot.move("cube to target location")\n\n\n# sweep-out: move the cube out of the target location\ndef sweep_out(robot):\n    # Steps:\n    #  1. Move the cube out of the target location\n    # Move the cube out of the target location',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Move the cube to the target location\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    if check("the robot\'s gripper is vertically aligned with the cube and the robot\'s gripper is not around the cube"):\n        robot.put("gripper around cube")\n    if \n    if check("the robot\'s gripper is around the cube"):\n        robot.move("cube to target location")\n\n\n# sweep-out: grab the cube and move it out of the target location\ndef sweep_out(robot):# Steps:\n    #  1. Put gripper above the cube\n    #  2. Drop gripper around the cube\n    #  3. Move the cube out of the target location\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube\n    #  3. Move the gripper to the target location\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not almost vertically aligned with cube"):\n        robot.put("gripper above cube")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with cube and the robot\'s gripper is open"):\n        robot.put("gripper around cube")\n    # As long as the gripper is still vertically aligned with the cube,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with cube"):\n        robot.pull("cube")\n    # Once the gripper is around the cube, we can just move it to the target\n    # location. location.\n    if check("the robot\'s gripper is around cube"):\n        robot.move("gripper to target location")\n\n\n# sweep-out: grab the cube and move it out of the target location\ndef sweep_out(robot):\n    # Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube\n    #  3. Move the gripper to the target location\n    # First, put the gripper above the cube.\n    if check("the',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube\n    #  3. Move the cube to the target location\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, go back to putting the gripper\n    # above the cube.\n    if \n    if check("the robot\'s gripper is not around the cube"):\n        robot.grab("cube")\n    # If the cube is not at the target location, move it there.\n    if check("the cube is not at the target location"):\n        robot.move("cube to target location")\n\n\n# sweep-away: grab the cube and move it away from the target location\ndef sweep_away(robot):# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube',
        '# Steps:\n    #  1. Pick up the cube\n    #  2. Align the cube with the target location\n    #  3. Move the cube to the target location\n    # First, pick up the cube.\n    if check("the robot\'s gripper is not around the cube"):\n        robot.grab("cube")\n    # If the cube is not aligned with the target location, align it.\n    if check("the cube is not horizontally aligned with the target location"):\n        robot.align("cube to target location")\n    # Move the cube to the target location.\n    if check("the cube is horizontally aligned with the target location"):\n        robot.move("cube to target location")\n\n\n# sweep-out: grab the cube and move it to the target location\ndef sweep_out(robot):# Steps:\n    #  1. Pick up the cube\n    #  2. Align the cube with the target location\n    #  3. Move the cube to the target location\n ',
    ],
    "sweep": [
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Grab the cube\n    #  3. Move the cube to the target location\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the cube is left of the gripper, go back to putting the gripper above\n    # the cube.\n    if check check("cube is not left of the robot\'s gripper and cube is not forward aligned with the robot\'s gripper"):\n        robot.grab("cube")\n    # As long the gripper is still mostly around the cube and the cube isn\'t\n    # lined up with the target location, move the cube to the target location.\n    if check("the robot\'s gripper is forward aligned with the cube and the cube is not horizontally aligned with target location"):\n        robot.align("cube to target location")\n\n\n# peg-insert-topdown: insert the peg',
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Grab the cube with the gripper\n    #  3. Move the gripper sideways to the target location\n    #  4. Drop the cube\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the cube becomes left of the gripper, go back to putting the the gripper\n    # above the cube.\n    if check("cube is not left of the robot\'s gripper and cube is not forward aligned with the robot\'s gripper"):\n        robot.grab("cube")\n    # As long the gripper is still mostly around the cube and the cube isn\'t lined\n    # up with the target location, line up the cube with the target location.\n    if check("the robot\'s gripper is forward aligned with the cube and the cube is not horizontally aligned with the target location"):\n        robot.align("cube \n        robot.align("cube to target location")\n    # If the cube is lined up with the target location, drop it.\n    if check("cube is horizontally aligned with the target location"):\n        robot.drop("cube")\n\n\n# pickup: grab the cube\ndef pickup(robot):\n    # Steps:\n    #  1. Put gripper above cube\n    #  2. Grab the cube with the gripper\n    # First, put the gripper above the cube.\n    if check("the robot\'',
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Grab cube\n    #  3. Align gripper with target location\n    #  4. Move gripper to target location\n    if check("the robot\'s gripper is not vertically aligned with cube"):\n        robot.put("gripper above cube")\n    if check("the robot\'s gripper is vertically aligned with cube and the robot\'s gripper is not around cube"):\n        robot.grab("cube")\n    if check("the robot\'s gripper is around cube and the robot\'s gripper is not forward aligned with target location"):\n        robot.align("gripper to target location")\n    if check("the robot\'s gripper is forward aligned with target location"):\n        robot.move("gripper to target location")\n\n\n# sweep-left: move the cube to the left\ndef sweep_left(robot):\n    # Steps:\n    #  1. Put gripper above cube\n    #  2. Grab cube\n  ',
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Grab cube\n    #  3. Move gripper sideways to target location\n    #  4. Drop cube\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # As long as the gripper is above the cube, grab the cube.\n    if check(" check("the robot\'s gripper is vertically aligned with the cube and the robot\'s gripper is not around cube"):\n        robot.grab("cube")\n    # If the gripper is around the cube, move it sideways to the target location.\n    if check("the robot\'s gripper is around cube"):\n        robot.move("gripper to target location")\n    # If the gripper is at the target location, drop the cube.\n    if check("the robot\'s gripper is at target location"):\n        robot.drop("cube")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube with the gripper\n    #  3. Move the gripper to the target location\n    #  4. Drop the cube\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, go back to putting the the gripper\n    # above the cube.\n    if check("the robot\'s gripper is not around the cube"):\n        robot.grab("cube")\n    # If the gripper is still around the cube, move it to the target location.\n    if check("the robot\'s gripper is around the cube"):\n        robot.move("gripper to target location")\n    # If the gripper is still around the cube, drop it.\n    if check("the robot\'s gripper is around the cube"):\n        robot.drop("cube',
        '# Steps:\n    #  1. Put gripper above cube\n    #  2. Grab cube\n    #  3. Move gripper sideways to the target location\n    #  4. Drop cube\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, go back to putting the gripper\n    # \n    # above the cube.\n    if check("the robot\'s gripper is not around the cube"):\n        robot.grab("cube")\n    # As long as the gripper is still around the cube, move it sideways to the\n    # target location.\n    if check("the robot\'s gripper is around the cube"):\n        robot.move("gripper to target location")\n    # If the gripper is still around the cube, drop it.\n    if check("the robot\'s gripper is around the cube"):\n',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube with the gripper\n    #  3. Move the gripper sideways to the target location\n    #  4. Drop the cube\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the gripper is not around the cube, go back to putting putting the gripper\n    # above the cube.\n    if check("the robot\'s gripper is not around the cube"):\n        robot.grab("cube")\n    # If the cube is not left of the gripper, move the cube left.\n    if check("the cube is not left of the robot\'s gripper"):\n        robot.move("cube left")\n    # If the cube is left of the gripper, drop the cube.\n    if check("the cube is left of the robot\'s gripper"):\n        robot.drop(" \n        robot.drop("cube")\n\n\n# sweep-right: grab the cube and move sideways it to the right\ndef sweep_right(robot):\n    # Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube with the gripper\n    #  3. Move the gripper sideways to the right\n    #  4. Drop the cube\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned',
        '# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube with the gripper\n    #  3. Align the cube with the target location\n    #  4. Slide the cube sideways to the target location\n    # First, put the gripper above the cube.\n    if check("the robot\'s gripper is not vertically aligned with the cube"):\n        robot.put("gripper above cube")\n    # If the cube becomes left of the gripper, gripper, go back to putting the gripper\n    # above the cube.\n    if check("cube is not left of the robot\'s gripper and cube is not forward aligned with the robot\'s gripper"):\n        robot.grab("cube")\n    # As long the gripper is still mostly around the cube and the cube isn\'t lined\n    # up with the target location, line up the cube with the target location.\n    if check("the robot\'s gripper is forward aligned with the cube and the cube is not horizontally aligned with target location"):\n        robot.align("cube to target location")\n    # If the cube is lined up with the target location to the side, slide it.\n    if check("cube is horizontally aligned with target location"):\n        robot.slide("cube to target location")\n\n\n# sweep-topdown: grab the cube and move it to the target location from above\ndef sweep_topdown(robot):# Steps:\n    #  1. Put gripper above the cube\n    #  2. Grab the cube with the gripper\n    #  ',
    ],
    "window-open": [
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the window handle and the robot\'s gripper is below the window handle"):\n        robot.move("gripper to right of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window open now by moving the gripper left.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window left")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window left harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
    ],
    "window-close": [
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("',
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-open: slide the window open to the left\ndef window_open(robot):\n    # Steps:\n    #  1. Put gripper right of the window handle\n    #  2. Start pushing against the window handle to open the window\n    #  3. Push the window open harder\n    # If the robot\'s gripper is not vertically lined up with the window handle,\n    # we should move the gripper near the window handle to start pushing\n',
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
        '# Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n    if check("the window handle is right of the robot\'s gripper and the robot\'s gripper is not near the window handle"):\n        robot.move \n        robot.move("gripper to left of window handle")\n    # If the robot\'s gripper is near the window handle we can probably slide the\n    # window close now by moving the gripper right.\n    if check("the robot\'s gripper is near the window handle"):\n        robot.slide("window right")\n    # If the robot\'s gripper is starting to be in front of the window handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the window handle"):\n        robot.push("window right harder")\n\n\n# window-close: slide the window closed to the right\ndef window_close(robot):\n    # Steps:\n    #  1. Put gripper left of the window handle\n    #  2. Start pushing against the window handle to close the window\n    #  3. Push the window closed harder\n    # If the the window handle is right of the robot\'s gripper, we should move the\n    # gripper near the window handle to start pushing\n  ',
    ],
    "hand-insert": [
        '# Steps:\n    #  1. Pick up the puck\n    #  2. Move the gripper to the target location\n    #  3. Drop the puck\n    # First, pick up the puck.\n    if check("the robot\'s gripper is not around the puck"):\n        robot.pick("up puck")\n    # Move the gripper to the target location.\n    if check("the robot\'s gripper is around the puck"):\n        robot.move("gripper to target location location")\n    # Drop the puck.\n    if check("the robot\'s gripper is at the target location"):\n        robot.drop("puck")\n\n\n# hand-remove: pick up the puck and move it to the target location\ndef hand_remove(robot):# Steps:\n    #  1. Pick up the puck\n    #  2. Move the gripper to the target location\n    #  3. Drop the puck\n    # First, pick up the puck.\n    if check("the',
        '# Steps:\n    #  1. Put gripper above the puck\n    #  2. Drop gripper around the puck\n    #  3. Pick up the puck\n    #  4. Move the gripper to the target location\n    #  5. Drop the puck\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck")\n    # If the gripper is not lined up with the puck, move it to the target\n    # location.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.move("gripper to target location")\n    # If the gripper is lined up with the target location, drop the puck.\n    if check("the robot\'s gripper is vertically aligned with the target location"):\n        robot.drop("puck")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top',
        '# Steps:\n    #  1. Put gripper above the puck\n    #  2. Drop gripper around the puck\n    #  3. Pick up the puck\n    #  4. Move the gripper to the target location\n    #  5. Drop the puck\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck")\n    # \n    # Once the gripper is around the puck, we can just move the gripper\n    # to the target location.\n    if check("the robot\'s gripper is around puck"):\n        robot.move("gripper to target location")\n    # Once the gripper is at the target location, we can just drop the puck.\n    if check("the robot\'s gripper is at target location"):\n        robot.drop("puck")\n\n\n# peg-insert-topdown: insert the peg into the hole from the top\ndef peg_insert',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move the puck to the target location\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is almost lined up, closing it should line it up up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("away from puck")\n    # As long as the gripper is still vertically aligned with the puck puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("away from puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("away from puck")\n    # As long as the gripper is still vertically aligned with the puck,\n ',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move the gripper to the target location\n    #  5. Drop the puck\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with the puck"):\n        robot.put("gripper above puck")\n    # As long as the the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is vertically aligned with the puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck, it\'s being\n    # opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck")\n    # As long as as the gripper is still vertically aligned with the puck, it\'s being\n    # opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck")\n    # As long as the gripper is still vertically aligned with the puck, it\'s being\n    # opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the puck"):\n        robot.pull("puck")\n    # As long as the gripper is still vertically aligned with',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up puck\n    #  4. Put gripper above goal\n    #  5. Drop gripper around goal\n    #  6. Place puck at goal\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not almost vertically aligned with puck"):\n        robot.put("gripper above puck puck")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck \n        robot.pull("puck")\n    # Put the gripper above the goal.\n    if check("the robot\'s gripper is not almost vertically aligned with goal"):\n        robot.put("gripper above goal")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with goal and the robot\'s gripper is open"):\n        robot.put("gripper around goal")\n    # As long as the the gripper is still vertically aligned with the goal,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with goal"):\n        robot.pull("goal")\n        robot.pull("goal")\n    # Place the puck at the goal.\n    if check("the robot\'s gripper is around goal"):\n        robot.put("puck at goal")\n\n\n# hand-remove: pick up the puck and move it to the target location\ndef hand_remove(robot):# Steps:\n',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Move the puck to the target location\n    #  5. Drop the puck\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper gripper is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck, it\'s being\n    # opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck")\n    # As long as the gripper is is still vertically aligned with the puck, it\'s being\n    # opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck")\n    # As long as the gripper is still vertically aligned with the puck, it\'s being\n    # opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck")\n    # As long as the gripper is still vertically aligned with the puck, it\'',
        '# Steps:\n    #  1. Put gripper above puck\n    #  2. Drop gripper around puck\n    #  3. Pick up the puck\n    #  4. Align the puck with the target\n    #  5. Drop the puck\n    # First, put the gripper above the puck.\n    if check("the robot\'s gripper is not vertically aligned with puck"):\n        robot.put("gripper above puck")\n    # As long as the gripper is is almost lined up, closing it should line it up\n    # all the way.\n    if check("the robot\'s gripper is almost vertically aligned with puck and the robot\'s gripper is open"):\n        robot.put("gripper around puck")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck up")\n    # As long as the gripper gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with puck"):\n        robot.pull("puck up")\n    # As long as the gripper is still vertically aligned with the puck',
    ],
    "door-close": [
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull closed the door\n    # We need to put the gripper above the door handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # Once the gripper is lined up up above the door handle, we should be able to\n    # grab the door handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with door handle and the robot\'s gripper is not around door handle"):\n        robot.put("gripper around door handle")\n    # Once the gripper is around the door handle, we can just pull the door\n    # closed.\n    if check("the robot\'s gripper is around door handle"):\n        robot.pull("away from door")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull closed the door\n    # We need to put the gripper above the door handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # Once the gripper is lined up up above the door handle, we should be able to\n    # grab the door handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with door handle and the robot\'s gripper is not around door handle"):\n        robot.put("gripper around door handle")\n    # Once the gripper is around the door handle, we can just pull the door\n    # closed.\n    if check("the robot\'s gripper is around door handle"):\n        robot.pull("away from door")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull door closed\n    # We need to put the gripper above the door handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # Once the gripper is lined up above above the door handle, we should be able to\n    # grab the door handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with door handle and the robot\'s gripper is not around door handle"):\n        robot.put("gripper around door handle")\n    # Once the gripper is around the door handle, we can just pull the door\n    # closed.\n    if check("the robot\'s gripper is around door handle"):\n        robot.pull("away from door")\n\n\n# door',
        '# Steps:\n    #  1. Put gripper right of the door handle\n    #  2. Start pushing against the door handle to close the door\n    #  3. Push the door closed harder\n    # If the robot\'s gripper is not vertically lined up with the door handle,\n    # we should move the gripper near the door handle to start pushing\n    if check("the robot\'s gripper is not vertically aligned with the door handle and the robot\'s gripper is below the door handle"):\n        robot.move("gripper to right of door handle")\n    # If the robot\'s gripper is near the door handle we can probably slide the\n    # door open now by moving the gripper left.\n    if check("the robot\'s gripper is near the door handle"):\n        robot.slide("door right")\n    # If the robot\'s gripper is starting to be in front of the door handle,\n    # push harder.\n    if check("the robot\'s gripper is in front of the door handle"):\n        robot.push("door right harder")\n\n\n# door-open: push the door open to the target location\ndef door_open(robot):\n    # Steps:\n    #  1. Put gripper left of the door handle\n    #  2. Start pushing against the door handle to open the door\n    #  3. Push the door open harder\n    # If the robot\'s gripper is not vertically lined up with the door handle,\n    # we should move the gripper near the door handle to start pushing',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull closed the door\n    # We need to put the gripper above the door handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # Once the gripper is lined up up above the door handle, we should be able to\n    # grab the door handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with door handle and the robot\'s gripper is not around door handle"):\n        robot.put("gripper around door handle")\n    # Once the gripper is around the door handle, we can just pull the door\n    # closed.\n    if check("the robot\'s gripper is around door handle"):\n        robot.pull("away from door")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull closed the door\n    # We need to put the gripper above the door handle before we can grab it,\n    # because of the angle of the robot\'s gripper.\n    if check("the robot\'s gripper is not vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # Once the gripper is lined up up above the door handle, we should be able to\n    # grab the door handle by moving the gripper down around it.\n    if check("the robot\'s gripper is vertically aligned with door handle and the robot\'s gripper is not around door handle"):\n        robot.put("gripper around door handle")\n    # Once the gripper is around the door handle, we can just pull the door\n    # closed.\n    if check("the robot\'s gripper is around door handle"):\n        robot.pull("away from door")\n\n\n#',
        '# Steps:\n    #  1. Put gripper above the door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull the door closed\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with the door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("away from door")\n\n\n# door-open: pull the door open to the target location\ndef door_open',
        '# Steps:\n    #  1. Put gripper above door handle\n    #  2. Drop gripper around door handle\n    #  3. Pull the door closed\n    # First, put the gripper mostly above the door handle.\n    if check("the robot\'s gripper is not almost vertically aligned with door handle"):\n        robot.put("gripper above door handle")\n    # As long as the gripper is almost lined up, closing it should line it up\n    # all the way. way.\n    if check("the robot\'s gripper is almost vertically aligned with the door handle and the robot\'s gripper is open"):\n        robot.put("gripper around door handle")\n    # As long as the gripper is still vertically aligned with the door handle,\n    # it\'s being opened, so keep pulling.\n    if check("the robot\'s gripper is vertically aligned with the door handle"):\n        robot.pull("away from door")\n\n\n# door-open: pull the door open to the target location\ndef door_open',
    ],
}
